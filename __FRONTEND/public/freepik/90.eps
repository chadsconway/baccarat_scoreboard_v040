%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1812.m40.i030.n009.S.c12.644232490 White buttons chrome frame. 3d realistic web glass elements oval rectangle square circle chrome white button, interface vector set.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Max
%%CreationDate: 12/26/2018
%%BoundingBox: 0 0 600 450
%%HiResBoundingBox: 0 0 600 450
%%CropBox: 0 0 600 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.0 x530 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Печать</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-12-26T14:04:58+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-12-26T14:04:58+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-26T14:04:58+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FVssscSGSRgiLuWY0AxVI5/NPOQw6ZZy30g/aHwJXbufniqwaj5&#xA;yIDfo23Ud0Mp5fqpircfme7gdU1XTpLWu3qofUTqB2+eKp3bXVvdRCWCQSIe4OKquKuxVzMFBJNA&#xA;OpOKpFdeZwZmt9MtXv516lfhjB2/a+nFVgvvOJFfqFute3qE/wBMVb+u+cP+WK3/AODOKrD5g1yz&#xA;aupaWRD3mt35gVNNwafPFU6sdQtL6ATWz81PUdCPmD0xVEYqh7+9isrZ7iX7KCtB1OKpHb6x5pu4&#xA;RcW9hCsMlTGHc8qV2rTbFVX675w/5Yrf/gzirvrvnD/lit/+DOKu+u+cP+WK3/4M4q7675w/5Yrf&#xA;/gzirVt5g1GHUEs9WtkgMwrDJG1QT4GuKsgxVCanqcGnwerKCzH7Ea9Sf8++KpPFqvm25X1odOhi&#xA;hbeMSueZHYkbYqu+uecv+WO2/wCCb+uKu+uecv8Aljtv+Cb+uKu+uecv+WO2/wCCb+uKrZNb8yWR&#xA;Et/p8bWv+7JIX3TcbkHtiqe2l3DdwLNEaqeoPUHuDiqtirsVWyypFG0jmiKKk4qwS3v9Q806zJMk&#xA;jW/l+wdo147NczLVWoT0RDtUb8ulKbqstgMEEYjhRUQdFG2Kqn1jFWnlR1KuAynqDuMVYjrrX/lu&#xA;5TW9OYvpSALqVjSvGMf7uQj4vg7j+Xp03VZnYXsF7aR3MDBo5ACCN8VRGKsP816peXmrWnl7T5PS&#xA;aas17MADxgjI5AA1FXLBd+1T2xVPbOO3s4FhgXio6nqSe5Y9ycVV/rGKu+sYq43AIodweoxVievS&#xA;XGgaja6xZGmnvIIdRtRSgErALKvf4XO46UJOKs1gmSaFJUNVcVGKpL5yYrosrDYgVH0Yqp+Vbt38&#xA;u6e7mrvCrMfEnc4qmv1jFXfWMVd9YxV31jFWKeZrh28zaTGD8DJIzD3Vlp/xI4qzWP8Au1+QxVhv&#xA;mG4kfzbpUDH9yZSHQgEEBGam48VHTFWUfWMVd9YxV31jFXfWMVaeZXUo26sKEexxVjH5dXs8y38U&#xA;hqsd1cRp2oqSsqj6FAGKs0xV2KsR/MrVbiy8vyRWrcbq6KwQN1pJMwjjqP8AXcYqt0hbLTdMtrG3&#xA;IWK3jVFFd9h1J7nxOKov9IRfzj78Vd+kIv5x9+Ku/SEX84+/FVst5byxtG7BkcFWB7g4qlX5Z3Bt&#xA;Tf6EWrHp07RQb1AiKrLEo/1YpVX6MVZ2xopPgMVeeabOP8X6vcSEV9KCNa9gGlP48sVT/wDSEX84&#xA;+/FXfpCL+cffirv0hF/OPvxV36Qi/nH34qlXmqeG58t6lAWrztpRsd90O4xVkHlCd5tEgZ+vEfqx&#xA;VS87f8cOf/VOKpP5bvI49A09CwBEEe1f8kYqmX6Qi/nH34q79IRfzj78Vd+kIv5x9+Ku/SEX84+/&#xA;FUg1idZfM+kMpqOEw/FMVehR/wB2vyGKsE8yuE83aYxNAJGP/JJ8VTj9IRfzj78Vd+kIv5x9+Ku/&#xA;SEX84+/FXfpCL+cffirv0hF/OPvxVJvyyNW1L/mNuv8Ak++Ks+xV2KsA/NIlY9Pc/YW9s+XhT6zH&#xA;uf8AV+19GKrOfvirvU98Vd6nvirvU98Vd6nviqj5HcP5t1koPsTRo7b7t9Wib9TDFXo0n923yOKv&#xA;MIWp5h1b/nj/AMb4qj/U98Vd6nvirvU98Vd6nviqE1d66Vej/iiT/iBxVl3kj/jg2/8Aqj9WKu87&#xA;/wDHBuP9U/qxViOkPTSrIf8AFEf/ABAYqi/U98Vd6nvirvU98Vd6nviqAmavmHSf+e3/ABpir0+P&#xA;+7X5DFXn3nA08z6f/rP/AMm3xVv1PfFXep74q71PfFXep74q71PfFV35XGp1P/mOu/8Ak++KvQMV&#xA;dirFvzA0X9KaJcQVZTIjKHT7SkilV9x2xVh+h6o2o6cssihLyEmG+hH7E6AcwPbcMvipB74qjvUx&#xA;V3qYq71MVUb7ULewsZr65JWCBeTUFSewCjuzEgKO52xVNvyy0m5gsmvLxQt3du9xOBuFaRi3AHuq&#xA;V4qfAYqzpxVGHtirymblb+cdRgkNPrUEctuvj6Lssp/5LRjFUZzxV3qYq71MVd6mKpf5iuTDoV8y&#xA;mkkkTQwV6Gab91ED85HUYq9A8owNDo0KEUooG/yxVS88f8cC5/1G/VirCtLemmWf/GCP/iAxVFep&#xA;irvUxV3qYq71MVQhavmLSv8Ant/xpir1SP8Au1+QxV5350NPMth/rP8A8m2xVS9TFXepirvUxV3q&#xA;Yq71MVRP5Vmo1P8A5jrv/k++KvQsVdiqnPCs0TIwqDirzvWPLTaZqk2p2kRLTqqXCqxAdUqVPH7P&#xA;IcjvSv0bYqgYtRsZpPS9T05yaek/wuTUjZT16dsVVyEBoZAD4Hriqjc3tlamk0lZaVWL9o7VFFG+&#xA;Kqtpoba9cW73NuRb20vqwq9RVgOKkrXjtUkV6dulcVekWNoltAsailBiqIxVhfnDy8JbmDUYo+U9&#xA;qxePdh9pSjD4SvVWOKsfhvbWeX0amO52HoPQOduw/a6dR9NMVVKJ/vxfvxV3wf78X78ValltoIvV&#xA;mlCx9AxIAJArQHufbFW7HThrl1bN6TfVraQSxu3JeTcSo+HbajHqPf5KvS7SBYIFjG1BiqTedQDo&#xA;cwYVBU1HtirCIBGlvCIyFi9NDECf2Co49fbFV/IfzD7xiruQ/mH3jFXch/MPvGKu5D+YfeMVWxCP&#xA;9M6YTvKXf0yD+yFHP8eOKvUo/wC7X5DFWAeekS31OG9nQmGOvxivwFtuRABqKE4ql4aNlDLIpVhV&#xA;TUUI8Rirvh/34v3jFXfD/vxfvGKu+H/fi/eMVWyz28MbSyzIsa9WJAGKp9+XlokSXE8URhhuZHmC&#xA;MSTWQ8mO/ixJxVmuKuxV2KqU9vFMpVxXFWOar5J069BEkKuD1BGKpL/yrOwBosZCdOAZgtD1HEGm&#xA;+KpppXkLTLKnpwIlDXYAbnFWT2tlDbqAigUxVXxV2KrJYklQq4qDirG9Y8l6ffhhJErhuoIBxVKE&#xA;/L2OKqwvLGh34pLIo6U6KwGKrv8AATf7/n/5Hy/81Yqq2H5d6dBN6piBk2BdviJp4k1OKsssdOgt&#xA;EARQCMVReKoXUrJLy1aFxUEdMVYZ/wAq+ijZhA0kKMxYpHJIi1PU0VgN8Vb/AMBN/v8An/5Hy/8A&#xA;NWKu/wABN/v+f/kfL/zVirv8BN/v+f8A5Hy/81Yq7/ATf7/n/wCR8v8AzViqM0byTb2d79aILzGg&#xA;MjsztQdPiYk4qzACgA8MVQGq6VBfxFJFBqKUOKsQP5dWscrNbh4eVeXpO8dSeteJGKrv8BN/v+f/&#xA;AJHy/wDNWKu/wE3+/wCf/kfL/wA1Yq7/AAE3+/5/+R8v/NWKt2/5d2X1pZ5kM0i9HkZpCNqdWJ7Y&#xA;qzKxso7SERoKYqicVdirsVdirsVWNPApo0iqfAsBirX1q2/36n/BDFXfWrb/AH6n/BDFXfWrb/fq&#xA;f8EMVd9atv8Afqf8EMVd9atv9+p/wQxV31q2/wB+p/wQxV31q2/36n/BDFV6ujCqsGHiDXFW8Vdi&#xA;rsVdirsVcSB12xVTNzbg0MqAjqOQxV31q2/36n/BDFXfWrb/AH6n/BDFXfWrb/fqf8EMVd9atv8A&#xA;fqf8EMVd9atv9+p/wQxV31q2/wB+p/wQxV31q2/36n/BDFXfWrb/AH6n/BDFVySxv9hw3yIOKrsV&#xA;dirsVdirsVSfWvMlrp8sdnHSbUZ6+hbg7mnU0G9BXfFUF+h9U1FvU1O9kjjJqLaA8BSvcjFVVPJ3&#xA;l5BQROfEmRiTiq7/AAloH++m/wCDOKu/wloH++m/4M4q7/CWgf76b/gzirv8JaB/vpv+DOKu/wAJ&#xA;aB/vpv8Agzirv8JaB/vpv+DOKu/wloH++m/4M4qot5O0tCXspp7SUmvOORuo9sVU31jUtBUHV5Bc&#xA;WI+1eU48B1q/YD5/firJLe4huIVmhYPG4qrDFVTFXYqlWua/b6YIoRR7y5bhbQ92alfwAriqXjQL&#xA;nUT6usXcrBvs2sTFEA96YqrL5Q8vKAohag6fGcVb/wAJaB/vpv8Agzirv8JaB/vpv+DOKu/wloH+&#xA;+m/4M4q7/CWgf76b/gzirv8ACWgf76b/AIM4q7/CWgf76b/gzirv8JaB/vpv+DOKu/wloH++m/4M&#xA;4qpyeTtH3e3aa2m7SxyNUU9umKqY1e80ORItWm9WzkcRxXZ2oXNFDH5mm+KslVldQymqncHFW8Vd&#xA;iqX69q0GlaXPezMESJCxY9BQVJPyxVivlCxlCPrmop/uV1CjsH+1DF1SEeHEH4v8quKsl+s++Ku+&#xA;s++Ku+s++Ku+s++Ku+s++Ku+s++Ku+s++Ku+s++Ku+s++Ku+s++KrJnimiaKVQ8bijKdwRirGfK1&#xA;y+ga/J5ddidOmUz6WSa8YwQHiH/GNmFPZgO2Ks+xVp3CIzHoBXFWA6K/6T816nq1wOQsSLOzB341&#xA;VZZHX/W5qv8AscVZV9Z98Vd9Z98Vd9Z98Vd9Z98Vd9Z98Vd9Z98Vd9Z98Vd9Z98Vd9Z98Vd9Z98V&#xA;d9Z98VQmrW1tqWnXFlcoJIZkKsp9x+GKoX8vNTuLrRFt7ly9xZvJbSSHqzQO0TN/silcVZVirsVY&#xA;N+aE5NlaWhNI7i6topR/Mkk6K6/ShIxVeuoSKoUAUAoOuKt/pGXwH44q79Iy+A/HFXfpGXwH44q7&#xA;9Iy+A/HFXfpGXwH44q79Iy+A/HFXfpGXwH44q79Iy+A/HFXfpGXwH44q79Iy+A/HFXfpGXwH44qk&#xA;mv3Dtf6PdKAJIbrizCoJjeJ6r/wQU/Rir0y2fnBG3ioxVZe/7yS/6pxV5z5euWhfUeI+1dGv/ItM&#xA;VTj9Iy+A/HFXfpGXwH44q79Iy+A/HFXfpGXwH44q79Iy+A/HFXfpGXwH44q79Iy+A/HFXfpGXwH4&#xA;4q79Iy+A/HFXfpGXwH44q79Iy+A/HFXfpGXwH44qhvyxNW1L/mNu/wDk++Ks+xV2KsE/NOMpp0d6&#xA;QWjspYbqRVFWKW8qysqjfdglMVQgkBAYEEHcEGoPyIxV3qe+Ku9T3xV3qe+Ku9T3xV3qe+Ku9T3x&#xA;V3qe+Ku9T3xV3qe+Ku9T3xV3qe+KpXqjGfVdHskP7xp3uXXxiijKN0785ozir1W0UrbRg9lGKrb7&#xA;/eSX/VOKvLtGlUyajQ/Zu2Vh4ERp1xVMvU98Vd6nvirvU98Vd6nvirvU98Vd6nvirvU98Vd6nvir&#xA;vU98Vd6nvirvU98Vdz98VVvyur/uSJ/5brv8Lhxir0DFXYqluvaet7YPGRWoOKvNNHhvLH1tIulP&#xA;p2VPqc5I+KA7KpHWsX2f9Xiak8qKpgxZevTxxVr1MVd6mKu9TFXepirvUxV3qYq71MVd6mKu5nFV&#xA;1eCl3NAoqfkPliq7yTpF5fanNrV9H6bzcUt4SQfThSvFSVJUsSxZqdzSpABxV6UBQAeGKrJ05wuv&#xA;iMVeUtaz6b5jvrdkpaXxFwknhMoWNw1f5kVONNvhNdyMVRjFl6/firXqYq71MVd6mKu9TFXepirv&#xA;UxV3qYq71MVd6mKu9Q4qp3dy1raS3HpmV41JSFSAzsBsgJ2Bbp+vbFWR/lzpM9jpKm4PK5lLS3El&#xA;Kc5ZCXkan+U7E4qy/FXYq4gEUPTFWOeYPLMV4PUjqsg3V12IOKsOubXzDYHiYVvIxsGr6bgU77Mr&#xA;fh7nFUHLrkyMFGjX8ppuypbAV9udwp/DFVn6fn/6sWof8Baf9lOKu/T8/wD1YtQ/4C0/7KcVd+n5&#xA;/wDqxah/wFp/2U4q79Pz/wDVi1D/AIC0/wCynFXfp+f/AKsWof8AAWn/AGU4q79Pz/8AVi1D/gLT&#xA;/spxV36fn/6sWof8Baf9lOKoiPUNRuABa6ZMhI+IXBjiKk/8Y2nDUxVN9K8sajeSiXUHBX/fKArG&#xA;KGvQkk/STirO7GyitYQiClBiqJxV2Ksf8x+X0voy6bOOjDqMVYRPHrunkpNb/W4lH94lBJQeKGis&#xA;fpGKoR9dmDsF0PUGUEgNwtRUeO9zirX6en/6sWof8Daf9lOKu/T0/wD1YtQ/4G0/7KcVd+np/wDq&#xA;xah/wNp/2U4q79PT/wDVi1D/AIG0/wCynFXfp6f/AKsWof8AA2n/AGU4q79PT/8AVi1D/gbT/spx&#xA;V36en/6sWof8Daf9lOKu/T0//Vi1D/gbT/spxVVi1W+nUC30i5jlqapcelGKbdHie4/ViqdaL5a1&#xA;C7nS41FqhacYVBCLQ1rQ1qffFWf21ukESxqKAYqq4q7FXYq7FVGWzgk+0oxVDnR7Mn7AxVr9DWf8&#xA;gxV36Gs/5Birv0NZ/wAgxV36Gs/5Birv0NZ/yDFXfoaz/kGKu/Q1n/IMVVI9LtUNQgxVEpGiCiim&#xA;KrsVdirsVdiqHmsbeX7SjFVD9DWf8gxV36Gs/wCQYq79DWf8gxV36Gs/5Birv0NZ/wAgxV36Gs/5&#xA;Birv0NZ/yDFXfoaz/kGKu/Q1n/IMVXJpNohqEGKotIkQUUUxVdirsVdiriQBUmgHU4qkt35y8v2s&#xA;hje4Lspo3pIzgH5qMVQ/+PvLn+/Jf+RMn9MVd/j7y5/vyX/kTJ/TFXf4+8uf78l/5Eyf0xV3+PvL&#xA;n+/Jf+RMn9MVd/j7y5/vyX/kTJ/TFXf4+8uf78l/5Eyf0xV3+PvLn+/Jf+RMn9MVd/j7y5/vyX/k&#xA;TJ/TFXf4+8uf78l/5Eyf0xV3+PvLn+/Jf+RMn9MVcPPvlz/fkv8AyKf+mKpvp+radqMfqWc6yr3A&#xA;2I+YO+KovFXEgCp6DFUin81L9ZkgsrGe9MW0jx8QoPgCxFcVW/4l1L/qx3X/AAUf/NWKu/xLqX/V&#xA;juv+Cj/5qxV3+JdS/wCrHdf8FH/zVirv8S6l/wBWO6/4KP8A5qxV3+JdS/6sd1/wUf8AzVirv8S6&#xA;l/1Y7r/go/8AmrFXf4l1L/qx3X/BR/8ANWKu/wAS6l/1Y7r/AIKP/mrFXf4l1L/qx3X/AAUf/NWK&#xA;u/xLqX/Vjuv+Cj/5qxV3+JdS/wCrHdf8FH/zVirTeZtRUFm0S6CjcnlH0HybFU00vVrbUrcTQ1X+&#xA;aNxRlPgRiqMxV2KsX88awbO2gtxX/SpY4Tx/4tcIK+3xb4qm1hZWNjbJBDEoCihNNyfEnFUTyh/k&#xA;X7hiruUP8i/cMVdyh/kX7hiruUP8i/cMVdyh/kX7hiruUP8AIv3DFXcof5F+4Yq7lD/Iv3DFXcof&#xA;5F+4Yq7lD/Iv3DFXcof5F+4YqxfzDJBpOpWN9ap6b3UvoyqmymilqkfIYqy6GQSRI/8AMAcVWXpI&#xA;tZf9U4qxbyTeM66irAD0p1jBHccA1T/wWKsn+se+Ku+se+Ku+se+Ku+se+Ku+se+Ku+se+Ku+se+&#xA;Ku+se+Ku+se+Ku+se+Ku+se+KtfWPfFWJfl/ctPcai5FKXM8dB0pHIyA/wDC4qzbFXYqwP8AMs0f&#xA;Tf8AmNtf+T6Yqn/1v3xV31v3xV31v3xV31v3xV31v3xV31v3xV31v3xV31v3xV31v3xV31v3xV31&#xA;v3xV31v3xVjnnCb1Dpftdf8AMt8VZzY/7yRf6oxV19/vJL/qnFWC+UJvTbVPe6/5lpirIvrfvirv&#xA;rfvirvrfvirvrfvirvrfvirvrfvirvrfvirvrfvirvrfvirvrfvirvrfvirvrfviqQ/loavqX/Mb&#xA;df8AJ98VZ7irsVYB+Z5o2m/8x1p/yfTFWvUxV3qYq71MVd6mKu9TFXepirvUxV3qYq71MVd6mKu9&#xA;TFXepiqWa09X0/8A5ih/ybfFXplj/vJF/qjFXX3+8kv+qcVeZaK9H1D/AJij/wAm0xVM/UxV3qYq&#xA;71MVd6mKu9TFXepirvUxV3qYq71MVd6mKu9TFXepiq78sDU6l/zHXf8AyffFWf4q7FXn35pmn6M/&#xA;5jrT/k+mKof1MVd6mKu9TFXepirvUxV3qYq71MVd6mKu9TFXepirvUxV3qYql+rPWWw/5iV/4g+K&#xA;vUrH/eSL/VGKuvv95Jf9U4q8s0pqS3//ADEt/wAQTFUw54q7nirueKu54q7nirueKu54q7nirueK&#xA;u54q7nirueKon8rDX9J/8x13/wAn3xV6DirsVYJ+ZNoblrBfUESx3MMrSN0AicPT6eNMVSs8vA4q&#xA;74/A4q74/A4q74/A4q74/A4q74/A4q74/A4q74/A4q74/A4q74/A4q74/A4q74/A4qhb6L1JLSrU&#xA;ZJ1YJ1J2K/xxV6lZf7yxf6oxV19/vJL/AKpxV5daxJHJcGMk+pKXevZqAUH0DFUR8Xhirvi8MVd8&#xA;Xhirvi8MVd8Xhirvi8MVd8Xhirvi8MVd8Xhirvi8MVd8Xhirvi8MVTP8tIY4pNRRCSDdTOeXXk7l&#xA;2H/BMcVZ7irsVSnzDo8eo2jRsK1GKsEOgeZbMmG2kimiH2Dco7Mor0BjeOv+yqcVa/R3m/8Als/+&#xA;RU//AFXxV36O83/y2f8AyKn/AOq+Ku/R3m/+Wz/5FT/9V8Vd+jvN/wDLZ/8AIqf/AKr4q79Heb/5&#xA;bP8A5FT/APVfFXfo7zf/AC2f/Iqf/qvirv0d5v8A5bP/AJFT/wDVfFXfo7zf/LZ/8ip/+q+Ku/R3&#xA;m/8Als/+RU//AFXxV36O83/y2f8AyKn/AOq+KuGnebq7rZ0/4xT/APVfFU08v+VL03S3WoSmaVfs&#xA;CnFUB6hR/E7nvirPUUIgUdAKYqtnj9SFk/mFMVed6j5I1D63LJZXktskrc3RQjKWpStHDU2HbFUN&#xA;/gnzD/1dJv8AgIP+aMVd/gnzD/1dJv8AgIP+aMVd/gnzD/1dJv8AgIP+aMVd/gnzD/1dJv8AgIP+&#xA;aMVd/gnzD/1dJv8AgIP+aMVd/gnzD/1dJv8AgIP+aMVd/gnzD/1dJv8AgIP+aMVd/gnzD/1dJv8A&#xA;gIP+aMVd/gnzD/1dJv8AgIP+aMVd/gnzD/1dJv8AgIP+aMVd/gnzD/1dJv8AgIP+aMVcPJXmGo/3&#xA;KTf8BD/zRirMPKmg/ouFgWZmclndyWZmO5JJ3JOKsgxV2KuxVYYYz1UYq70Iv5RirvQi/lGKu9CL&#xA;+UYq70Iv5RirvQi/lGKu9CL+UYq70Iv5RirvQi/lGKu9CL+UYq70Iv5RirvQi/lGKrlVV6CmKt4q&#xA;7FXFQeoxVrivgMVdxXwGKu4r4DFXcV8BiruK+AxV3FfAYq7ivgMVdxXwGKu4r4DFXcV8BiruK+Ax&#xA;V3FfAYq3irsVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:1e714f92-04db-aa42-8a4b-bcce748aeb0b</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:1e714f92-04db-aa42-8a4b-bcce748aeb0b</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2e5edf8a-a5fc-154a-9915-1aab55234b81</stRef:instanceID>
            <stRef:documentID>xmp.did:2e5edf8a-a5fc-154a-9915-1aab55234b81</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f7de2aef-aa8e-514a-b5ea-a247a1380203</stEvt:instanceID>
                  <stEvt:when>2018-12-21T15:31:36+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1e714f92-04db-aa42-8a4b-bcce748aeb0b</stEvt:instanceID>
                  <stEvt:when>2018-12-26T14:04:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Оттенки серого</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
600 450 li
600 0 li
cp
clp
600 450 mo
0 450 li
0 0 li
600 0 li
600 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
528.229 294.33 mo
362.061 294.33 li
334.335 294.33 311.778 271.773 311.778 244.048 cv
311.778 216.114 li
311.778 188.388 334.335 165.832 362.061 165.832 cv
528.229 165.832 li
555.955 165.832 578.512 188.388 578.512 216.114 cv
578.512 244.048 li
578.512 271.773 555.955 294.33 528.229 294.33 cv
362.061 166.035 mo
334.521 166.035 312.116 188.439 312.116 215.979 cv
312.116 243.823 li
312.116 271.362 334.521 293.767 362.061 293.767 cv
528.229 293.767 li
555.77 293.767 578.174 271.362 578.174 243.823 cv
578.174 215.979 li
578.174 188.439 555.77 166.035 528.229 166.035 cv
362.061 166.035 li
f
528.229 293.767 mo
362.061 293.767 li
334.521 293.767 312.116 271.362 312.116 243.823 cv
312.116 215.979 li
312.116 188.439 334.521 166.035 362.061 166.035 cv
528.229 166.035 li
555.77 166.035 578.174 188.439 578.174 215.979 cv
578.174 243.823 li
578.174 271.362 555.77 293.767 528.229 293.767 cv
362.061 166.237 mo
334.707 166.237 312.454 188.49 312.454 215.843 cv
312.454 243.598 li
312.454 270.95 334.707 293.203 362.061 293.203 cv
528.229 293.203 li
555.583 293.203 577.836 270.95 577.836 243.598 cv
577.836 215.843 li
577.836 188.49 555.583 166.237 528.229 166.237 cv
362.061 166.237 li
f
528.229 293.203 mo
362.061 293.203 li
334.707 293.203 312.454 270.95 312.454 243.598 cv
312.454 215.843 li
312.454 188.49 334.707 166.237 362.061 166.237 cv
528.229 166.237 li
555.583 166.237 577.836 188.49 577.836 215.843 cv
577.836 243.598 li
577.836 270.95 555.583 293.203 528.229 293.203 cv
362.061 166.44 mo
334.893 166.44 312.792 188.541 312.792 215.708 cv
312.792 243.372 li
312.792 270.539 334.893 292.641 362.061 292.641 cv
528.229 292.641 li
555.396 292.641 577.498 270.539 577.498 243.372 cv
577.498 215.708 li
577.498 188.541 555.396 166.44 528.229 166.44 cv
362.061 166.44 li
f
528.229 292.641 mo
362.061 292.641 li
334.893 292.641 312.792 270.539 312.792 243.372 cv
312.792 215.708 li
312.792 188.541 334.893 166.44 362.061 166.44 cv
528.229 166.44 li
555.396 166.44 577.498 188.541 577.498 215.708 cv
577.498 243.372 li
577.498 270.539 555.396 292.641 528.229 292.641 cv
362.061 166.643 mo
335.08 166.643 313.13 188.593 313.13 215.573 cv
313.13 243.147 li
313.13 270.127 335.08 292.077 362.061 292.077 cv
528.229 292.077 li
555.21 292.077 577.16 270.127 577.16 243.147 cv
577.16 215.573 li
577.16 188.593 555.21 166.643 528.229 166.643 cv
362.061 166.643 li
.996078 .996078 .996078 rgb
f
528.229 292.077 mo
362.061 292.077 li
335.08 292.077 313.13 270.127 313.13 243.147 cv
313.13 215.573 li
313.13 188.593 335.08 166.643 362.061 166.643 cv
528.229 166.643 li
555.21 166.643 577.16 188.593 577.16 215.573 cv
577.16 243.147 li
577.16 270.127 555.21 292.077 528.229 292.077 cv
362.061 166.846 mo
335.267 166.846 313.468 188.644 313.468 215.438 cv
313.468 242.922 li
313.468 269.716 335.267 291.514 362.061 291.514 cv
528.229 291.514 li
555.023 291.514 576.822 269.716 576.822 242.922 cv
576.822 215.438 li
576.822 188.644 555.023 166.846 528.229 166.846 cv
362.061 166.846 li
f
528.229 291.514 mo
362.061 291.514 li
335.267 291.514 313.468 269.716 313.468 242.922 cv
313.468 215.438 li
313.468 188.644 335.267 166.846 362.061 166.846 cv
528.229 166.846 li
555.023 166.846 576.822 188.644 576.822 215.438 cv
576.822 242.922 li
576.822 269.716 555.023 291.514 528.229 291.514 cv
362.061 167.048 mo
335.453 167.048 313.806 188.695 313.806 215.303 cv
313.806 242.696 li
313.806 269.304 335.453 290.951 362.061 290.951 cv
528.229 290.951 li
554.837 290.951 576.484 269.304 576.484 242.696 cv
576.484 215.303 li
576.484 188.695 554.837 167.048 528.229 167.048 cv
362.061 167.048 li
.992157 .992157 .992157 rgb
f
528.229 290.951 mo
362.061 290.951 li
335.453 290.951 313.806 269.304 313.806 242.696 cv
313.806 215.303 li
313.806 188.695 335.453 167.048 362.061 167.048 cv
528.229 167.048 li
554.837 167.048 576.484 188.695 576.484 215.303 cv
576.484 242.696 li
576.484 269.304 554.837 290.951 528.229 290.951 cv
362.061 167.251 mo
335.639 167.251 314.144 188.746 314.144 215.167 cv
314.144 242.471 li
314.144 268.893 335.639 290.388 362.061 290.388 cv
528.229 290.388 li
554.651 290.388 576.146 268.893 576.146 242.471 cv
576.146 215.167 li
576.146 188.746 554.651 167.251 528.229 167.251 cv
362.061 167.251 li
.988235 .988235 .988235 rgb
f
528.229 290.388 mo
362.061 290.388 li
335.639 290.388 314.144 268.893 314.144 242.471 cv
314.144 215.167 li
314.144 188.746 335.639 167.251 362.061 167.251 cv
528.229 167.251 li
554.651 167.251 576.146 188.746 576.146 215.167 cv
576.146 242.471 li
576.146 268.893 554.651 290.388 528.229 290.388 cv
362.061 167.454 mo
335.825 167.454 314.481 188.797 314.481 215.032 cv
314.481 242.246 li
314.481 268.48 335.825 289.824 362.061 289.824 cv
528.229 289.824 li
554.465 289.824 575.809 268.48 575.809 242.246 cv
575.809 215.032 li
575.809 188.797 554.465 167.454 528.229 167.454 cv
362.061 167.454 li
.984314 .984314 .984314 rgb
f
528.229 289.824 mo
362.061 289.824 li
335.825 289.824 314.481 268.48 314.481 242.246 cv
314.481 215.032 li
314.481 188.797 335.825 167.454 362.061 167.454 cv
528.229 167.454 li
554.465 167.454 575.809 188.797 575.809 215.032 cv
575.809 242.246 li
575.809 268.48 554.465 289.824 528.229 289.824 cv
362.061 167.657 mo
336.012 167.657 314.819 188.849 314.819 214.897 cv
314.819 242.021 li
314.819 268.069 336.012 289.261 362.061 289.261 cv
528.229 289.261 li
554.278 289.261 575.471 268.069 575.471 242.021 cv
575.471 214.897 li
575.471 188.849 554.278 167.657 528.229 167.657 cv
362.061 167.657 li
.976471 .976471 .976471 rgb
f
528.229 289.261 mo
362.061 289.261 li
336.012 289.261 314.819 268.069 314.819 242.021 cv
314.819 214.897 li
314.819 188.849 336.012 167.657 362.061 167.657 cv
528.229 167.657 li
554.278 167.657 575.471 188.849 575.471 214.897 cv
575.471 242.021 li
575.471 268.069 554.278 289.261 528.229 289.261 cv
362.061 167.859 mo
336.198 167.859 315.157 188.9 315.157 214.762 cv
315.157 241.795 li
315.157 267.657 336.198 288.698 362.061 288.698 cv
528.229 288.698 li
554.092 288.698 575.133 267.657 575.133 241.795 cv
575.133 214.762 li
575.133 188.9 554.092 167.859 528.229 167.859 cv
362.061 167.859 li
.972549 .972549 .972549 rgb
f
528.229 288.698 mo
362.061 288.698 li
336.198 288.698 315.157 267.657 315.157 241.795 cv
315.157 214.762 li
315.157 188.9 336.198 167.859 362.061 167.859 cv
528.229 167.859 li
554.092 167.859 575.133 188.9 575.133 214.762 cv
575.133 241.795 li
575.133 267.657 554.092 288.698 528.229 288.698 cv
362.061 168.062 mo
336.385 168.062 315.496 188.951 315.496 214.627 cv
315.496 241.57 li
315.496 267.246 336.385 288.135 362.061 288.135 cv
528.229 288.135 li
553.905 288.135 574.795 267.246 574.795 241.57 cv
574.795 214.627 li
574.795 188.951 553.905 168.062 528.229 168.062 cv
362.061 168.062 li
.964706 .964706 .964706 rgb
f
528.229 288.135 mo
362.061 288.135 li
336.385 288.135 315.496 267.246 315.496 241.57 cv
315.496 214.627 li
315.496 188.951 336.385 168.062 362.061 168.062 cv
528.229 168.062 li
553.905 168.062 574.795 188.951 574.795 214.627 cv
574.795 241.57 li
574.795 267.246 553.905 288.135 528.229 288.135 cv
362.061 168.265 mo
336.57 168.265 315.834 189.002 315.834 214.492 cv
315.834 241.345 li
315.834 266.834 336.57 287.571 362.061 287.571 cv
528.229 287.571 li
553.72 287.571 574.457 266.834 574.457 241.345 cv
574.457 214.492 li
574.457 189.002 553.72 168.265 528.229 168.265 cv
362.061 168.265 li
.956863 .956863 .956863 rgb
f
528.229 287.571 mo
362.061 287.571 li
336.57 287.571 315.834 266.834 315.834 241.345 cv
315.834 214.492 li
315.834 189.002 336.57 168.265 362.061 168.265 cv
528.229 168.265 li
553.72 168.265 574.457 189.002 574.457 214.492 cv
574.457 241.345 li
574.457 266.834 553.72 287.571 528.229 287.571 cv
362.061 168.468 mo
336.757 168.468 316.172 189.053 316.172 214.356 cv
316.172 241.119 li
316.172 266.423 336.757 287.009 362.061 287.009 cv
528.229 287.009 li
553.533 287.009 574.119 266.423 574.119 241.119 cv
574.119 214.356 li
574.119 189.053 553.533 168.468 528.229 168.468 cv
362.061 168.468 li
.94902 .94902 .94902 rgb
f
528.229 287.009 mo
362.061 287.009 li
336.757 287.009 316.172 266.423 316.172 241.119 cv
316.172 214.356 li
316.172 189.053 336.757 168.468 362.061 168.468 cv
528.229 168.468 li
553.533 168.468 574.119 189.053 574.119 214.356 cv
574.119 241.119 li
574.119 266.423 553.533 287.009 528.229 287.009 cv
356.36 169.025 mo
333.924 171.838 316.51 191.035 316.51 214.222 cv
316.51 240.894 li
316.51 266.011 336.943 286.445 362.061 286.445 cv
528.229 286.445 li
553.347 286.445 573.78 266.011 573.78 240.894 cv
573.78 214.222 li
573.78 191.035 556.366 171.838 533.93 169.025 cv
532.529 168.827 531.106 168.701 529.663 168.65 cv
529.187 168.634 528.709 168.625 528.229 168.625 cv
362.061 168.625 li
361.581 168.625 361.103 168.634 360.627 168.65 cv
359.184 168.701 357.761 168.827 356.36 169.025 cv
.941176 .941176 .941176 rgb
f
528.229 286.445 mo
362.061 286.445 li
336.943 286.445 316.51 266.011 316.51 240.894 cv
316.51 214.222 li
316.51 191.035 333.924 171.838 356.36 169.025 cv
353.732 169.397 351.185 170.022 348.742 170.874 cv
330.292 176.573 316.848 193.789 316.848 214.086 cv
316.848 240.669 li
316.848 265.6 337.13 285.882 362.061 285.882 cv
528.229 285.882 li
553.16 285.882 573.442 265.6 573.442 240.669 cv
573.442 214.086 li
573.442 193.789 559.998 176.573 541.547 170.874 cv
539.105 170.022 536.558 169.397 533.93 169.025 cv
556.366 171.838 573.78 191.035 573.78 214.222 cv
573.78 240.894 li
573.78 266.011 553.347 286.445 528.229 286.445 cv
.933333 .933333 .933333 rgb
f
528.229 285.882 mo
362.061 285.882 li
337.13 285.882 316.848 265.6 316.848 240.669 cv
316.848 214.086 li
316.848 193.789 330.292 176.573 348.742 170.874 cv
347.154 171.429 345.609 172.08 344.118 172.82 cv
328.28 179.757 317.186 195.583 317.186 213.951 cv
317.186 240.443 li
317.186 265.188 337.316 285.318 362.061 285.318 cv
528.229 285.318 li
552.974 285.318 573.104 265.188 573.104 240.443 cv
573.104 213.951 li
573.104 195.583 562.01 179.757 546.172 172.82 cv
544.681 172.08 543.136 171.429 541.547 170.874 cv
559.998 176.573 573.442 193.789 573.442 214.086 cv
573.442 240.669 li
573.442 265.6 553.16 285.882 528.229 285.882 cv
.921569 .921569 .921569 rgb
f
528.229 285.318 mo
362.061 285.318 li
337.316 285.318 317.186 265.188 317.186 240.443 cv
317.186 213.951 li
317.186 195.583 328.28 179.757 344.118 172.82 cv
342.868 173.44 341.657 174.122 340.484 174.863 cv
326.801 182.472 317.523 197.081 317.523 213.816 cv
317.523 240.219 li
317.523 264.776 337.503 284.756 362.061 284.756 cv
528.229 284.756 li
552.788 284.756 572.767 264.776 572.767 240.219 cv
572.767 213.816 li
572.767 197.079 563.487 182.469 549.803 174.861 cv
548.631 174.12 547.421 173.44 546.172 172.82 cv
562.01 179.757 573.104 195.583 573.104 213.951 cv
573.104 240.443 li
573.104 265.188 552.974 285.318 528.229 285.318 cv
.913725 .913725 .913725 rgb
f
528.229 284.756 mo
362.061 284.756 li
337.503 284.756 317.523 264.776 317.523 240.219 cv
317.523 213.816 li
317.523 197.081 326.801 182.472 340.484 174.863 cv
339.425 175.532 338.396 176.251 337.406 177.013 cv
325.624 184.96 317.861 198.431 317.861 213.681 cv
317.861 239.993 li
317.861 264.364 337.688 284.192 362.061 284.192 cv
528.229 284.192 li
552.601 284.192 572.429 264.364 572.429 239.993 cv
572.429 213.681 li
572.429 198.431 564.666 184.96 552.884 177.013 cv
551.892 176.25 550.864 175.531 549.803 174.861 cv
563.487 182.469 572.767 197.079 572.767 213.816 cv
572.767 240.219 li
572.767 264.776 552.788 284.756 528.229 284.756 cv
.901961 .901961 .901961 rgb
f
528.229 284.192 mo
362.061 284.192 li
337.688 284.192 317.861 264.364 317.861 239.993 cv
317.861 213.681 li
317.861 198.431 325.624 184.96 337.406 177.013 cv
336.474 177.73 335.575 178.485 334.709 179.28 cv
324.652 187.324 318.199 199.695 318.199 213.545 cv
318.199 239.768 li
318.199 263.953 337.875 283.629 362.061 283.629 cv
528.229 283.629 li
552.415 283.629 572.091 263.953 572.091 239.768 cv
572.091 213.545 li
572.091 199.695 565.638 187.323 555.58 179.279 cv
554.716 178.487 553.815 177.729 552.884 177.013 cv
564.666 184.96 572.429 198.431 572.429 213.681 cv
572.429 239.993 li
572.429 264.364 552.601 284.192 528.229 284.192 cv
.890196 .890196 .890196 rgb
f
528.229 283.629 mo
362.061 283.629 li
337.875 283.629 318.199 263.953 318.199 239.768 cv
318.199 213.545 li
318.199 199.695 324.652 187.324 334.709 179.28 cv
333.878 180.042 333.076 180.841 332.311 181.669 cv
323.838 189.616 318.537 200.906 318.537 213.411 cv
318.537 239.543 li
318.537 263.541 338.062 283.066 362.061 283.066 cv
528.229 283.066 li
552.229 283.066 571.753 263.541 571.753 239.543 cv
571.753 213.411 li
571.753 200.906 566.452 189.616 557.979 181.669 cv
557.213 180.84 556.413 180.043 555.58 179.279 cv
565.638 187.323 572.091 199.695 572.091 213.545 cv
572.091 239.768 li
572.091 263.953 552.415 283.629 528.229 283.629 cv
.878431 .878431 .878431 rgb
f
528.229 283.066 mo
362.061 283.066 li
338.062 283.066 318.537 263.541 318.537 239.543 cv
318.537 213.411 li
318.537 200.906 323.838 189.616 332.311 181.669 cv
331.562 182.48 330.846 183.321 330.164 184.191 cv
323.155 191.871 318.875 202.083 318.875 213.275 cv
318.875 239.317 li
318.875 263.13 338.248 282.503 362.061 282.503 cv
528.229 282.503 li
552.042 282.503 571.415 263.13 571.415 239.317 cv
571.415 213.275 li
571.415 202.083 567.136 191.872 560.127 184.192 cv
559.445 183.322 558.729 182.481 557.979 181.669 cv
566.452 189.616 571.753 200.906 571.753 213.411 cv
571.753 239.543 li
571.753 263.541 552.229 283.066 528.229 283.066 cv
.858823 .858823 .858823 rgb
f
528.229 282.503 mo
362.061 282.503 li
338.248 282.503 318.875 263.13 318.875 239.317 cv
318.875 213.275 li
318.875 202.083 323.155 191.871 330.164 184.191 cv
329.492 185.049 328.851 185.938 328.249 186.849 cv
322.588 194.113 319.213 203.239 319.213 213.14 cv
319.213 239.092 li
319.213 262.718 338.435 281.939 362.061 281.939 cv
528.229 281.939 li
551.856 281.939 571.077 262.718 571.077 239.092 cv
571.077 213.14 li
571.077 203.239 567.701 194.111 562.04 186.847 cv
561.438 185.936 560.799 185.05 560.127 184.192 cv
567.136 191.872 571.415 202.083 571.415 213.275 cv
571.415 239.317 li
571.415 263.13 552.042 282.503 528.229 282.503 cv
.847059 .847059 .847059 rgb
f
528.229 281.939 mo
362.061 281.939 li
338.435 281.939 319.213 262.718 319.213 239.092 cv
319.213 213.14 li
319.213 203.239 322.588 194.113 328.249 186.849 cv
327.646 187.761 327.08 188.697 326.551 189.658 cv
322.128 196.363 319.551 204.389 319.551 213.005 cv
319.551 238.867 li
319.551 262.307 338.62 281.377 362.061 281.377 cv
528.229 281.377 li
551.67 281.377 570.739 262.307 570.739 238.867 cv
570.739 213.005 li
570.739 204.389 568.163 196.364 563.74 189.659 cv
563.211 188.698 562.643 187.759 562.04 186.847 cv
567.701 194.111 571.077 203.239 571.077 213.14 cv
571.077 239.092 li
571.077 262.718 551.856 281.939 528.229 281.939 cv
.831372 .831372 .831372 rgb
f
528.229 281.377 mo
362.061 281.377 li
338.62 281.377 319.551 262.307 319.551 238.867 cv
319.551 213.005 li
319.551 204.389 322.128 196.363 326.551 189.658 cv
326.017 190.627 325.522 191.621 325.068 192.635 cv
321.767 198.646 319.889 205.542 319.889 212.87 cv
319.889 238.642 li
319.889 261.894 338.807 280.814 362.061 280.814 cv
528.229 280.814 li
551.483 280.814 570.401 261.894 570.401 238.642 cv
570.401 212.87 li
570.401 205.542 568.523 198.646 565.223 192.636 cv
564.768 191.621 564.273 190.628 563.74 189.659 cv
568.163 196.364 570.739 204.389 570.739 213.005 cv
570.739 238.867 li
570.739 262.307 551.67 281.377 528.229 281.377 cv
.815686 .815686 .815686 rgb
f
528.229 280.814 mo
362.061 280.814 li
338.807 280.814 319.889 261.894 319.889 238.642 cv
319.889 212.87 li
319.889 205.542 321.767 198.646 325.068 192.635 cv
324.605 193.668 324.186 194.721 323.81 195.797 cv
321.507 200.978 320.227 206.709 320.227 212.734 cv
320.227 238.416 li
320.227 261.483 338.993 280.25 362.061 280.25 cv
528.229 280.25 li
551.297 280.25 570.063 261.483 570.063 238.416 cv
570.063 212.734 li
570.063 206.71 568.783 200.978 566.481 195.798 cv
566.105 194.722 565.685 193.668 565.223 192.636 cv
568.523 198.646 570.401 205.542 570.401 212.87 cv
570.401 238.642 li
570.401 261.894 551.483 280.814 528.229 280.814 cv
.803922 .803922 .803922 rgb
f
528.229 280.25 mo
362.061 280.25 li
338.993 280.25 320.227 261.483 320.227 238.416 cv
320.227 212.734 li
320.227 206.709 321.507 200.978 323.81 195.797 cv
323.425 196.899 323.085 198.025 322.795 199.169 cv
321.35 203.383 320.564 207.902 320.564 212.6 cv
320.564 238.19 li
320.564 261.071 339.18 279.687 362.061 279.687 cv
528.229 279.687 li
551.11 279.687 569.726 261.071 569.726 238.19 cv
569.726 212.6 li
569.726 207.902 568.94 203.382 567.495 199.168 cv
567.205 198.025 566.866 196.901 566.481 195.798 cv
568.783 200.978 570.063 206.71 570.063 212.734 cv
570.063 238.416 li
570.063 261.483 551.297 280.25 528.229 280.25 cv
.780392 .780392 .780392 rgb
f
528.229 279.687 mo
362.061 279.687 li
339.18 279.687 320.564 261.071 320.564 238.19 cv
320.564 212.6 li
320.564 207.902 321.35 203.383 322.795 199.169 cv
322.494 200.354 322.246 201.558 322.053 202.782 cv
321.301 205.888 320.902 209.13 320.902 212.464 cv
320.902 237.966 li
320.902 260.66 339.366 279.124 362.061 279.124 cv
528.229 279.124 li
550.924 279.124 569.388 260.66 569.388 237.966 cv
569.388 212.464 li
569.388 209.132 568.989 205.889 568.238 202.783 cv
568.044 201.56 567.796 200.353 567.495 199.168 cv
568.94 203.382 569.726 207.902 569.726 212.6 cv
569.726 238.19 li
569.726 261.071 551.11 279.687 528.229 279.687 cv
.764706 .764706 .764706 rgb
f
528.229 279.124 mo
362.061 279.124 li
339.366 279.124 320.902 260.66 320.902 237.966 cv
320.902 212.464 li
320.902 209.13 321.301 205.888 322.053 202.782 cv
321.85 204.066 321.707 205.37 321.628 206.69 cv
321.373 208.533 321.24 210.417 321.24 212.329 cv
321.24 237.74 li
321.24 260.249 339.552 278.56 362.061 278.56 cv
528.229 278.56 li
550.738 278.56 569.05 260.249 569.05 237.74 cv
569.05 212.329 li
569.05 210.417 568.917 208.533 568.662 206.69 cv
568.583 205.37 568.441 204.067 568.238 202.783 cv
568.989 205.889 569.388 209.132 569.388 212.464 cv
569.388 237.966 li
569.388 260.66 550.924 279.124 528.229 279.124 cv
.74902 .74902 .74902 rgb
f
528.229 278.56 mo
362.061 278.56 li
339.552 278.56 321.24 260.249 321.24 237.74 cv
321.24 212.329 li
321.24 210.417 321.373 208.533 321.628 206.69 cv
321.58 207.498 321.556 208.311 321.556 209.13 cv
321.556 209.13 li
321.556 237.064 li
321.556 237.064 li
321.556 237.824 321.577 238.577 321.618 239.326 cv
322.57 260.811 340.346 277.997 362.061 277.997 cv
528.229 277.997 li
549.94 277.997 567.713 260.819 568.671 239.34 cv
568.713 238.587 568.734 237.828 568.734 237.064 cv
568.734 209.13 li
568.734 209.13 li
568.734 209.13 li
568.734 208.311 568.71 207.498 568.662 206.69 cv
568.917 208.533 569.05 210.417 569.05 212.329 cv
569.05 237.74 li
569.05 260.249 550.738 278.56 528.229 278.56 cv
.729412 .729412 .729412 rgb
f
528.229 277.997 mo
362.061 277.997 li
340.346 277.997 322.57 260.811 321.618 239.326 cv
322.796 260.613 340.485 277.569 362.061 277.569 cv
528.229 277.569 li
549.801 277.569 567.487 260.621 568.671 239.34 cv
567.713 260.819 549.94 277.997 528.229 277.997 cv
.709804 .709804 .709804 rgb
f
362.061 277.569 mo
339.726 277.569 321.556 259.399 321.556 237.064 cv
321.556 209.13 li
321.556 186.796 339.726 168.625 362.061 168.625 cv
528.229 168.625 li
550.564 168.625 568.734 186.796 568.734 209.13 cv
568.734 237.064 li
568.734 259.399 550.564 277.569 528.229 277.569 cv
362.061 277.569 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 445.145 277.569 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .74902 .74902 ]
/C1 [.988235 .988235 .988235 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 445.145 277.569 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~^V@Ou^VIY#^qmk'_8=(+_Sa:/_o0L3`5KX6`Poj:`l?'>a2c9BaN2KFaiVZIb0%lMbKJ)Qbfn;Uc-=MY
cHa_\cd0q`d*U.ddF$@hdaHRle'ldpe'umseCE+"e^i=&f%8O*f@\a.f\"m1g"G*5g=k<9gY:N=gt^`A
h;-oDhVR,Hhr!>Li8EPPiSibTio8tWj5]1[jQ,C_jlPUck2tggkND$kkNM-nkiq?rl0@R!lKdd%lg4!)
m-O-,mHs?0mdBQ4n*fc8nF5u<naZ/?o()ACoCMSGo^qeKp%A"Op@e4Rp\4FVq"XXZq>'j^qYL'bqtp9f
~>
<~^V@Ou^VIY#^qmk'_8=(+_Sa:/_o0L3`5KX6`Poj:`l?'>a2c9BaN2KFaiVZIb0%lMbKJ)Qbfn;Uc-=MY
cHa_\cd0q`d*U.ddF$@hdaHRle'ldpe'umseCE+"e^i=&f%8O*f@\a.f\"m1g"G*5g=k<9gY:N=gt^`A
h;-oDhVR,Hhr!>Li8EPPiSibTio8tWj5]1[jQ,C_jlPUck2tggkND$kkNM-nkiq?rl0@R!lKdd%lg4!)
m-O-,mHs?0mdBQ4n*fc8nF5u<naZ/?o()ACoCMSGo^qeKp%A"Op@e4Rp\4FVq"XXZq>'j^qYL'bqtp9f
~>
<~^V@Ou^VIY#^qmk'_8=(+_Sa:/_o0L3`5KX6`Poj:`l?'>a2c9BaN2KFaiVZIb0%lMbKJ)Qbfn;Uc-=MY
cHa_\cd0q`d*U.ddF$@hdaHRle'ldpe'umseCE+"e^i=&f%8O*f@\a.f\"m1g"G*5g=k<9gY:N=gt^`A
h;-oDhVR,Hhr!>Li8EPPiSibTio8tWj5]1[jQ,C_jlPUck2tggkND$kkNM-nkiq?rl0@R!lKdd%lg4!)
m-O-,mHs?0mdBQ4n*fc8nF5u<naZ/?o()ACoCMSGo^qeKp%A"Op@e4Rp\4FVq"XXZq>'j^qYL'bqtp9f
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
528.229 277.569 mo
362.061 277.569 li
340.485 277.569 322.796 260.613 321.618 239.326 cv
321.577 238.577 321.556 237.824 321.556 237.064 cv
321.556 237.064 li
321.556 209.13 li
321.556 209.13 li
321.556 208.311 321.58 207.498 321.628 206.69 cv
321.707 205.37 321.85 204.066 322.053 202.782 cv
322.246 201.558 322.494 200.354 322.795 199.169 cv
323.085 198.025 323.425 196.899 323.81 195.797 cv
324.186 194.721 324.605 193.668 325.068 192.635 cv
325.522 191.621 326.017 190.627 326.551 189.658 cv
327.08 188.697 327.646 187.761 328.249 186.849 cv
328.851 185.938 329.492 185.049 330.164 184.191 cv
330.846 183.321 331.562 182.48 332.311 181.669 cv
333.076 180.841 333.878 180.042 334.709 179.28 cv
335.575 178.485 336.474 177.73 337.406 177.013 cv
338.396 176.251 339.425 175.532 340.484 174.863 cv
341.657 174.122 342.868 173.44 344.118 172.82 cv
345.609 172.08 347.154 171.429 348.742 170.874 cv
351.185 170.022 353.732 169.397 356.36 169.025 cv
357.761 168.827 359.184 168.701 360.627 168.65 cv
361.103 168.634 361.581 168.625 362.061 168.625 cv
528.229 168.625 li
528.709 168.625 529.187 168.634 529.663 168.65 cv
531.106 168.701 532.529 168.827 533.93 169.025 cv
536.558 169.397 539.105 170.022 541.547 170.874 cv
543.136 171.429 544.681 172.08 546.172 172.82 cv
547.421 173.44 548.631 174.12 549.803 174.861 cv
550.864 175.531 551.892 176.25 552.884 177.013 cv
553.815 177.729 554.716 178.487 555.58 179.279 cv
556.413 180.043 557.213 180.84 557.979 181.669 cv
558.729 182.481 559.445 183.322 560.127 184.192 cv
560.799 185.05 561.438 185.936 562.04 186.847 cv
562.643 187.759 563.211 188.698 563.74 189.659 cv
564.273 190.628 564.768 191.621 565.223 192.636 cv
565.685 193.668 566.105 194.722 566.481 195.798 cv
566.866 196.901 567.205 198.025 567.495 199.168 cv
567.796 200.353 568.044 201.56 568.238 202.783 cv
568.441 204.067 568.583 205.37 568.662 206.69 cv
568.71 207.498 568.734 208.311 568.734 209.13 cv
568.734 209.13 li
568.734 209.13 li
568.734 237.064 li
568.734 237.828 568.713 238.587 568.671 239.34 cv
567.487 260.621 549.801 277.569 528.229 277.569 cv
362.061 169.33 mo
340.114 169.33 322.26 187.184 322.26 209.13 cv
322.26 237.064 li
322.26 259.011 340.114 276.864 362.061 276.864 cv
528.229 276.864 li
550.176 276.864 568.031 259.011 568.031 237.064 cv
568.031 209.13 li
568.031 187.184 550.176 169.33 528.229 169.33 cv
362.061 169.33 li
528.229 272.686 mo
362.061 272.686 li
342.417 272.686 326.437 256.707 326.437 237.064 cv
326.437 209.13 li
326.437 189.488 342.417 173.508 362.061 173.508 cv
528.229 173.508 li
547.871 173.508 563.852 189.488 563.852 209.13 cv
563.852 237.064 li
563.852 256.707 547.871 272.686 528.229 272.686 cv
327.143 237.064 mo
327.143 237.064 li
327.143 256.35 342.775 271.982 362.061 271.982 cv
528.229 271.982 li
547.515 271.982 563.147 256.35 563.147 237.064 cv
563.147 209.13 li
563.147 209.13 li
563.147 189.846 547.515 174.212 528.229 174.212 cv
362.061 174.212 li
342.775 174.212 327.143 189.846 327.143 209.13 cv
327.143 237.064 li
327.143 237.064 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 445.145 277.569 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.501961 .501961 .501961 ]
/C1 [.678431 .678431 .678431 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 445.145 277.569 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~J:N0#J:N3%JUrB'JqAT+JqAW-K7ef0KS5#3KS>,6KnY58L5(G;LPLY?LPL\ALkpkCM2@(GM2I1JMMd:L
Mi3LOMi<URN/WaUNK&pWNfK-[NfK0]O,o?_OH>QcOHGZfOcbchP*1ukP*;)nPEV5qPa%DsQ'IW"Q'IZ$
QBmi'Q^=&*Q^F/-R$a8/R@0J2R[T\6R[T_8S"#n:S=H+>S=Q4ASXl=CSt;OFStDXIT:_aKTV.sNTqS0R
TqS3TU8"BVUSFTZUSO]]Unjf_V5:#bV5C,eVP^8hVl-GjW2QYnW2Q\pWMuksWiE)!WiN2$X/i;&XK8M)
~>
<~J:N0#J:N3%JUrB'JqAT+JqAW-K7ef0KS5#3KS>,6KnY58L5(G;LPLY?LPL\ALkpkCM2@(GM2I1JMMd:L
Mi3LOMi<URN/WaUNK&pWNfK-[NfK0]O,o?_OH>QcOHGZfOcbchP*1ukP*;)nPEV5qPa%DsQ'IW"Q'IZ$
QBmi'Q^=&*Q^F/-R$a8/R@0J2R[T\6R[T_8S"#n:S=H+>S=Q4ASXl=CSt;OFStDXIT:_aKTV.sNTqS0R
TqS3TU8"BVUSFTZUSO]]Unjf_V5:#bV5C,eVP^8hVl-GjW2QYnW2Q\pWMuksWiE)!WiN2$X/i;&XK8M)
~>
<~J:N0#J:N3%JUrB'JqAT+JqAW-K7ef0KS5#3KS>,6KnY58L5(G;LPLY?LPL\ALkpkCM2@(GM2I1JMMd:L
Mi3LOMi<URN/WaUNK&pWNfK-[NfK0]O,o?_OH>QcOHGZfOcbchP*1ukP*;)nPEV5qPa%DsQ'IW"Q'IZ$
QBmi'Q^=&*Q^F/-R$a8/R@0J2R[T\6R[T_8S"#n:S=H+>S=Q4ASXl=CSt;OFStDXIT:_aKTV.sNTqS0R
TqS3TU8"BVUSFTZUSO]]Unjf_V5:#bV5C,eVP^8hVl-GjW2QYnW2Q\pWMuksWiE)!WiN2$X/i;&XK8M)
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
528.229 276.864 mo
362.061 276.864 li
340.114 276.864 322.26 259.011 322.26 237.064 cv
322.26 209.13 li
322.26 187.184 340.114 169.33 362.061 169.33 cv
528.229 169.33 li
550.176 169.33 568.031 187.184 568.031 209.13 cv
568.031 237.064 li
568.031 259.011 550.176 276.864 528.229 276.864 cv
322.964 237.064 mo
322.964 237.064 li
322.964 258.622 340.503 276.16 362.061 276.16 cv
528.229 276.16 li
549.788 276.16 567.326 258.622 567.326 237.064 cv
567.326 209.13 li
567.326 209.13 li
567.326 187.572 549.788 170.034 528.229 170.034 cv
362.061 170.034 li
340.503 170.034 322.964 187.572 322.964 209.13 cv
322.964 237.064 li
322.964 237.064 li
528.229 273.391 mo
362.061 273.391 li
342.029 273.391 325.733 257.096 325.733 237.064 cv
325.733 209.13 li
325.733 189.099 342.029 172.803 362.061 172.803 cv
528.229 172.803 li
548.26 172.803 564.556 189.099 564.556 209.13 cv
564.556 237.064 li
564.556 257.096 548.26 273.391 528.229 273.391 cv
362.061 173.508 mo
342.417 173.508 326.437 189.488 326.437 209.13 cv
326.437 237.064 li
326.437 256.707 342.417 272.686 362.061 272.686 cv
528.229 272.686 li
547.871 272.686 563.852 256.707 563.852 237.064 cv
563.852 209.13 li
563.852 189.488 547.871 173.508 528.229 173.508 cv
362.061 173.508 li
level3{
gsave
clp
[6.58462e-15 -107.535 107.535 6.58462e-15 445.145 276.865 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.839216 .839216 .839216 ]
/C1 [.929412 .929412 .929412 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.58462e-15 -107.535 107.535 6.58462e-15 445.145 276.865 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f%/F'f%/F'f%/F'f@SX+f@SX+f@SX,f\"j/f\"j/f\"m1g"G'3g"G'3g"P06g=k97g=k97gY:K;gY:K;
gY:K<gt^]?gt^]?gt^`Ah;-oCh;-oCh;-rEhVR,GhVR,GhV[5Jhr!>Khr!>Ki8EPOi8EPOi8EPPiSibS
iSibSiSieUio8tWio8tWioB(Zj5]1[j5]1[jQ,C_jQ,C_jQ,C`jlPUcjlPUcjlPUdk2tggk2tggk2tji
kND$kkND$kkNM-nkih6okih6ol07Hsl07Hsl07HtlK[["lK[["lK[^$lg*m&lg*m&lg4!)m-O**m-O**
~>
<~f%/F'f%/F'f%/F'f@SX+f@SX+f@SX,f\"j/f\"j/f\"m1g"G'3g"G'3g"P06g=k97g=k97gY:K;gY:K;
gY:K<gt^]?gt^]?gt^`Ah;-oCh;-oCh;-rEhVR,GhVR,GhV[5Jhr!>Khr!>Ki8EPOi8EPOi8EPPiSibS
iSibSiSieUio8tWio8tWioB(Zj5]1[j5]1[jQ,C_jQ,C_jQ,C`jlPUcjlPUcjlPUdk2tggk2tggk2tji
kND$kkND$kkNM-nkih6okih6ol07Hsl07Hsl07HtlK[["lK[["lK[^$lg*m&lg*m&lg4!)m-O**m-O**
~>
<~f%/F'f%/F'f%/F'f@SX+f@SX+f@SX,f\"j/f\"j/f\"m1g"G'3g"G'3g"P06g=k97g=k97gY:K;gY:K;
gY:K<gt^]?gt^]?gt^`Ah;-oCh;-oCh;-rEhVR,GhVR,GhV[5Jhr!>Khr!>Ki8EPOi8EPOi8EPPiSibS
iSibSiSieUio8tWio8tWioB(Zj5]1[j5]1[jQ,C_jQ,C_jQ,C`jlPUcjlPUcjlPUdk2tggk2tggk2tji
kND$kkND$kkNM-nkih6okih6ol07Hsl07Hsl07HtlK[["lK[["lK[^$lg*m&lg*m&lg4!)m-O**m-O**
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
528.229 274.8 mo
362.061 274.8 li
341.252 274.8 324.324 257.872 324.324 237.064 cv
324.324 209.13 li
324.324 188.322 341.252 171.394 362.061 171.394 cv
528.229 171.394 li
549.037 171.394 565.965 188.322 565.965 209.13 cv
565.965 237.064 li
565.965 257.872 549.037 274.8 528.229 274.8 cv
362.061 172.803 mo
342.029 172.803 325.733 189.099 325.733 209.13 cv
325.733 237.064 li
325.733 257.096 342.029 273.391 362.061 273.391 cv
528.229 273.391 li
548.26 273.391 564.556 257.096 564.556 237.064 cv
564.556 209.13 li
564.556 189.099 548.26 172.803 528.229 172.803 cv
362.061 172.803 li
level3{
gsave
clp
[6.49836e-15 -106.126 106.126 6.49836e-15 445.145 276.16 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.94902 .94902 .94902 ]
/C1 [.741176 .741176 .741176 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49836e-15 -106.126 106.126 6.49836e-15 445.145 276.16 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o'u8?naQ&;nF5o8n*f`5mdBN2mHs<.mHj3+m-F!'lg*j$lK[[!l07Hskih6oki_-lkND!ik2tdejlPUb
jQ,C_j5]1[j5T(Xio8qUiSibRi8EPNhr!>KhVR,GhVI#Dh;-lAgt^]>gY:K;g=k97g"G'3g"=s0f\"g-
f@SX*f%/F'e^`4#e^W*ueC2mqe'landaHRkdF$@hd*U.dd*L%acd0n^cHa\Zc-=MWbfn;TbKJ)PbK@uM
b0%iJaiVZGaN2HCa2c6@`l?$<`l5p9`Pod6`5KU3_o'C0_SX1,_83t(_8*k%^qd_"^V@Ot^:q=q]tM+m
~>
<~o'u8?naQ&;nF5o8n*f`5mdBN2mHs<.mHj3+m-F!'lg*j$lK[[!l07Hskih6oki_-lkND!ik2tdejlPUb
jQ,C_j5]1[j5T(Xio8qUiSibRi8EPNhr!>KhVR,GhVI#Dh;-lAgt^]>gY:K;g=k97g"G'3g"=s0f\"g-
f@SX*f%/F'e^`4#e^W*ueC2mqe'landaHRkdF$@hd*U.dd*L%acd0n^cHa\Zc-=MWbfn;TbKJ)PbK@uM
b0%iJaiVZGaN2HCa2c6@`l?$<`l5p9`Pod6`5KU3_o'C0_SX1,_83t(_8*k%^qd_"^V@Ot^:q=q]tM+m
~>
<~o'u8?naQ&;nF5o8n*f`5mdBN2mHs<.mHj3+m-F!'lg*j$lK[[!l07Hskih6oki_-lkND!ik2tdejlPUb
jQ,C_j5]1[j5T(Xio8qUiSibRi8EPNhr!>KhVR,GhVI#Dh;-lAgt^]>gY:K;g=k97g"G'3g"=s0f\"g-
f@SX*f%/F'e^`4#e^W*ueC2mqe'landaHRkdF$@hd*U.dd*L%acd0n^cHa\Zc-=MWbfn;TbKJ)PbK@uM
b0%iJaiVZGaN2HCa2c6@`l?$<`l5p9`Pod6`5KU3_o'C0_SX1,_83t(_8*k%^qd_"^V@Ot^:q=q]tM+m
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
528.229 276.16 mo
362.061 276.16 li
340.503 276.16 322.964 258.622 322.964 237.064 cv
322.964 237.064 li
322.964 209.13 li
322.964 187.572 340.503 170.034 362.061 170.034 cv
528.229 170.034 li
549.788 170.034 567.326 187.572 567.326 209.13 cv
567.326 209.13 li
567.326 237.064 li
567.326 258.622 549.788 276.16 528.229 276.16 cv
362.061 170.316 mo
340.658 170.316 323.246 187.727 323.246 209.13 cv
323.246 237.064 li
323.246 258.467 340.658 275.878 362.061 275.878 cv
528.229 275.878 li
549.633 275.878 567.045 258.467 567.045 237.064 cv
567.045 209.13 li
567.045 187.727 549.633 170.316 528.229 170.316 cv
362.061 170.316 li
528.229 275.082 mo
362.061 275.082 li
341.099 275.082 324.042 258.027 324.042 237.064 cv
324.042 209.13 li
324.042 188.167 341.099 171.113 362.061 171.113 cv
528.229 171.113 li
549.192 171.113 566.247 188.167 566.247 209.13 cv
566.247 237.064 li
566.247 258.027 549.192 275.082 528.229 275.082 cv
362.061 171.394 mo
341.252 171.394 324.324 188.322 324.324 209.13 cv
324.324 237.064 li
324.324 257.872 341.252 274.8 362.061 274.8 cv
528.229 274.8 li
549.037 274.8 565.965 257.872 565.965 237.064 cv
565.965 209.13 li
565.965 188.322 549.037 171.394 528.229 171.394 cv
362.061 171.394 li
level3{
gsave
clp
[6.49836e-15 -106.126 106.126 6.49836e-15 445.145 276.16 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.141176 .141176 .141176 ]
/C1 [.368627 .368627 .368627 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49836e-15 -106.126 106.126 6.49836e-15 445.145 276.16 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,U=W\,UF`_,pjrc-71)f-RU;j-n$Jm.4H\q.Olnu.k<,#/1`>'/M/P+/M8Y./h\k20/,(60JG490ekF=
1,:U@1G^gD1c.$G2)R6K2E!HO2`EZS2`NcV3&ruZ3B9,]3]]>a4$,Pe4?P_h4Ztql5!D.o5<h@s5X7S"
5X@\%5sdn)6:4+-6UO706psI477BX77Rfj;7n6'?84Z9B8P)KF8kM]J8kVfM92&#Q9MJ5U9heAX:/4S\
:JXb_:f'tc;,L1f;GpCj;c?Un<)cgr<)lpu<E<.$<`W:'='&L+=BJ^/=]nm2>$>*6>?b<9>[1N=?!U`A
~>
<~,U=W\,UF`_,pjrc-71)f-RU;j-n$Jm.4H\q.Olnu.k<,#/1`>'/M/P+/M8Y./h\k20/,(60JG490ekF=
1,:U@1G^gD1c.$G2)R6K2E!HO2`EZS2`NcV3&ruZ3B9,]3]]>a4$,Pe4?P_h4Ztql5!D.o5<h@s5X7S"
5X@\%5sdn)6:4+-6UO706psI477BX77Rfj;7n6'?84Z9B8P)KF8kM]J8kVfM92&#Q9MJ5U9heAX:/4S\
:JXb_:f'tc;,L1f;GpCj;c?Un<)cgr<)lpu<E<.$<`W:'='&L+=BJ^/=]nm2>$>*6>?b<9>[1N=?!U`A
~>
<~,U=W\,UF`_,pjrc-71)f-RU;j-n$Jm.4H\q.Olnu.k<,#/1`>'/M/P+/M8Y./h\k20/,(60JG490ekF=
1,:U@1G^gD1c.$G2)R6K2E!HO2`EZS2`NcV3&ruZ3B9,]3]]>a4$,Pe4?P_h4Ztql5!D.o5<h@s5X7S"
5X@\%5sdn)6:4+-6UO706psI477BX77Rfj;7n6'?84Z9B8P)KF8kM]J8kVfM92&#Q9MJ5U9heAX:/4S\
:JXb_:f'tc;,L1f;GpCj;c?Un<)cgr<)lpu<E<.$<`W:'='&L+=BJ^/=]nm2>$>*6>?b<9>[1N=?!U`A
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
528.229 275.878 mo
362.061 275.878 li
340.658 275.878 323.246 258.467 323.246 237.064 cv
323.246 209.13 li
323.246 187.727 340.658 170.316 362.061 170.316 cv
528.229 170.316 li
549.633 170.316 567.045 187.727 567.045 209.13 cv
567.045 237.064 li
567.045 258.467 549.633 275.878 528.229 275.878 cv
362.061 171.113 mo
341.099 171.113 324.042 188.167 324.042 209.13 cv
324.042 237.064 li
324.042 258.027 341.099 275.082 362.061 275.082 cv
528.229 275.082 li
549.192 275.082 566.247 258.027 566.247 237.064 cv
566.247 209.13 li
566.247 188.167 549.192 171.113 528.229 171.113 cv
362.061 171.113 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[245.28 0 0 107.04 322.56 173.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 511 
/H 223 
/M[511 0 0 -223 0 223 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QF
l+2JXK"?QFK"CrmKti5SK"loPK"loPK"loPK"loPK"loPotQO(K#3,VK#3,VK#3,VK#3,VK#3,VK#6lk
Qc=WsK#WD^l,J=pK#WD^K#WD^K#WD^K#[]-Lrt=lK$&\fK$&\fK$&\fK$&\fK$&\fo#d*?K$JtnK$Jtn
K$JtnK$JtnK$JtnK$NW+K$o8!K$o8!K$o8!K$o8!K$o8!K$o8!psP)OK%>P)K%>P)K%>P)K%>P)K%>P)
K%BDAPhL`CK%bh1K%bh1K%bh1l.UaCK%bh1K%g4XL#.F<K&2+9K&2+9K&2+9K&2+9K&2+9p"k_gK&VCA
K&VCAK&VCAK&VCAK&VCAK&Z.VQf`n^K'%[Il/mT[K'%[IK'%[IK'%[IK')smM!BTWK'IsQK'IsQK'IsQ
K'IsQK'IsQo'2A*K'n6YK'n6YK'n6YK'n6YK'n6YK'qmkK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcq"'F<
K(jlkK(jlkK(jlkK(jlkK(jlkK(na.Pkfq,K)(#oK)(#oK)(#ol1or,K)(#oK),EAL%p8pK(srmK(srm
K(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srml1fl*K(srmK(srmK(srmK(srm
K(srmK(srmK(srmK(srmK(srmK)"p3OnOD#K(afiK(afiK(afiK(afiK(afil1T`#K(FTcK(FTcK(FTc
K(FTcK(FTcK(Jd/MsZ,`K'e0WK'e0WK'e0WK'e0WK'e0Wn*QA$K&qUGK&qUGK&qUGK&u7YK&qUGK&qUG
roJjaK%5J'K%5J'K%5J'K%5J'K%5J'K%9PENkg7^K"uuRK"uuRK"uuRK"uuRK"uuRm(esZJt@RcJtD4u
Jt@RcJt@RcJt@RcJt@RcqjrU]Jo60XJo60XJo60XJo60XJo60XJo:-sO]I'7Jl[J(Jl[J(Jl[J(Jl[J(
Jl[J(kuNC:Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl_>@PZ<<8JlRD&
JlRD&JlRD&kuE=8JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&
JlRD&JlRD&JlV&8JlRD&JlRD&JlRD&JlRD&qc/GOJlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$
JlI>$JlI>$JlI>$JlLu6JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$
mo5NMJl@8"Jl@8"Jl@8"JlCo4Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"
Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"ku314Jl@8"Jl@8"Jl@8"JlDPFLf/h&Jl71uJl71uJl71uJl71uJl71u
Jl71uJl71uJl71uJl71uJl71uJl71uku*+2Jl71uJl71uJl71uJl71uJl71uJl;AAMc#('Jl.+sJl.+s
Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sku!%0Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+s
Jl.+sJl.+sJl.+sJl.+sJl.+sJl1l3QV`91Jl%%qktlt.Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%q
Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl(].Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qpeZlE
JkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJktW,JkptoJkptoJkptoJkptoJkptoJkpto
JkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptolq`sCJkgnmJkkQ*JkgnmJkgnmJkgnmJkgnmJkgnm
JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmktZh*JkgnmJkgnmJkgnmJkgnm
JkgnmJkl)9MbSdtJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkktQb(Jk^hkJk^hkJk^hk
Jk^hkJk^hkJk^hkJk^hkJkbo4N_G$uJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiktH\&JkUbiJkUbi
JkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkYE&JkL\gJkL\g
JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gkt?V$JkL\g
JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkPc0N_4mqJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVekt6P"
JkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkG9"
Jk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:Pc
kt-IuJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk>W,N_"amJk1JaJk1JaJk1JaJk1JaJk1JaJk1Ja
Jk1Jakt$CsJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk5H'O[k!nJk(D_Jk(D_Jk(D_
Jk(D_Jk(D_ksp=qJk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_
Jk(D_Jk(D_Jk,&qJk(D_Jk(D_r^VZ3Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]
Jjt>]Jjt>]Jjt>]Jk"uoJjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]nj\a1Jjk8[
Jjk8[Jjk8[Jjk8[Jjk8[JjnomJjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[
Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[ks^1mJjk8[JjoZ-Kg^M\Jjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2Y
Jjb2YJjb2YJjb2YJjb2YJjb2YJjb2YksU+kJjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2Y
Jjf/tO[F^fJjY,WJjY,WJjY,WJjY,WJjY,WksL%iJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,W
JjY,WJjY,WJjY,WJj\uoPX9sgJjP&UJjP&UJjP&UksBtgJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&U
JjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjS]gJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&U
JjP&UJjP&UJjP&Unj8I)JjFuSJjFuSJjFuSJjFuSJjFuSJjJWeJjFuSJjFuSJjFuSJjFuSJjFuSJjFuS
JjFuSJjFuSJjFuSJjFuSJjFuSJjFuSmm31'Jj=oQJj=oQJj=oQJjAQcJj=oQJj=oQJj=oQJj=oQJj=oQ
Jj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQks0hcJj=oQJj=oQJj=oQJjB2u
Ld-JUJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOks'baJj4iOJj4iOJj4iO
Jj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj8]gPWj[_Jj+cMJj+cMJj+cMkrs\_Jj+cMJj+cM
Jj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj/NbQT]p`Jj"]KkrjV]Jj"]K
Jj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj&?]Jj"]K
Jj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KmlcmtJinWIJinWIJinWIJir9[
JinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIlo^UrJieQG
Jii3YJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQG
JieQGkrXJYJieQGJieQGJieQGJieQGJieQGJii`hM`QGNJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KE
Ji\KEJi\KEkrODWJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KE
Ji`6ZQT9XXJiSECkrF>UJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSEC
JiSECJiSECJiSECJiW'UJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AJiJ?AJiJ?AJiJ?Akr=8SJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AJiJ?AJiN*VQT'LTJiA9?kr42QJiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?
JiA9?JiA9?JiA9?JiA9?JiA9?JiDpQJi83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=
Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=kr+,OJi83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=
Ji83=Ji83=Ji83=Ji83=Ji;sRQSj@PJi/-;kr"&MJi/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;
Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji2dMJi&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9
Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9kqmuKJi&'9Ji*H`Ken<:Jhr!7Jhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7kqdoIJhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7JhuXIJhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5
Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5kq[iGJhhp5Jhm<\Ke\06Jh_j3Jh_j3
Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3kqRcEJh_j3Jh_j3Jh_j3Jh_j3
Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3JhcLEJhVd1JhVd1JhVd1JhVd1
JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1kqI]CJhVd1Jh[0XKeJ$2
JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/kq@WAJhM^/JhM^/
JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhQ[JOa2P(JpDrnJpDrnJpDrnJpDrnJpDrnl$7lqK"loP
K"loPK"loPK"loPK"loPK"q)qMrB9HK&M=?K&M=?K&M=?K&M=?K&M=?n)9N"K("<[K("<[K("<[K(%sm
K("<[K("<[rpPR3K(=NaK(=NaK(=NaK(=NaK(=NaK(AU*Nq7koK(FTcK(FTcK(FTcK(FTcK(FTcK(FTc
K(FTcl19MuK(FTcK(FTcK(FTcK(Jm2M!fl_K'n6YK'n6YK'n6YK'n6YK'n6Yo'VY*K'IsQK'IsQK'IsQ
K'IsQK'IsQK'MUcK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGpuRFmK&M=?K&M=?K&M=?K&M=?K&M=?K&Q1W
PhgrIK&)%7K&)%7K&)%7l.psIK&)%7K&-F^L"M"0K%P\-K%P\-K%P\-K%P\-K%P\-p"5;SK%,D%K%,D%
K%,D%K%,D%K%,D%K%0/:Qd:90K$T%pl-Ft-K$T%pK$T%pK$T%pK$X>?Lrt=lK$&\fK$&\fK$&\fK$&\f
K$&\fo#d*7K#WD^K#WD^K#WD^K#WD^K#WD^K#[&pK#*&TK#*&TK#*&TK#*&TK#*&TK#*&Tpq_m%K"ZcL
K"ZcLK"ZcLK"ZcLK"ZcLK"^WdPdl=TK"-EBK"-EBK"-EBl*u>TK"-EBK"1fiKsQB;K!U'8K!U'8K!U'8
K!U'8K!U'8os9[]K!'^.K!'^.K!'^.K!'^.K!'^.K!+ICQ`>Y;JuXF&l)K?8JuXF&JuXF&JuXF&Ju\^J
Lo,d$Ju4-sJu4-sJu4-sJu4-sJu4-sntqPDJtdjkJtdjkJtdjkJtdjkJtdjkJthM(Jt@RcJt@RcJt@Rc
Jt@RcJt@RcJt@Rcpn!D3Jsh4YJsh4YJsh4YJsh4YJsh4YJsl(qPa-icJsCqQJsCqQJsCqQl'6jcJsCqQ
JsH>#KoptLJrtYIJrtYIJrtYIJrtYIJrtYIooY8oJrPAAJrPAAJrPAAJrPAAJrPAAJrT,VQ\g<NJr,)9
l%t"KJr,)9Jr,)9Jr,)9Jr0A]LkLA5JqS`/JqS`/JqS`/JqS`/JqS`/nq<-UJq/H'Jq/H'Jq/H'Jq/H'
Jq/H'Jq3*9Jp`/tJp`/tJp`/tJp`/tJp`/tJp`/tpjA!EJp;llJp;llJp;llJp;llJp;llJp?a/P]VM!
JolTdJolTdJolTdl#_N!JolTdJoq!6Kl;Q]Jo?6ZJo?6ZJo?6ZJo?6ZJo?6Zol#k+JnosRJnosRJnosR
JnosRJnosRJns^gQY1n_JnK[Jl">T\JnK[JJnK[JJnK[JJnOsnLh)*JJn0IDJn0IDJn0IDJn0IDJn0ID
nmm7~>

%%EndBinary
grestore
np
528.229 271.982 mo
362.061 271.982 li
342.775 271.982 327.143 256.35 327.143 237.064 cv
327.143 237.064 li
327.143 209.13 li
327.143 189.846 342.775 174.212 362.061 174.212 cv
528.229 174.212 li
547.515 174.212 563.147 189.846 563.147 209.13 cv
563.147 209.13 li
563.147 237.064 li
563.147 256.35 547.515 271.982 528.229 271.982 cv
328.551 231.43 mo
328.551 237.064 li
328.551 255.541 343.583 270.573 362.061 270.573 cv
528.229 270.573 li
546.706 270.573 561.738 255.541 561.738 237.064 cv
561.738 231.43 li
561.738 249.906 546.706 264.939 528.229 264.939 cv
362.061 264.939 li
343.583 264.939 328.551 249.906 328.551 231.43 cv
362.061 175.212 mo
343.358 175.212 328.143 190.428 328.143 209.13 cv
328.143 213.543 li
562.147 213.543 li
562.147 209.13 li
562.147 190.428 546.932 175.212 528.229 175.212 cv
362.061 175.212 li
level3{
gsave
clp
[5.9867e-15 -97.7702 97.7702 5.9867e-15 445.145 271.982 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.741176 .741176 .741176 ]
/C1 [.870588 .870588 .870588 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.9867e-15 -97.7702 97.7702 5.9867e-15 445.145 271.982 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]tM+m]tM+m^:q=q^:q=q^V@Ou^V@Ou^qdb$^qdb$_83t(_83t)_SX1,_SX1-_o'C0_o'C1`5KU4`5KU5
`Pog8`Poj:`l?$<`l?'>a2c6@a2c9BaN2HDaN2KFaiVZHai_cKb0%lLb0.uObKJ)PbKS2Sbfn;Tbg"DW
c-=MXcHa_\cHa_\cd0q`cd0q`d*U.dd*U.ddF$@hdF$@idaHRldaHRme'ldpe'ldqeC<!teC<!ue^`4#
e^`7%f%/F'f%/I)f@SX+f@S[-f\"j/f\"m1g"G'3g"P06g=k97g=tB:gY:K;gYCT>gt^]?gtgfBh;-oC
~>
<~]tM+m]tM+m^:q=q^:q=q^V@Ou^V@Ou^qdb$^qdb$_83t(_83t)_SX1,_SX1-_o'C0_o'C1`5KU4`5KU5
`Pog8`Poj:`l?$<`l?'>a2c6@a2c9BaN2HDaN2KFaiVZHai_cKb0%lLb0.uObKJ)PbKS2Sbfn;Tbg"DW
c-=MXcHa_\cHa_\cd0q`cd0q`d*U.dd*U.ddF$@hdF$@idaHRldaHRme'ldpe'ldqeC<!teC<!ue^`4#
e^`7%f%/F'f%/I)f@SX+f@S[-f\"j/f\"m1g"G'3g"P06g=k97g=tB:gY:K;gYCT>gt^]?gtgfBh;-oC
~>
<~]tM+m]tM+m^:q=q^:q=q^V@Ou^V@Ou^qdb$^qdb$_83t(_83t)_SX1,_SX1-_o'C0_o'C1`5KU4`5KU5
`Pog8`Poj:`l?$<`l?'>a2c6@a2c9BaN2HDaN2KFaiVZHai_cKb0%lLb0.uObKJ)PbKS2Sbfn;Tbg"DW
c-=MXcHa_\cHa_\cd0q`cd0q`d*U.dd*U.ddF$@hdF$@idaHRldaHRme'ldpe'ldqeC<!teC<!ue^`4#
e^`7%f%/F'f%/I)f@SX+f@S[-f\"j/f\"m1g"G'3g"P06g=k97g=tB:gY:K;gYCT>gt^]?gtgfBh;-oC
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
528.229 270.573 mo
362.061 270.573 li
343.583 270.573 328.551 255.541 328.551 237.064 cv
328.551 231.43 li
328.551 249.906 343.583 264.939 362.061 264.939 cv
528.229 264.939 li
546.706 264.939 561.738 249.906 561.738 231.43 cv
561.738 237.064 li
561.738 255.541 546.706 270.573 528.229 270.573 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[234.72 0 0 40.32 327.84 178.8 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 489 
/H 84 
/M[489 0 0 -84 0 84 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhS'-E,
K$/bhQ-8U<K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fS'$?*
K$&\fK$&\fK$&\fW63l<K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhS'-E,
K$/bhK$/bhK$/bhK$/bhK$/bh]?A:<K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fS'$?*
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$'S*K$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fS'$?*K$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$'S*K$&\fK$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fLs#V:K#rVdK#sM(K#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdS&p9)K$&\fK$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$'S*K$&\fK$'A$m`C(&
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#sM(K#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#uunU<8)1K$&\fK$&\fK$&\fK$&\fK$'S*K$&\fK$&\fK$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$*`.O3*!qK#rVdK#rVdK#sM(K#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdS&p9(K#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdiQ7h:K$&\fK$&\fK$&\fK$&\fK$&\fS'$?)K#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#sM(K#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdS&p9(K#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#sM(K#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdS&p9(K#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdcH3K8K#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbS&g3&K#iPbK#iPbK#iPbW6!`8K#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdS&p9(K#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#sM(K#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdS&p9(K#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#sM(K#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPb
K#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbS&g3&K#iPbQ,rC8K#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdS&p9(K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdiQ7h8K#iPbK#iPbK#iPbK#iPbK#iPbS&g3&K#iPbK#iPbK#iPbK#iPbK#iPb]?&(8K#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdS&p9(K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rhjqoFB1K#iPbS&g3&K#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPb
K#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#jG&K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdS&p9(K#rVdQ-&I8K#iPbK#iPbK#iPbK#iPbK#iPbK#l6Y
J,~>

%%EndBinary
grestore
np
562.147 213.543 mo
328.143 213.543 li
328.143 209.13 li
328.143 190.428 343.358 175.212 362.061 175.212 cv
528.229 175.212 li
546.932 175.212 562.147 190.428 562.147 209.13 cv
562.147 213.543 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[235.68 0 0 39.36 327.36 235.92 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 491 
/H 82 
/M[491 0 0 -82 0 82 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 491 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 491 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 491 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&MuSD/
K)^H&PQ1.OK)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$MuJ>-
K)UB$K)UB$K)UB$V#K9MK)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"MuA8+
K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"kl%"KK)C5uK)C5uK)C5uMu82)
K)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5u`r*OIK):/sK):/sK):/sK):/sK):/sK):/sK):/sMu/,'
K):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sfDDZGK)1)qK)1)qK)1)qK)1)qK)1)qMu&&%
K)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qkk^eEK)(#oK)(#oK)(#oMtqu#
K)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oq>#pCK(srmMtho!
K(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(t9!K(jlk
K(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkMt_htK(jlk
PP=S?K(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiK(f$6MY2SoK(Y&pK(X`g
K(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gMtM\oK(OZe
K(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZekk(A9K(FTcK(FTcK(FTcMt;PlK(FTc
K(FTcK(FTcK(FTcK(FTcK(FTcK(FTc`q-n7K(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaMt2JjK(=Na
K(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=ijK(4H_K(4H_
K(4H_K(4H_K(4H_K(68=cL?GTK(+B]K(+B]K(+B]K(+B]K(+B]K(+B]K(+B]K(+B]K(+]fK(+B]K(+B]
K(+B]K(+B]K(+B]K(+B]K(+B]K(-eL^$gRAK("<[K("<[K("<[K("<[K("<[K("<[K("WdK("<[K("<[
K("<[K(#N(hsQ*aK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'nQbK'e0WK'e0W
K'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WMsZ,`K'e0WPO7l+
K'\*UK'\*UK'\*UK'\*UK'\*UK'^MD^$C:9K'S$SK'S$SK'S$SK'S$SK'S$SK'S$SK'S?\K'S$SK'S$S
K'S$SK'S$SK'S$SK'S$SK'S$SK'S$SK'S$SK'V%SXQkE&K'IsQK'IsQK'IsQK'IsQK'J9ZK'IsQK'IsQ
K'IsQK'IsQK'IsQK'Kc/cKTrFK'@mOK'@mOK'@mOK'@mOK'@mOK'@mOK'@mOK'@mOK'A3XK'@mOK'AK`
nE>JfK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMq<3_!K'.aKMs#]TK'.aK
K'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'/'TK'%[IK'%[I
K'%[IK'%[IK'%[IK''K'cK0Z>K&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qpPK&qUGK&r3X
nDo2^K&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hjNK&hOEK&hOE
K&hOEK&i`ghrB=KK&_ICK&_ICK&_ICK&_ICK&_ICfAislK&VCAK&VCAK&VCAK&VCAK&VCAMrK?JK&VCA
K&VCAK&VCAK&VCAK&VCA[GoKjK&M=?K&M=?K&M=?K&M=?K&M=?K&M=?K&M=?K&M=?K&M=?MrB9HK&M=?
K&M=?K&M=?K&M=?K&M=?K&M=?K&M=?`o4VhK&D7=K&D7=K&D7=K&D7=K&D7=K&HI_MVj$CK&;LDK&;1;
K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&>2;XPSQcK&2+9K&2+9K&2+9K&2+9K&2FBK&2+9
K&2+9K&2+9K&2+9K&2+9K&3olcJ=*.K&)%7K&)%7K&)%7K&)%7K&)%7khUa~>

%%EndBinary
grestore
np
223.973 294.33 mo
85.7373 294.33 li
50.3106 294.33 21.4883 265.508 21.4883 230.081 cv
21.4883 194.654 50.3106 165.832 85.7373 165.832 cv
223.973 165.832 li
259.399 165.832 288.222 194.654 288.222 230.081 cv
288.222 265.508 259.399 294.33 223.973 294.33 cv
85.7373 166.035 mo
50.4965 166.035 21.8261 194.615 21.8261 229.855 cv
21.8261 265.097 50.4965 293.767 85.7373 293.767 cv
223.973 293.767 li
259.213 293.767 287.883 265.097 287.883 229.855 cv
287.883 194.615 259.213 166.035 223.973 166.035 cv
85.7373 166.035 li
1 1 1 rgb
f
223.973 293.767 mo
85.7373 293.767 li
50.4965 293.767 21.8261 265.097 21.8261 229.855 cv
21.8261 194.615 50.4965 166.035 85.7373 166.035 cv
223.973 166.035 li
259.213 166.035 287.883 194.615 287.883 229.855 cv
287.883 265.097 259.213 293.767 223.973 293.767 cv
85.7373 166.237 mo
50.6831 166.237 22.1641 194.576 22.1641 229.631 cv
22.1641 264.685 50.6831 293.203 85.7373 293.203 cv
223.973 293.203 li
259.026 293.203 287.545 264.685 287.545 229.631 cv
287.545 194.576 259.026 166.237 223.973 166.237 cv
85.7373 166.237 li
f
223.973 293.203 mo
85.7373 293.203 li
50.6831 293.203 22.1641 264.685 22.1641 229.631 cv
22.1641 194.576 50.6831 166.237 85.7373 166.237 cv
223.973 166.237 li
259.026 166.237 287.545 194.576 287.545 229.631 cv
287.545 264.685 259.026 293.203 223.973 293.203 cv
85.7373 166.44 mo
50.8692 166.44 22.502 194.537 22.502 229.405 cv
22.502 264.273 50.8692 292.641 85.7373 292.641 cv
223.973 292.641 li
258.84 292.641 287.208 264.273 287.208 229.405 cv
287.208 194.537 258.84 166.44 223.973 166.44 cv
85.7373 166.44 li
f
223.973 292.641 mo
85.7373 292.641 li
50.8692 292.641 22.502 264.273 22.502 229.405 cv
22.502 194.537 50.8692 166.44 85.7373 166.44 cv
223.973 166.44 li
258.84 166.44 287.208 194.537 287.208 229.405 cv
287.208 264.273 258.84 292.641 223.973 292.641 cv
85.7373 166.643 mo
51.0556 166.643 22.8403 194.498 22.8403 229.18 cv
22.8403 263.861 51.0556 292.077 85.7373 292.077 cv
223.973 292.077 li
258.654 292.077 286.87 263.861 286.87 229.18 cv
286.87 194.498 258.654 166.643 223.973 166.643 cv
85.7373 166.643 li
.996078 .996078 .996078 rgb
f
223.973 292.077 mo
85.7373 292.077 li
51.0556 292.077 22.8403 263.861 22.8403 229.18 cv
22.8403 194.498 51.0556 166.643 85.7373 166.643 cv
223.973 166.643 li
258.654 166.643 286.87 194.498 286.87 229.18 cv
286.87 263.861 258.654 292.077 223.973 292.077 cv
85.7373 166.846 mo
51.2422 166.846 23.1782 194.459 23.1782 228.954 cv
23.1782 263.45 51.2422 291.514 85.7373 291.514 cv
223.973 291.514 li
258.468 291.514 286.532 263.45 286.532 228.954 cv
286.532 194.459 258.468 166.846 223.973 166.846 cv
85.7373 166.846 li
f
223.973 291.514 mo
85.7373 291.514 li
51.2422 291.514 23.1782 263.45 23.1782 228.954 cv
23.1782 194.459 51.2422 166.846 85.7373 166.846 cv
223.973 166.846 li
258.468 166.846 286.532 194.459 286.532 228.954 cv
286.532 263.45 258.468 291.514 223.973 291.514 cv
85.7373 167.048 mo
51.4283 167.048 23.516 194.42 23.516 228.729 cv
23.516 263.038 51.4283 290.951 85.7373 290.951 cv
223.973 290.951 li
258.281 290.951 286.194 263.038 286.194 228.729 cv
286.194 194.42 258.281 167.048 223.973 167.048 cv
85.7373 167.048 li
.992157 .992157 .992157 rgb
f
223.973 290.951 mo
85.7373 290.951 li
51.4283 290.951 23.516 263.038 23.516 228.729 cv
23.516 194.42 51.4283 167.048 85.7373 167.048 cv
223.973 167.048 li
258.281 167.048 286.194 194.42 286.194 228.729 cv
286.194 263.038 258.281 290.951 223.973 290.951 cv
85.7373 167.251 mo
51.6148 167.251 23.854 194.381 23.854 228.504 cv
23.854 262.627 51.6148 290.388 85.7373 290.388 cv
223.973 290.388 li
258.095 290.388 285.856 262.627 285.856 228.504 cv
285.856 194.381 258.095 167.251 223.973 167.251 cv
85.7373 167.251 li
.988235 .988235 .988235 rgb
f
223.973 290.388 mo
85.7373 290.388 li
51.6148 290.388 23.854 262.627 23.854 228.504 cv
23.854 194.381 51.6148 167.251 85.7373 167.251 cv
223.973 167.251 li
258.095 167.251 285.856 194.381 285.856 228.504 cv
285.856 262.627 258.095 290.388 223.973 290.388 cv
85.7373 167.454 mo
51.8008 167.454 24.192 194.342 24.192 228.278 cv
24.192 262.215 51.8008 289.824 85.7373 289.824 cv
223.973 289.824 li
257.909 289.824 285.518 262.215 285.518 228.278 cv
285.518 194.342 257.909 167.454 223.973 167.454 cv
85.7373 167.454 li
.984314 .984314 .984314 rgb
f
223.973 289.824 mo
85.7373 289.824 li
51.8008 289.824 24.192 262.215 24.192 228.278 cv
24.192 194.342 51.8008 167.454 85.7373 167.454 cv
223.973 167.454 li
257.909 167.454 285.518 194.342 285.518 228.278 cv
285.518 262.215 257.909 289.824 223.973 289.824 cv
85.7373 167.657 mo
51.9873 167.657 24.5298 194.303 24.5298 228.054 cv
24.5298 261.804 51.9873 289.261 85.7373 289.261 cv
223.973 289.261 li
257.722 289.261 285.18 261.804 285.18 228.054 cv
285.18 194.303 257.722 167.657 223.973 167.657 cv
85.7373 167.657 li
.976471 .976471 .976471 rgb
f
223.973 289.261 mo
85.7373 289.261 li
51.9873 289.261 24.5298 261.804 24.5298 228.054 cv
24.5298 194.303 51.9873 167.657 85.7373 167.657 cv
223.973 167.657 li
257.722 167.657 285.18 194.303 285.18 228.054 cv
285.18 261.804 257.722 289.261 223.973 289.261 cv
85.7373 167.859 mo
52.1739 167.859 24.8677 194.264 24.8677 227.828 cv
24.8677 261.392 52.1739 288.698 85.7373 288.698 cv
223.973 288.698 li
257.536 288.698 284.842 261.392 284.842 227.828 cv
284.842 194.264 257.536 167.859 223.973 167.859 cv
85.7373 167.859 li
.972549 .972549 .972549 rgb
f
223.973 288.698 mo
85.7373 288.698 li
52.1739 288.698 24.8677 261.392 24.8677 227.828 cv
24.8677 194.264 52.1739 167.859 85.7373 167.859 cv
223.973 167.859 li
257.536 167.859 284.842 194.264 284.842 227.828 cv
284.842 261.392 257.536 288.698 223.973 288.698 cv
85.7373 168.062 mo
52.3598 168.062 25.2055 194.226 25.2055 227.603 cv
25.2055 260.98 52.3598 288.135 85.7373 288.135 cv
223.973 288.135 li
257.35 288.135 284.504 260.98 284.504 227.603 cv
284.504 194.226 257.35 168.062 223.973 168.062 cv
85.7373 168.062 li
.964706 .964706 .964706 rgb
f
223.973 288.135 mo
85.7373 288.135 li
52.3598 288.135 25.2055 260.98 25.2055 227.603 cv
25.2055 194.226 52.3598 168.062 85.7373 168.062 cv
223.973 168.062 li
257.35 168.062 284.504 194.226 284.504 227.603 cv
284.504 260.98 257.35 288.135 223.973 288.135 cv
85.7373 168.265 mo
52.5464 168.265 25.5435 194.187 25.5435 227.378 cv
25.5435 260.568 52.5464 287.571 85.7373 287.571 cv
223.973 287.571 li
257.164 287.571 284.167 260.568 284.167 227.378 cv
284.167 194.187 257.164 168.265 223.973 168.265 cv
85.7373 168.265 li
.956863 .956863 .956863 rgb
f
223.973 287.571 mo
85.7373 287.571 li
52.5464 287.571 25.5435 260.568 25.5435 227.378 cv
25.5435 194.187 52.5464 168.265 85.7373 168.265 cv
223.973 168.265 li
257.164 168.265 284.167 194.187 284.167 227.378 cv
284.167 260.568 257.164 287.571 223.973 287.571 cv
85.7373 168.468 mo
52.7325 168.468 25.8813 194.147 25.8813 227.152 cv
25.8813 260.157 52.7325 287.009 85.7373 287.009 cv
223.973 287.009 li
256.977 287.009 283.829 260.157 283.829 227.152 cv
283.829 194.147 256.977 168.468 223.973 168.468 cv
85.7373 168.468 li
.94902 .94902 .94902 rgb
f
223.973 287.009 mo
85.7373 287.009 li
52.7325 287.009 25.8813 260.157 25.8813 227.152 cv
25.8813 194.147 52.7325 168.468 85.7373 168.468 cv
223.973 168.468 li
256.977 168.468 283.829 194.147 283.829 227.152 cv
283.829 260.157 256.977 287.009 223.973 287.009 cv
79.5314 168.977 mo
49.6181 171.949 26.2193 196.204 26.2193 226.927 cv
26.2193 259.745 52.9189 286.445 85.7373 286.445 cv
223.973 286.445 li
256.791 286.445 283.491 259.745 283.491 226.927 cv
283.491 196.204 260.093 171.949 230.18 168.977 cv
228.142 168.745 226.072 168.625 223.973 168.625 cv
85.7373 168.625 li
83.6401 168.625 81.5676 168.745 79.5314 168.977 cv
.941176 .941176 .941176 rgb
f
223.973 286.445 mo
85.7373 286.445 li
52.9189 286.445 26.2193 259.745 26.2193 226.927 cv
26.2193 196.204 49.6181 171.949 79.5314 168.977 cv
76.6979 169.299 73.9298 169.841 71.244 170.583 cv
45.5964 176.767 26.5571 199.069 26.5571 226.702 cv
26.5571 259.334 53.1054 285.882 85.7373 285.882 cv
223.973 285.882 li
256.604 285.882 283.153 259.334 283.153 226.702 cv
283.153 199.069 264.115 176.768 238.468 170.583 cv
235.782 169.841 233.013 169.3 230.18 168.977 cv
260.093 171.949 283.491 196.204 283.491 226.927 cv
283.491 259.745 256.791 286.445 223.973 286.445 cv
.933333 .933333 .933333 rgb
f
223.973 285.882 mo
85.7373 285.882 li
53.1054 285.882 26.5571 259.334 26.5571 226.702 cv
26.5571 199.069 45.5964 176.767 71.244 170.583 cv
69.5469 171.052 67.8856 171.6 66.2588 172.225 cv
43.3574 179.904 26.895 200.855 26.895 226.477 cv
26.895 258.922 53.2915 285.318 85.7373 285.318 cv
223.973 285.318 li
256.418 285.318 282.815 258.922 282.815 226.477 cv
282.815 200.855 266.356 179.905 243.454 172.226 cv
241.829 171.602 240.163 171.052 238.468 170.583 cv
264.115 176.768 283.153 199.069 283.153 226.702 cv
283.153 259.334 256.604 285.882 223.973 285.882 cv
.921569 .921569 .921569 rgb
f
223.973 285.318 mo
85.7373 285.318 li
53.2915 285.318 26.895 258.922 26.895 226.477 cv
26.895 200.855 43.3574 179.904 66.2588 172.225 cv
64.9327 172.734 63.6306 173.295 62.3565 173.903 cv
41.7 182.507 27.2328 202.299 27.2328 226.251 cv
27.2328 258.511 53.4781 284.756 85.7373 284.756 cv
223.973 284.756 li
256.232 284.756 282.477 258.511 282.477 226.251 cv
282.477 202.301 268.009 182.509 247.355 173.903 cv
246.081 173.295 244.78 172.735 243.454 172.226 cv
266.356 179.905 282.815 200.855 282.815 226.477 cv
282.815 258.922 256.418 285.318 223.973 285.318 cv
.913725 .913725 .913725 rgb
f
223.973 284.756 mo
85.7373 284.756 li
53.4781 284.756 27.2328 258.511 27.2328 226.251 cv
27.2328 202.299 41.7 182.507 62.3565 173.903 cv
61.2284 174.441 60.1216 175.017 59.0378 175.629 cv
40.3594 184.842 27.5708 203.57 27.5708 226.026 cv
27.5708 258.099 53.664 284.192 85.7373 284.192 cv
223.973 284.192 li
256.045 284.192 282.139 258.099 282.139 226.026 cv
282.139 203.572 269.352 184.845 250.676 175.631 cv
249.591 175.018 248.485 174.442 247.355 173.903 cv
268.009 182.509 282.477 202.301 282.477 226.251 cv
282.477 258.511 256.232 284.756 223.973 284.756 cv
.901961 .901961 .901961 rgb
f
223.973 284.192 mo
85.7373 284.192 li
53.664 284.192 27.5708 258.099 27.5708 226.026 cv
27.5708 203.57 40.3594 184.842 59.0378 175.629 cv
58.0346 176.195 57.0513 176.793 56.0887 177.42 cv
39.2228 187.026 27.9088 204.745 27.9088 225.801 cv
27.9088 257.687 53.8506 283.629 85.7373 283.629 cv
223.973 283.629 li
255.859 283.629 281.801 257.687 281.801 225.801 cv
281.801 204.745 270.489 187.027 253.623 177.421 cv
252.662 176.795 251.678 176.197 250.676 175.631 cv
269.352 184.845 282.139 203.572 282.139 226.026 cv
282.139 258.099 256.045 284.192 223.973 284.192 cv
.890196 .890196 .890196 rgb
f
223.973 283.629 mo
85.7373 283.629 li
53.8506 283.629 27.9088 257.687 27.9088 225.801 cv
27.9088 204.745 39.2228 187.026 56.0887 177.42 cv
55.1719 178.017 54.2761 178.639 53.3985 179.289 cv
38.2264 189.122 28.2466 205.857 28.2466 225.575 cv
28.2466 257.276 54.0371 283.066 85.7373 283.066 cv
223.973 283.066 li
255.673 283.066 281.463 257.276 281.463 225.575 cv
281.463 205.857 271.486 189.124 256.313 179.29 cv
255.436 178.64 254.54 178.018 253.623 177.421 cv
270.489 187.027 281.801 204.745 281.801 225.801 cv
281.801 257.687 255.859 283.629 223.973 283.629 cv
.878431 .878431 .878431 rgb
f
223.973 283.066 mo
85.7373 283.066 li
54.0371 283.066 28.2466 257.276 28.2466 225.575 cv
28.2466 205.857 38.2264 189.122 53.3985 179.289 cv
52.5428 179.922 51.7058 180.58 50.8894 181.261 cv
37.3331 191.184 28.5845 206.942 28.5845 225.35 cv
28.5845 256.864 54.2231 282.503 85.7373 282.503 cv
223.973 282.503 li
255.486 282.503 281.125 256.864 281.125 225.35 cv
281.125 206.944 272.379 191.188 258.825 181.265 cv
258.007 180.583 257.171 179.924 256.313 179.29 cv
271.486 189.124 281.463 205.857 281.463 225.575 cv
281.463 257.276 255.673 283.066 223.973 283.066 cv
.858823 .858823 .858823 rgb
f
223.973 282.503 mo
85.7373 282.503 li
54.2231 282.503 28.5845 256.864 28.5845 225.35 cv
28.5845 206.942 37.3331 191.184 50.8894 181.261 cv
50.077 181.939 49.282 182.643 48.5105 183.366 cv
36.516 193.254 28.9223 208.023 28.9223 225.125 cv
28.9223 256.453 54.4096 281.939 85.7373 281.939 cv
223.973 281.939 li
255.3 281.939 280.787 256.453 280.787 225.125 cv
280.787 208.025 273.195 193.257 261.203 183.369 cv
260.432 182.646 259.638 181.943 258.825 181.265 cv
272.379 191.188 281.125 206.944 281.125 225.35 cv
281.125 256.864 255.486 282.503 223.973 282.503 cv
.847059 .847059 .847059 rgb
f
223.973 281.939 mo
85.7373 281.939 li
54.4096 281.939 28.9223 256.453 28.9223 225.125 cv
28.9223 208.023 36.516 193.254 48.5105 183.366 cv
47.7229 184.104 46.9591 184.864 46.2163 185.647 cv
35.758 195.379 29.2603 209.129 29.2603 224.899 cv
29.2603 256.041 54.5958 281.377 85.7373 281.377 cv
223.973 281.377 li
255.114 281.377 280.449 256.041 280.449 224.899 cv
280.449 209.131 273.955 195.384 263.499 185.652 cv
262.756 184.869 261.991 184.108 261.203 183.369 cv
273.195 193.257 280.787 208.025 280.787 225.125 cv
280.787 256.453 255.3 281.939 223.973 281.939 cv
.831372 .831372 .831372 rgb
f
223.973 281.377 mo
85.7373 281.377 li
54.5958 281.377 29.2603 256.041 29.2603 224.899 cv
29.2603 209.129 35.758 195.379 46.2163 185.647 cv
45.4384 186.468 44.6859 187.312 43.9597 188.18 cv
35.0345 197.623 29.5987 210.293 29.5987 224.674 cv
29.5987 255.63 54.7822 280.814 85.7373 280.814 cv
223.973 280.814 li
254.928 280.814 280.111 255.63 280.111 224.674 cv
280.111 210.294 274.675 197.625 265.752 188.182 cv
265.027 187.315 264.275 186.472 263.499 185.652 cv
273.955 195.384 280.449 209.131 280.449 224.899 cv
280.449 256.041 255.114 281.377 223.973 281.377 cv
.815686 .815686 .815686 rgb
f
223.973 280.814 mo
85.7373 280.814 li
54.7822 280.814 29.5987 255.63 29.5987 224.674 cv
29.5987 210.293 35.0345 197.623 43.9597 188.18 cv
43.1754 189.117 42.4214 190.081 41.7004 191.069 cv
34.3303 200.068 29.9365 211.557 29.9365 224.449 cv
29.9365 255.218 54.9687 280.25 85.7373 280.25 cv
223.973 280.25 li
254.741 280.25 279.773 255.218 279.773 224.449 cv
279.773 211.559 275.38 200.071 268.012 191.072 cv
267.29 190.082 266.537 189.12 265.752 188.182 cv
274.675 197.625 280.111 210.294 280.111 224.674 cv
280.111 255.63 254.928 280.814 223.973 280.814 cv
.803922 .803922 .803922 rgb
f
223.973 280.25 mo
85.7373 280.25 li
54.9687 280.25 29.9365 255.218 29.9365 224.449 cv
29.9365 211.557 34.3303 200.068 41.7004 191.069 cv
40.885 192.188 40.1107 193.338 39.3806 194.518 cv
33.6262 202.859 30.2745 213 30.2745 224.224 cv
30.2745 254.807 55.1548 279.687 85.7373 279.687 cv
223.973 279.687 li
254.555 279.687 279.436 254.807 279.436 224.224 cv
279.436 213 276.085 202.86 270.331 194.52 cv
269.601 193.341 268.826 192.189 268.012 191.072 cv
275.38 200.071 279.773 211.559 279.773 224.449 cv
279.773 255.218 254.741 280.25 223.973 280.25 cv
.780392 .780392 .780392 rgb
f
223.973 279.687 mo
85.7373 279.687 li
55.1548 279.687 30.2745 254.807 30.2745 224.224 cv
30.2745 213 33.6262 202.859 39.3806 194.518 cv
38.4874 195.962 37.6603 197.449 36.9024 198.977 cv
32.8864 206.309 30.6123 214.782 30.6123 223.999 cv
30.6123 254.395 55.3414 279.124 85.7373 279.124 cv
223.973 279.124 li
254.369 279.124 279.098 254.395 279.098 223.999 cv
279.098 214.783 276.824 206.312 272.81 198.981 cv
272.051 197.451 271.225 195.965 270.331 194.52 cv
276.085 202.86 279.436 213 279.436 224.224 cv
279.436 254.807 254.555 279.687 223.973 279.687 cv
.764706 .764706 .764706 rgb
f
223.973 279.124 mo
85.7373 279.124 li
55.3414 279.124 30.6123 254.395 30.6123 223.999 cv
30.6123 214.782 32.8864 206.309 36.9024 198.977 cv
35.8128 201.174 34.8667 203.456 34.0776 205.808 cv
32.0527 211.342 30.9502 217.375 30.9502 223.773 cv
30.9502 253.983 55.5273 278.56 85.7373 278.56 cv
223.973 278.56 li
254.182 278.56 278.76 253.983 278.76 223.773 cv
278.76 217.377 277.657 211.345 275.634 205.811 cv
274.845 203.459 273.899 201.178 272.81 198.981 cv
276.824 206.312 279.098 214.783 279.098 223.999 cv
279.098 254.395 254.369 279.124 223.973 279.124 cv
.74902 .74902 .74902 rgb
f
223.973 278.56 mo
85.7373 278.56 li
55.5273 278.56 30.9502 253.983 30.9502 223.773 cv
30.9502 217.375 32.0527 211.342 34.0776 205.808 cv
32.2542 211.242 31.2657 217.057 31.2657 223.097 cv
31.2657 223.097 li
31.2657 223.097 li
31.2657 224.091 31.2924 225.078 31.3452 226.059 cv
32.6611 254.922 56.555 277.997 85.7373 277.997 cv
223.973 277.997 li
253.149 277.997 277.04 254.932 278.364 226.077 cv
278.417 225.091 278.444 224.096 278.444 223.097 cv
278.444 223.097 li
278.444 223.097 li
278.444 217.058 277.456 211.244 275.634 205.811 cv
277.657 211.345 278.76 217.377 278.76 223.773 cv
278.76 253.983 254.182 278.56 223.973 278.56 cv
.729412 .729412 .729412 rgb
f
223.973 277.997 mo
85.7373 277.997 li
56.555 277.997 32.6611 254.922 31.3452 226.059 cv
32.8885 254.723 56.6953 277.569 85.7373 277.569 cv
223.973 277.569 li
253.01 277.569 276.812 254.733 278.364 226.077 cv
277.04 254.932 253.149 277.997 223.973 277.997 cv
.709804 .709804 .709804 rgb
f
85.7373 277.569 mo
55.7017 277.569 31.2657 253.133 31.2657 223.097 cv
31.2657 193.062 55.7017 168.625 85.7373 168.625 cv
223.973 168.625 li
254.009 168.625 278.444 193.062 278.444 223.097 cv
278.444 253.133 254.009 277.569 223.973 277.569 cv
85.7373 277.569 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 154.855 277.569 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 154.855 277.569 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
223.973 277.569 mo
85.7373 277.569 li
56.6953 277.569 32.8885 254.723 31.3452 226.059 cv
31.2924 225.078 31.2657 224.091 31.2657 223.097 cv
31.2657 223.097 li
31.2657 193.062 55.7017 168.625 85.7373 168.625 cv
223.973 168.625 li
254.009 168.625 278.444 193.062 278.444 223.097 cv
278.444 223.097 li
278.444 224.096 278.417 225.091 278.364 226.077 cv
276.812 254.733 253.01 277.569 223.973 277.569 cv
85.7373 169.33 mo
56.0898 169.33 31.9703 193.45 31.9703 223.097 cv
31.9703 252.745 56.0898 276.864 85.7373 276.864 cv
223.973 276.864 li
253.62 276.864 277.74 252.745 277.74 223.097 cv
277.74 193.45 253.62 169.33 223.973 169.33 cv
85.7373 169.33 li
223.973 272.686 mo
85.7373 272.686 li
58.3935 272.686 36.1479 250.441 36.1479 223.097 cv
36.1479 195.753 58.3935 173.508 85.7373 173.508 cv
223.973 173.508 li
251.316 173.508 273.562 195.753 273.562 223.097 cv
273.562 250.441 251.316 272.686 223.973 272.686 cv
36.8525 223.097 mo
36.8525 223.097 li
36.8525 250.096 58.7388 271.982 85.7373 271.982 cv
223.973 271.982 li
250.971 271.982 272.857 250.096 272.857 223.097 cv
272.857 223.097 li
272.857 223.097 li
272.857 222.992 272.857 222.886 272.856 222.781 cv
272.686 195.928 250.866 174.212 223.973 174.212 cv
223.973 174.212 li
85.7373 174.212 li
58.7388 174.212 36.8525 196.099 36.8525 223.097 cv
36.8525 223.097 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 154.855 277.569 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 154.855 277.569 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
223.973 276.864 mo
85.7373 276.864 li
56.0898 276.864 31.9703 252.745 31.9703 223.097 cv
31.9703 193.45 56.0898 169.33 85.7373 169.33 cv
223.973 169.33 li
253.62 169.33 277.74 193.45 277.74 223.097 cv
277.74 252.745 253.62 276.864 223.973 276.864 cv
32.6743 223.097 mo
32.6743 223.097 li
32.6743 252.356 56.4786 276.16 85.7373 276.16 cv
223.973 276.16 li
253.231 276.16 277.036 252.356 277.036 223.097 cv
277.036 223.097 li
277.036 223.097 li
277.036 193.838 253.231 170.034 223.973 170.034 cv
85.7373 170.034 li
56.4786 170.034 32.6743 193.838 32.6743 223.097 cv
32.6743 223.097 li
223.973 273.391 mo
85.7373 273.391 li
58.0058 273.391 35.4434 250.829 35.4434 223.097 cv
35.4434 195.365 58.0058 172.803 85.7373 172.803 cv
223.973 172.803 li
251.705 172.803 274.267 195.365 274.267 223.097 cv
274.267 250.829 251.705 273.391 223.973 273.391 cv
85.7373 173.508 mo
58.3935 173.508 36.1479 195.753 36.1479 223.097 cv
36.1479 250.441 58.3935 272.686 85.7373 272.686 cv
223.973 272.686 li
251.316 272.686 273.562 250.441 273.562 223.097 cv
273.562 195.753 251.316 173.508 223.973 173.508 cv
85.7373 173.508 li
level3{
gsave
clp
[6.58462e-15 -107.535 107.535 6.58462e-15 154.855 276.865 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.58462e-15 -107.535 107.535 6.58462e-15 154.855 276.865 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
223.973 274.8 mo
85.7373 274.8 li
57.2285 274.8 34.0347 251.606 34.0347 223.097 cv
34.0347 194.588 57.2285 171.394 85.7373 171.394 cv
223.973 171.394 li
252.482 171.394 275.675 194.588 275.675 223.097 cv
275.675 251.606 252.482 274.8 223.973 274.8 cv
85.7373 172.803 mo
58.0058 172.803 35.4434 195.365 35.4434 223.097 cv
35.4434 250.829 58.0058 273.391 85.7373 273.391 cv
223.973 273.391 li
251.705 273.391 274.267 250.829 274.267 223.097 cv
274.267 195.365 251.705 172.803 223.973 172.803 cv
85.7373 172.803 li
level3{
gsave
clp
[6.49836e-15 -106.126 106.126 6.49836e-15 154.855 276.16 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49836e-15 -106.126 106.126 6.49836e-15 154.855 276.16 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
223.973 276.16 mo
85.7373 276.16 li
56.4786 276.16 32.6743 252.356 32.6743 223.097 cv
32.6743 223.097 li
32.6743 193.838 56.4786 170.034 85.7373 170.034 cv
223.973 170.034 li
253.231 170.034 277.036 193.838 277.036 223.097 cv
277.036 223.097 li
277.036 252.356 253.231 276.16 223.973 276.16 cv
85.7373 170.316 mo
56.6343 170.316 32.9565 193.994 32.9565 223.097 cv
32.9565 252.2 56.6343 275.878 85.7373 275.878 cv
223.973 275.878 li
253.076 275.878 276.753 252.2 276.753 223.097 cv
276.753 193.994 253.076 170.316 223.973 170.316 cv
85.7373 170.316 li
223.973 275.082 mo
85.7373 275.082 li
57.0728 275.082 33.7529 251.762 33.7529 223.097 cv
33.7529 194.433 57.0728 171.113 85.7373 171.113 cv
223.973 171.113 li
252.637 171.113 275.957 194.433 275.957 223.097 cv
275.957 251.762 252.637 275.082 223.973 275.082 cv
85.7373 171.394 mo
57.2285 171.394 34.0347 194.588 34.0347 223.097 cv
34.0347 251.606 57.2285 274.8 85.7373 274.8 cv
223.973 274.8 li
252.482 274.8 275.675 251.606 275.675 223.097 cv
275.675 194.588 252.482 171.394 223.973 171.394 cv
85.7373 171.394 li
level3{
gsave
clp
[6.49836e-15 -106.126 106.126 6.49836e-15 154.855 276.16 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49836e-15 -106.126 106.126 6.49836e-15 154.855 276.16 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
223.973 275.878 mo
85.7373 275.878 li
56.6343 275.878 32.9565 252.2 32.9565 223.097 cv
32.9565 193.994 56.6343 170.316 85.7373 170.316 cv
223.973 170.316 li
253.076 170.316 276.753 193.994 276.753 223.097 cv
276.753 252.2 253.076 275.878 223.973 275.878 cv
85.7373 171.113 mo
57.0728 171.113 33.7529 194.433 33.7529 223.097 cv
33.7529 251.762 57.0728 275.082 85.7373 275.082 cv
223.973 275.082 li
252.637 275.082 275.957 251.762 275.957 223.097 cv
275.957 194.433 252.637 171.113 223.973 171.113 cv
85.7373 171.113 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[245.28 0 0 107.04 32.16 173.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 511 
/H 223 
/M[511 0 0 -223 0 223 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QF
l+2JXK"?QFK"CrmKti5SK"loPK"loPK"loPK"loPK"loPotQO(K#3,VK#3,VK#3,VK#3,VK#3,VK#6lk
Qc=WsK#WD^l,J=pK#WD^K#WD^K#WD^K#[]-Lrt=lK$&\fK$&\fK$&\fK$&\fK$&\fo#d*?K$JtnK$Jtn
K$JtnK$JtnK$JtnK$NW+K$o8!K$o8!K$o8!K$o8!K$o8!K$o8!psP)OK%>P)K%>P)K%>P)K%>P)K%>P)
K%BDAPhL`CK%bh1K%bh1K%bh1l.UaCK%bh1K%g4XL#.F<K&2+9K&2+9K&2+9K&2+9K&2+9p"k_gK&VCA
K&VCAK&VCAK&VCAK&VCAK&Z.VQf`n^K'%[Il/mT[K'%[IK'%[IK'%[IK')smM!BTWK'IsQK'IsQK'IsQ
K'IsQK'IsQo'2A*K'n6YK'n6YK'n6YK'n6YK'n6YK'qmkK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcq"'F<
K(jlkK(jlkK(jlkK(jlkK(jlkK(na.Pkfq,K)(#oK)(#oK)(#ol1or,K)(#oK),EAL%p8pK(srmK(srm
K(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srml1fl*K(srmK(srmK(srmK(srm
K(srmK(srmK(srmK(srmK(srmK)"p3OnOD#K(afiK(afiK(afiK(afiK(afil1T`#K(FTcK(FTcK(FTc
K(FTcK(FTcK(Jd/MsZ,`K'e0WK'e0WK'e0WK'e0WK'e0Wn*QA$K&qUGK&qUGK&qUGK&u7YK&qUGK&qUG
roJjaK%5J'K%5J'K%5J'K%5J'K%5J'K%9PENkg7^K"uuRK"uuRK"uuRK"uuRK"uuRm(esZJt@RcJtD4u
Jt@RcJt@RcJt@RcJt@RcqjrU]Jo60XJo60XJo60XJo60XJo60XJo:-sO]I'7Jl[J(Jl[J(Jl[J(Jl[J(
Jl[J(kuNC:Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl_>@PZ<<8JlRD&
JlRD&JlRD&kuE=8JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&
JlRD&JlRD&JlV&8JlRD&JlRD&JlRD&JlRD&qc/GOJlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$
JlI>$JlI>$JlI>$JlLu6JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$
mo5NMJl@8"Jl@8"Jl@8"JlCo4Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"
Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"ku314Jl@8"Jl@8"Jl@8"JlDPFLf/h&Jl71uJl71uJl71uJl71uJl71u
Jl71uJl71uJl71uJl71uJl71uJl71uku*+2Jl71uJl71uJl71uJl71uJl71uJl;AAMc#('Jl.+sJl.+s
Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sku!%0Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+s
Jl.+sJl.+sJl.+sJl.+sJl.+sJl1l3QV`91Jl%%qktlt.Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%q
Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl(].Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qpeZlE
JkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJktW,JkptoJkptoJkptoJkptoJkptoJkpto
JkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptolq`sCJkgnmJkkQ*JkgnmJkgnmJkgnmJkgnmJkgnm
JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmktZh*JkgnmJkgnmJkgnmJkgnm
JkgnmJkl)9MbSdtJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkktQb(Jk^hkJk^hkJk^hk
Jk^hkJk^hkJk^hkJk^hkJkbo4N_G$uJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiktH\&JkUbiJkUbi
JkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkYE&JkL\gJkL\g
JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gkt?V$JkL\g
JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkPc0N_4mqJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVekt6P"
JkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkG9"
Jk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:Pc
kt-IuJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk>W,N_"amJk1JaJk1JaJk1JaJk1JaJk1JaJk1Ja
Jk1Jakt$CsJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk5H'O[k!nJk(D_Jk(D_Jk(D_
Jk(D_Jk(D_ksp=qJk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_
Jk(D_Jk(D_Jk,&qJk(D_Jk(D_r^VZ3Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]
Jjt>]Jjt>]Jjt>]Jk"uoJjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]nj\a1Jjk8[
Jjk8[Jjk8[Jjk8[Jjk8[JjnomJjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[
Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[ks^1mJjk8[JjoZ-Kg^M\Jjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2Y
Jjb2YJjb2YJjb2YJjb2YJjb2YJjb2YksU+kJjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2Y
Jjf/tO[F^fJjY,WJjY,WJjY,WJjY,WJjY,WksL%iJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,W
JjY,WJjY,WJjY,WJj\uoPX9sgJjP&UJjP&UJjP&UksBtgJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&U
JjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjS]gJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&U
JjP&UJjP&UJjP&Unj8I)JjFuSJjFuSJjFuSJjFuSJjFuSJjJWeJjFuSJjFuSJjFuSJjFuSJjFuSJjFuS
JjFuSJjFuSJjFuSJjFuSJjFuSJjFuSmm31'Jj=oQJj=oQJj=oQJjAQcJj=oQJj=oQJj=oQJj=oQJj=oQ
Jj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQks0hcJj=oQJj=oQJj=oQJjB2u
Ld-JUJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOks'baJj4iOJj4iOJj4iO
Jj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj8]gPWj[_Jj+cMJj+cMJj+cMkrs\_Jj+cMJj+cM
Jj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj/NbQT]p`Jj"]KkrjV]Jj"]K
Jj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj&?]Jj"]K
Jj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KmlcmtJinWIJinWIJinWIJir9[
JinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIlo^UrJieQG
Jii3YJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQG
JieQGkrXJYJieQGJieQGJieQGJieQGJieQGJii`hM`QGNJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KE
Ji\KEJi\KEkrODWJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KE
Ji`6ZQT9XXJiSECkrF>UJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSEC
JiSECJiSECJiSECJiW'UJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AJiJ?AJiJ?AJiJ?Akr=8SJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AJiJ?AJiN*VQT'LTJiA9?kr42QJiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?
JiA9?JiA9?JiA9?JiA9?JiA9?JiDpQJi83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=
Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=kr+,OJi83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=
Ji83=Ji83=Ji83=Ji83=Ji;sRQSj@PJi/-;kr"&MJi/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;
Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji2dMJi&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9
Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9kqmuKJi&'9Ji*H`Ken<:Jhr!7Jhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7kqdoIJhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7JhuXIJhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5
Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5kq[iGJhhp5Jhm<\Ke\06Jh_j3Jh_j3
Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3kqRcEJh_j3Jh_j3Jh_j3Jh_j3
Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3JhcLEJhVd1JhVd1JhVd1JhVd1
JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1kqI]CJhVd1Jh[0XKeJ$2
JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/kq@WAJhM^/JhM^/
JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhQ[JOa2P(JpDrnJpDrnJpDrnJpDrnJpDrnl$7lqK"loP
K"loPK"loPK"loPK"loPK"q)qMrB9HK&M=?K&M=?K&M=?K&M=?K&M=?n)9N"K("<[K("<[K("<[K(%sm
K("<[K("<[rpPR3K(=NaK(=NaK(=NaK(=NaK(=NaK(AU*Nq7koK(FTcK(FTcK(FTcK(FTcK(FTcK(FTc
K(FTcl19MuK(FTcK(FTcK(FTcK(Jm2M!fl_K'n6YK'n6YK'n6YK'n6YK'n6Yo'VY*K'IsQK'IsQK'IsQ
K'IsQK'IsQK'MUcK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGpuRFmK&M=?K&M=?K&M=?K&M=?K&M=?K&Q1W
PhgrIK&)%7K&)%7K&)%7l.psIK&)%7K&-F^L"M"0K%P\-K%P\-K%P\-K%P\-K%P\-p"5;SK%,D%K%,D%
K%,D%K%,D%K%,D%K%0/:Qd:90K$T%pl-Ft-K$T%pK$T%pK$T%pK$X>?Lrt=lK$&\fK$&\fK$&\fK$&\f
K$&\fo#d*7K#WD^K#WD^K#WD^K#WD^K#WD^K#[&pK#*&TK#*&TK#*&TK#*&TK#*&TK#*&Tpq_m%K"ZcL
K"ZcLK"ZcLK"ZcLK"ZcLK"^WdPdl=TK"-EBK"-EBK"-EBl*u>TK"-EBK"1fiKsQB;K!U'8K!U'8K!U'8
K!U'8K!U'8os9[]K!'^.K!'^.K!'^.K!'^.K!'^.K!+ICQ`>Y;JuXF&l)K?8JuXF&JuXF&JuXF&Ju\^J
Lo,d$Ju4-sJu4-sJu4-sJu4-sJu4-sntqPDJtdjkJtdjkJtdjkJtdjkJtdjkJthM(Jt@RcJt@RcJt@Rc
Jt@RcJt@RcJt@Rcpn!D3Jsh4YJsh4YJsh4YJsh4YJsh4YJsl(qPa-icJsCqQJsCqQJsCqQl'6jcJsCqQ
JsH>#KoptLJrtYIJrtYIJrtYIJrtYIJrtYIooY8oJrPAAJrPAAJrPAAJrPAAJrPAAJrT,VQ\g<NJr,)9
l%t"KJr,)9Jr,)9Jr,)9Jr0A]LkLA5JqS`/JqS`/JqS`/JqS`/JqS`/nq<-UJq/H'Jq/H'Jq/H'Jq/H'
Jq/H'Jq3*9Jp`/tJp`/tJp`/tJp`/tJp`/tJp`/tpjA!EJp;llJp;llJp;llJp;llJp;llJp?a/P]VM!
JolTdJolTdJolTdl#_N!JolTdJoq!6Kl;Q]Jo?6ZJo?6ZJo?6ZJo?6ZJo?6Zol#k+JnosRJnosRJnosR
JnosRJnosRJns^gQY1n_JnK[Jl">T\JnK[JJnK[JJnK[JJnOsnLh)*JJn0IDJn0IDJn0IDJn0IDJn0ID
nmm7~>

%%EndBinary
grestore
np
223.973 271.982 mo
85.7373 271.982 li
58.7388 271.982 36.8525 250.096 36.8525 223.097 cv
36.8525 223.097 li
36.8525 196.099 58.7388 174.212 85.7373 174.212 cv
223.973 174.212 li
223.973 174.212 li
250.866 174.212 272.686 195.928 272.856 222.781 cv
272.857 222.886 272.857 222.992 272.857 223.097 cv
272.857 223.097 li
272.857 250.096 250.971 271.982 223.973 271.982 cv
38.3515 220.28 mo
38.2968 221.213 38.2612 222.151 38.2612 223.097 cv
38.2612 249.276 59.5586 270.573 85.7373 270.573 cv
223.973 270.573 li
250.151 270.573 271.449 249.276 271.449 223.097 cv
271.449 222.151 271.413 221.213 271.358 220.28 cv
269.894 245.151 249.205 264.939 223.973 264.939 cv
85.7373 264.939 li
60.5054 264.939 39.8154 245.151 38.3515 220.28 cv
85.7373 175.212 mo
62.6045 175.212 43.2524 191.702 38.812 213.543 cv
270.898 213.543 li
266.458 191.702 247.105 175.212 223.973 175.212 cv
85.7373 175.212 li
level3{
gsave
clp
[5.9867e-15 -97.7702 97.7702 5.9867e-15 154.855 271.982 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.9867e-15 -97.7702 97.7702 5.9867e-15 154.855 271.982 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
223.973 270.573 mo
85.7373 270.573 li
59.5586 270.573 38.2612 249.276 38.2612 223.097 cv
38.2612 222.151 38.2968 221.213 38.3515 220.28 cv
39.8154 245.151 60.5054 264.939 85.7373 264.939 cv
223.973 264.939 li
249.205 264.939 269.894 245.151 271.358 220.28 cv
271.413 221.213 271.449 222.151 271.449 223.097 cv
271.449 249.276 250.151 270.573 223.973 270.573 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[234.72 0 0 51.84 37.44 178.8 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 489 
/H 108 
/M[489 0 0 -108 0 108 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K$T%pK$T%pK$T%pK$T%pK$T%pK$T%pK$T%pK$T%pK$T%pK$T%pK$T%pK$X)8O3W@&K$JtnK$JtnK$Kk2
K$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnS'HW2
K$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$Kk2K$Jtn
K$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnS'HW2K$Jtn
K$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$Kk2K$JtnK$Jtn
K$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$N?#U<S;7K$AnlK$AnlK$AnlK$AnlK$Be0K$AnlK$Anl
K$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlS'?Q0K$AnlK$Anl
K$AnlK$AnlK$AnlK$AnlK$AnlcHWc@K$8hjK$8hjK$8hjK$8hjK$8hjLs5b@K$AnlK$Be0K$AnlK$Anl
K$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlS'?Q0K$AnlK$Anl
K$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$Be0K$AnlK$BS*m`^:,
K$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$9_.K$8hjK$8hjK$8hj
K$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjS'6K.K$8hjK$8hjK$8hj
K$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$9_.K$8hjK$8hjK$8hjK$8hj
K$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjS'6K.K$8hjK$8hjK$8hjK$8hj
K$8hjK$8hjK$8hjK$8hjK$8hjiQS%>K$/bhK$/bhK$/bhK$/bhK$/bhS'-E,K$/bhK$/bhK$/bhK$/bh
K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhoZN<>K$8hjK$8hjK$8hjS'6K.K$8hjK$8hjK$8hjK$8hj
K$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$9%pqoaT7K$/bhS'-E,K$/bhK$/bhK$/bhK$/bh
K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$0Y,K$/bhK$/bhK$/bhK$/bhK$/bh
K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhS'-E,K$/bhQ-8U<K$&\fK$&\fK$&\f
K$&\fK$&\fK$)B][EF0FK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$0Y,K$/bhK$/bhK$/bhK$/bhK$/bh
K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhS'-E,K$/bhK$/bhK$/bhK$/bhK$/bh
K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhoZN<<K$&\fK$&\fK$&\fS'$?*K$&\fK$&\fK$&\fK$&\fK$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$'S*K$&\fK$&\fK$&\fK$(%7gWP2lK$/bh
K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$0Y,K$&\fK$&\fK$&\fK$&\fK$&\fK$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fS'$?*K$&\fK$&\fK$&\fK$&\fK$&\fK$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$'S*K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fS'$?*K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$'S*K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$)B]
[E4$BK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#sM(K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#uunU<8)1K$&\fK$&\fK$&\fK$&\fK$'S*K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fS'$?*K$&\fQ-/O:K#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdS&p9(K#rVdK#rVdK#rVdW6*f:K$&\fK$&\fK$&\fK$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fS'$?)K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#sM(K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdS&p9(K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#sM(K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdS&p9(K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rhjqoFB1K#iPbS&g3&K#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPb
K#iPbK#iPbK#iPbK#iPbK#jG&K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdS&p9(K#rVdQ-&I8K#iPbK#iPbK#iPbK#iPbK#iPbK#l6YJ,~>

%%EndBinary
grestore
np
270.898 213.543 mo
38.812 213.543 li
43.2524 191.702 62.6045 175.212 85.7373 175.212 cv
223.973 175.212 li
247.105 175.212 266.458 191.702 270.898 213.543 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[233.76 0 0 39.36 37.92 235.92 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 487 
/H 82 
/M[487 0 0 -82 0 82 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 487 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 487 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 487 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&X8deO
K)^H&QiHFOK)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$X8[_M
K)UB$K)UB$K)UB$XT$iMK)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"X8RYK
K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"!<%QJK)C5uK)C5uK)C5uX8ISI
K)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uf)2ZIK):/sK):/sK):/sK):/sK):/sK):/sK):/sX8@MG
K):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/slhd(GK)1)qK)1)qK)1)qK)1)qK)1)qX87GE
K)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)q!;_?DK)(#oK)(#oK)(#oX8.AC
K)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(`.mJ);.K(srmX8%;A
K(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(uDAK(jlk
K(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkX7q5?K(jlk
QhTk?K(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiQM0_=K(X`gK(Z2;K(X`g
K(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gX7_):K(OZe
K(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZe!;(p8K(FTcK(FTcK(FTcX7Lr7K(FTc
K(FTcK(FTcK(FTcK(FTcK(FTcK(FTcf(6$7K(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaX7Cl5K(=Na
K(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(>u5K(4H_K(4H_
K(4H_K(4H_K(4H_K(6\I_XN0HK(+B]K(+B]K(+B]K(+B]K(+B]K(+B]K(+B]K(+B]K(,i1K(+B]K(+B]
K(+B]K(+B]K(+B]K(+B]K(+B]K(.@\Xm^l1K("<[K("<[K("<[K("<[K("<[K("<[K(#c/K("<[K("<[
K("<[K(#f0fC"7YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'o]-K'e0WK'e0W
K'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WX6kN+K'e0WQgO/+
K'\*UK'\*UK'\*UK'\*UK'\*UK'_(TXm:T)K'S$SK'S$SK'S$SK'S$SK'S$SK'S$SK'TK'K'S$SK'S$S
K'S$SK'S$SK'S$SK'S$SK'S$SK'S$SK'S$SK'VagR-K:gK'IsQK'IsQK'IsQK'IsQK'KE%K'IsQK'IsQ
K'IsQK'IsQK'IsQK'L2;_Wc[:K'@mOK'@mOK'@mOK'@mOK'@mOK'@mOK'@mOK'@mOK'B?#K'@mOK'AWd
m-'&bK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'8NamH9)aK'.aKX65)tK'.aK
K'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'02tK'%[IK'%[I
K'%[IK'%[IK'%[IK''o3_W?C2K&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&s&pK&qUGK&r?\
m,WcZK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&iunK&hOEK&hOE
K&hOEK&j#ofAhJCK&_ICK&_ICK&_ICK&_ICK&_IClf4AlK&VCAK&VCAK&VCAK&VCAK&VCAX5\`jK&VCA
K&VCAK&VCAK&VCAK&VCA_;`>jK&M=?K&M=?K&M=?K&M=?K&M=?K&M=?K&M=?K&M=?K&M=?X5SZhK&M=?
K&M=?K&M=?K&M=?K&M=?K&M=?K&M=?f&<ahK&D7=K&D7=K&D7=K&D7=K&D7=QJh/fK&;1;K&<WdK&;1;
K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&>nOR,3GOK&2+9K&2+9K&2+9K&2+9K&3QbK&2+9
K&2+9K&2+9K&2+9K&2+9K&4?#_VKh"K&)%7K&)%7K&)%7K&)%7K&)%7!8W/~>

%%EndBinary
grestore
np
549.181 152.585 mo
479.345 152.585 li
463.172 152.585 450.014 139.427 450.014 123.254 cv
450.014 53.418 li
450.014 37.2447 463.172 24.087 479.345 24.087 cv
549.181 24.087 li
565.353 24.087 578.512 37.2447 578.512 53.418 cv
578.512 123.254 li
578.512 139.427 565.353 152.585 549.181 152.585 cv
479.345 24.2896 mo
463.358 24.2896 450.352 37.2954 450.352 53.2827 cv
450.352 123.028 li
450.352 139.016 463.358 152.021 479.345 152.021 cv
549.181 152.021 li
565.167 152.021 578.174 139.016 578.174 123.028 cv
578.174 53.2827 li
578.174 37.2954 565.167 24.2896 549.181 24.2896 cv
479.345 24.2896 li
1 1 1 rgb
f
549.181 152.021 mo
479.345 152.021 li
463.358 152.021 450.352 139.016 450.352 123.028 cv
450.352 53.2827 li
450.352 37.2954 463.358 24.2896 479.345 24.2896 cv
549.181 24.2896 li
565.167 24.2896 578.174 37.2954 578.174 53.2827 cv
578.174 123.028 li
578.174 139.016 565.167 152.021 549.181 152.021 cv
479.345 24.4922 mo
463.544 24.4922 450.689 37.3467 450.689 53.1475 cv
450.689 122.803 li
450.689 138.604 463.544 151.459 479.345 151.459 cv
549.181 151.459 li
564.981 151.459 577.836 138.604 577.836 122.803 cv
577.836 53.1475 li
577.836 37.3467 564.981 24.4922 549.181 24.4922 cv
479.345 24.4922 li
f
549.181 151.459 mo
479.345 151.459 li
463.544 151.459 450.689 138.604 450.689 122.803 cv
450.689 53.1475 li
450.689 37.3467 463.544 24.4922 479.345 24.4922 cv
549.181 24.4922 li
564.981 24.4922 577.836 37.3467 577.836 53.1475 cv
577.836 122.803 li
577.836 138.604 564.981 151.459 549.181 151.459 cv
479.345 24.6953 mo
463.73 24.6953 451.027 37.3979 451.027 53.0122 cv
451.027 122.578 li
451.027 138.192 463.73 150.895 479.345 150.895 cv
549.181 150.895 li
564.795 150.895 577.498 138.192 577.498 122.578 cv
577.498 53.0122 li
577.498 37.3979 564.795 24.6953 549.181 24.6953 cv
479.345 24.6953 li
f
549.181 150.895 mo
479.345 150.895 li
463.73 150.895 451.027 138.192 451.027 122.578 cv
451.027 53.0122 li
451.027 37.3979 463.73 24.6953 479.345 24.6953 cv
549.181 24.6953 li
564.795 24.6953 577.498 37.3979 577.498 53.0122 cv
577.498 122.578 li
577.498 138.192 564.795 150.895 549.181 150.895 cv
479.345 24.8979 mo
463.917 24.8979 451.365 37.4492 451.365 52.8774 cv
451.365 122.353 li
451.365 137.781 463.917 150.332 479.345 150.332 cv
549.181 150.332 li
564.608 150.332 577.16 137.781 577.16 122.353 cv
577.16 52.8774 li
577.16 37.4492 564.608 24.8979 549.181 24.8979 cv
479.345 24.8979 li
.996078 .996078 .996078 rgb
f
549.181 150.332 mo
479.345 150.332 li
463.917 150.332 451.365 137.781 451.365 122.353 cv
451.365 52.8774 li
451.365 37.4492 463.917 24.8979 479.345 24.8979 cv
549.181 24.8979 li
564.608 24.8979 577.16 37.4492 577.16 52.8774 cv
577.16 122.353 li
577.16 137.781 564.608 150.332 549.181 150.332 cv
479.345 25.1005 mo
464.104 25.1005 451.703 37.5005 451.703 52.7422 cv
451.703 122.128 li
451.703 137.369 464.104 149.769 479.345 149.769 cv
549.181 149.769 li
564.422 149.769 576.822 137.369 576.822 122.128 cv
576.822 52.7422 li
576.822 37.5005 564.422 25.1005 549.181 25.1005 cv
479.345 25.1005 li
f
549.181 149.769 mo
479.345 149.769 li
464.104 149.769 451.703 137.369 451.703 122.128 cv
451.703 52.7422 li
451.703 37.5005 464.104 25.1005 479.345 25.1005 cv
549.181 25.1005 li
564.422 25.1005 576.822 37.5005 576.822 52.7422 cv
576.822 122.128 li
576.822 137.369 564.422 149.769 549.181 149.769 cv
479.345 25.3032 mo
464.29 25.3032 452.041 37.5512 452.041 52.6069 cv
452.041 121.902 li
452.041 136.958 464.29 149.206 479.345 149.206 cv
549.181 149.206 li
564.235 149.206 576.484 136.958 576.484 121.902 cv
576.484 52.6069 li
576.484 37.5512 564.235 25.3032 549.181 25.3032 cv
479.345 25.3032 li
.992157 .992157 .992157 rgb
f
549.181 149.206 mo
479.345 149.206 li
464.29 149.206 452.041 136.958 452.041 121.902 cv
452.041 52.6069 li
452.041 37.5512 464.29 25.3032 479.345 25.3032 cv
549.181 25.3032 li
564.235 25.3032 576.484 37.5512 576.484 52.6069 cv
576.484 121.902 li
576.484 136.958 564.235 149.206 549.181 149.206 cv
479.345 25.5058 mo
464.476 25.5058 452.379 37.6026 452.379 52.4717 cv
452.379 121.677 li
452.379 136.546 464.476 148.643 479.345 148.643 cv
549.181 148.643 li
564.049 148.643 576.146 136.546 576.146 121.677 cv
576.146 52.4717 li
576.146 37.6026 564.049 25.5058 549.181 25.5058 cv
479.345 25.5058 li
.988235 .988235 .988235 rgb
f
549.181 148.643 mo
479.345 148.643 li
464.476 148.643 452.379 136.546 452.379 121.677 cv
452.379 52.4717 li
452.379 37.6026 464.476 25.5058 479.345 25.5058 cv
549.181 25.5058 li
564.049 25.5058 576.146 37.6026 576.146 52.4717 cv
576.146 121.677 li
576.146 136.546 564.049 148.643 549.181 148.643 cv
479.345 25.709 mo
464.662 25.709 452.717 37.6538 452.717 52.3364 cv
452.717 121.452 li
452.717 136.134 464.662 148.079 479.345 148.079 cv
549.181 148.079 li
563.863 148.079 575.809 136.134 575.809 121.452 cv
575.809 52.3364 li
575.809 37.6538 563.863 25.709 549.181 25.709 cv
479.345 25.709 li
.984314 .984314 .984314 rgb
f
549.181 148.079 mo
479.345 148.079 li
464.662 148.079 452.717 136.134 452.717 121.452 cv
452.717 52.3364 li
452.717 37.6538 464.662 25.709 479.345 25.709 cv
549.181 25.709 li
563.863 25.709 575.809 37.6538 575.809 52.3364 cv
575.809 121.452 li
575.809 136.134 563.863 148.079 549.181 148.079 cv
479.345 25.9116 mo
464.849 25.9116 453.055 37.705 453.055 52.2012 cv
453.055 121.226 li
453.055 135.723 464.849 147.516 479.345 147.516 cv
549.181 147.516 li
563.677 147.516 575.471 135.723 575.471 121.226 cv
575.471 52.2012 li
575.471 37.705 563.677 25.9116 549.181 25.9116 cv
479.345 25.9116 li
.976471 .976471 .976471 rgb
f
549.181 147.516 mo
479.345 147.516 li
464.849 147.516 453.055 135.723 453.055 121.226 cv
453.055 52.2012 li
453.055 37.705 464.849 25.9116 479.345 25.9116 cv
549.181 25.9116 li
563.677 25.9116 575.471 37.705 575.471 52.2012 cv
575.471 121.226 li
575.471 135.723 563.677 147.516 549.181 147.516 cv
479.345 26.1143 mo
465.035 26.1143 453.393 37.7564 453.393 52.0665 cv
453.393 121.001 li
453.393 135.311 465.035 146.953 479.345 146.953 cv
549.181 146.953 li
563.49 146.953 575.133 135.311 575.133 121.001 cv
575.133 52.0665 li
575.133 37.7564 563.49 26.1143 549.181 26.1143 cv
479.345 26.1143 li
.972549 .972549 .972549 rgb
f
549.181 146.953 mo
479.345 146.953 li
465.035 146.953 453.393 135.311 453.393 121.001 cv
453.393 52.0665 li
453.393 37.7564 465.035 26.1143 479.345 26.1143 cv
549.181 26.1143 li
563.49 26.1143 575.133 37.7564 575.133 52.0665 cv
575.133 121.001 li
575.133 135.311 563.49 146.953 549.181 146.953 cv
479.345 26.3169 mo
465.221 26.3169 453.73 37.8072 453.73 51.9311 cv
453.73 120.776 li
453.73 134.899 465.221 146.39 479.345 146.39 cv
549.181 146.39 li
563.304 146.39 574.795 134.899 574.795 120.776 cv
574.795 51.9311 li
574.795 37.8072 563.304 26.3169 549.181 26.3169 cv
479.345 26.3169 li
.964706 .964706 .964706 rgb
f
549.181 146.39 mo
479.345 146.39 li
465.221 146.39 453.73 134.899 453.73 120.776 cv
453.73 51.9311 li
453.73 37.8072 465.221 26.3169 479.345 26.3169 cv
549.181 26.3169 li
563.304 26.3169 574.795 37.8072 574.795 51.9311 cv
574.795 120.776 li
574.795 134.899 563.304 146.39 549.181 146.39 cv
479.345 26.52 mo
465.407 26.52 454.068 37.8584 454.068 51.796 cv
454.068 120.55 li
454.068 134.488 465.407 145.827 479.345 145.827 cv
549.181 145.827 li
563.117 145.827 574.457 134.488 574.457 120.55 cv
574.457 51.796 li
574.457 37.8584 563.117 26.52 549.181 26.52 cv
479.345 26.52 li
.956863 .956863 .956863 rgb
f
549.181 145.827 mo
479.345 145.827 li
465.407 145.827 454.068 134.488 454.068 120.55 cv
454.068 51.796 li
454.068 37.8584 465.407 26.52 479.345 26.52 cv
549.181 26.52 li
563.117 26.52 574.457 37.8584 574.457 51.796 cv
574.457 120.55 li
574.457 134.488 563.117 145.827 549.181 145.827 cv
479.345 26.7226 mo
465.594 26.7226 454.406 37.9096 454.406 51.6606 cv
454.406 120.325 li
454.406 134.076 465.594 145.263 479.345 145.263 cv
549.181 145.263 li
562.932 145.263 574.119 134.076 574.119 120.325 cv
574.119 51.6606 li
574.119 37.9096 562.932 26.7226 549.181 26.7226 cv
479.345 26.7226 li
.94902 .94902 .94902 rgb
f
549.181 145.263 mo
479.345 145.263 li
465.594 145.263 454.406 134.076 454.406 120.325 cv
454.406 51.6606 li
454.406 37.9096 465.594 26.7226 479.345 26.7226 cv
549.181 26.7226 li
562.932 26.7226 574.119 37.9096 574.119 51.6606 cv
574.119 120.325 li
574.119 134.076 562.932 145.263 549.181 145.263 cv
476.435 27.0963 mo
464.236 28.5403 454.744 38.9454 454.744 51.5254 cv
454.744 120.1 li
454.744 133.664 465.78 144.7 479.345 144.7 cv
549.181 144.7 li
562.745 144.7 573.78 133.664 573.78 120.1 cv
573.78 51.5254 li
573.78 38.9454 564.289 28.5403 552.091 27.0964 cv
551.141 26.9541 550.169 26.8803 549.181 26.8803 cv
479.345 26.8803 li
478.356 26.8803 477.384 26.9541 476.435 27.0963 cv
.941176 .941176 .941176 rgb
f
549.181 144.7 mo
479.345 144.7 li
465.78 144.7 454.744 133.664 454.744 120.1 cv
454.744 51.5254 li
454.744 38.9454 464.236 28.5403 476.435 27.0963 cv
475.097 27.2967 473.803 27.6332 472.568 28.0909 cv
462.477 31.0304 455.082 40.3631 455.082 51.3906 cv
455.082 119.874 li
455.082 133.253 465.967 144.137 479.345 144.137 cv
549.181 144.137 li
562.559 144.137 573.442 133.253 573.442 119.874 cv
573.442 51.3906 li
573.442 40.3631 566.048 31.0304 555.957 28.091 cv
554.722 27.6332 553.428 27.2967 552.091 27.0964 cv
564.289 28.5403 573.78 38.9454 573.78 51.5254 cv
573.78 120.1 li
573.78 133.664 562.745 144.7 549.181 144.7 cv
.933333 .933333 .933333 rgb
f
549.181 144.137 mo
479.345 144.137 li
465.967 144.137 455.082 133.253 455.082 119.874 cv
455.082 51.3906 li
455.082 40.3631 462.477 31.0304 472.568 28.0909 cv
471.77 28.3866 470.997 28.7327 470.252 29.1259 cv
461.557 32.712 455.42 41.2806 455.42 51.2554 cv
455.42 119.649 li
455.42 132.841 466.152 143.574 479.345 143.574 cv
549.181 143.574 li
562.372 143.574 573.104 132.841 573.104 119.649 cv
573.104 51.2554 li
573.104 41.2814 566.969 32.7135 558.275 29.1269 cv
557.53 28.7334 556.756 28.3869 555.957 28.091 cv
566.048 31.0304 573.442 40.3631 573.442 51.3906 cv
573.442 119.874 li
573.442 133.253 562.559 144.137 549.181 144.137 cv
.921569 .921569 .921569 rgb
f
549.181 143.574 mo
479.345 143.574 li
466.152 143.574 455.42 132.841 455.42 119.649 cv
455.42 51.2554 li
455.42 41.2806 461.557 32.712 470.252 29.1259 cv
469.631 29.4534 469.029 29.8137 468.45 30.2039 cv
460.913 34.1455 455.758 42.042 455.758 51.1202 cv
455.758 119.424 li
455.758 132.43 466.339 143.011 479.345 143.011 cv
549.181 143.011 li
562.185 143.011 572.767 132.43 572.767 119.424 cv
572.767 51.1202 li
572.767 42.0428 567.613 34.1473 560.078 30.2055 cv
559.498 29.8148 558.897 29.4548 558.275 29.1269 cv
566.969 32.7135 573.104 41.2814 573.104 51.2554 cv
573.104 119.649 li
573.104 132.841 562.372 143.574 549.181 143.574 cv
.913725 .913725 .913725 rgb
f
549.181 143.011 mo
479.345 143.011 li
466.339 143.011 455.758 132.43 455.758 119.424 cv
455.758 51.1202 li
455.758 42.042 460.913 34.1455 468.45 30.2039 cv
467.928 30.5554 467.425 30.9306 466.94 31.3294 cv
460.428 35.4538 456.096 42.7232 456.096 50.9849 cv
456.096 119.199 li
456.096 132.018 466.525 142.447 479.345 142.447 cv
549.181 142.447 li
562 142.447 572.429 132.018 572.429 119.199 cv
572.429 50.9849 li
572.429 42.7232 568.098 35.4545 561.586 31.3301 cv
561.103 30.9321 560.599 30.5563 560.078 30.2055 cv
567.613 34.1473 572.767 42.0428 572.767 51.1202 cv
572.767 119.424 li
572.767 132.43 562.185 143.011 549.181 143.011 cv
.901961 .901961 .901961 rgb
f
549.181 142.447 mo
479.345 142.447 li
466.525 142.447 456.096 132.018 456.096 119.199 cv
456.096 50.9849 li
456.096 42.7232 460.428 35.4538 466.94 31.3294 cv
466.488 31.7014 466.052 32.094 465.635 32.5043 cv
460.052 36.6867 456.434 43.3535 456.434 50.8497 cv
456.434 118.974 li
456.434 131.606 466.712 141.884 479.345 141.884 cv
549.181 141.884 li
561.813 141.884 572.091 131.606 572.091 118.974 cv
572.091 50.8497 li
572.091 43.3543 568.473 36.688 562.892 32.5056 cv
562.474 32.0948 562.039 31.7025 561.586 31.3301 cv
568.098 35.4545 572.429 42.7232 572.429 50.9849 cv
572.429 119.199 li
572.429 132.018 562 142.447 549.181 142.447 cv
.890196 .890196 .890196 rgb
f
549.181 141.884 mo
479.345 141.884 li
466.712 141.884 456.434 131.606 456.434 118.974 cv
456.434 50.8497 li
456.434 43.3535 460.052 36.6867 465.635 32.5043 cv
465.236 32.8971 464.854 33.3066 464.49 33.7321 cv
459.762 37.8728 456.771 43.951 456.771 50.7143 cv
456.771 118.748 li
456.771 131.195 466.898 141.321 479.345 141.321 cv
549.181 141.321 li
561.627 141.321 571.753 131.195 571.753 118.748 cv
571.753 50.7143 li
571.753 43.9518 568.764 37.8745 564.037 33.7338 cv
563.673 33.3083 563.291 32.8984 562.892 32.5056 cv
568.473 36.688 572.091 43.3543 572.091 50.8497 cv
572.091 118.974 li
572.091 131.606 561.813 141.884 549.181 141.884 cv
.878431 .878431 .878431 rgb
f
549.181 141.321 mo
479.345 141.321 li
466.898 141.321 456.771 131.195 456.771 118.748 cv
456.771 50.7143 li
456.771 43.951 459.762 37.8728 464.49 33.7321 cv
464.136 34.1451 463.799 34.5733 463.48 35.0149 cv
459.542 39.0284 457.109 44.5255 457.109 50.5796 cv
457.109 118.523 li
457.109 130.783 467.084 140.758 479.345 140.758 cv
549.181 140.758 li
561.44 140.758 571.415 130.783 571.415 118.523 cv
571.415 50.5796 li
571.415 44.527 568.984 39.0319 565.048 35.0187 cv
564.729 34.576 564.392 34.1478 564.037 33.7338 cv
568.764 37.8745 571.753 43.9518 571.753 50.7143 cv
571.753 118.748 li
571.753 131.195 561.627 141.321 549.181 141.321 cv
.858823 .858823 .858823 rgb
f
549.181 140.758 mo
479.345 140.758 li
467.084 140.758 457.109 130.783 457.109 118.523 cv
457.109 50.5796 li
457.109 44.5255 459.542 39.0284 463.48 35.0149 cv
463.166 35.4496 462.87 35.8976 462.592 36.3579 cv
459.383 40.1681 457.447 45.0845 457.447 50.4443 cv
457.447 118.298 li
457.447 130.372 467.27 140.194 479.345 140.194 cv
549.181 140.194 li
561.254 140.194 571.077 130.372 571.077 118.298 cv
571.077 50.4443 li
571.077 45.0867 569.142 40.1716 565.936 36.362 cv
565.658 35.9016 565.362 35.4534 565.048 35.0187 cv
568.984 39.0319 571.415 44.527 571.415 50.5796 cv
571.415 118.523 li
571.415 130.783 561.44 140.758 549.181 140.758 cv
.847059 .847059 .847059 rgb
f
549.181 140.194 mo
479.345 140.194 li
467.27 140.194 457.447 130.372 457.447 118.298 cv
457.447 50.4443 li
457.447 45.0845 459.383 40.1681 462.592 36.3579 cv
462.316 36.8161 462.057 37.2864 461.818 37.7681 cv
459.281 41.3037 457.786 45.635 457.786 50.3091 cv
457.786 118.072 li
457.786 129.96 467.457 139.631 479.345 139.631 cv
549.181 139.631 li
561.068 139.631 570.739 129.96 570.739 118.072 cv
570.739 50.3091 li
570.739 45.635 569.245 41.3043 566.708 37.7686 cv
566.469 37.2886 566.211 36.8188 565.936 36.362 cv
569.142 40.1716 571.077 45.0867 571.077 50.4443 cv
571.077 118.298 li
571.077 130.372 561.254 140.194 549.181 140.194 cv
.831372 .831372 .831372 rgb
f
549.181 139.631 mo
479.345 139.631 li
467.457 139.631 457.786 129.96 457.786 118.072 cv
457.786 50.3091 li
457.786 45.635 459.281 41.3037 461.818 37.7681 cv
461.579 38.2502 461.359 38.7428 461.159 39.2464 cv
459.233 42.4401 458.124 46.18 458.124 50.1738 cv
458.124 117.847 li
458.124 129.548 467.644 139.068 479.345 139.068 cv
549.181 139.068 li
560.882 139.068 570.401 129.548 570.401 117.847 cv
570.401 50.1738 li
570.401 46.18 569.292 42.4402 567.366 39.2465 cv
567.166 38.7429 566.947 38.2508 566.708 37.7686 cv
569.245 41.3043 570.739 45.635 570.739 50.3091 cv
570.739 118.072 li
570.739 129.96 561.068 139.631 549.181 139.631 cv
.815686 .815686 .815686 rgb
f
549.181 139.068 mo
479.345 139.068 li
467.644 139.068 458.124 129.548 458.124 117.847 cv
458.124 50.1738 li
458.124 46.18 459.233 42.4401 461.159 39.2464 cv
460.958 39.7552 460.776 40.2745 460.617 40.8031 cv
459.238 43.5891 458.462 46.7249 458.462 50.0386 cv
458.462 117.622 li
458.462 129.137 467.83 138.505 479.345 138.505 cv
549.181 138.505 li
560.695 138.505 570.063 129.137 570.063 117.622 cv
570.063 50.0386 li
570.063 46.7249 569.288 43.5897 567.908 40.8037 cv
567.749 40.2751 567.568 39.7553 567.366 39.2465 cv
569.292 42.4402 570.401 46.18 570.401 50.1738 cv
570.401 117.847 li
570.401 129.548 560.882 139.068 549.181 139.068 cv
.803922 .803922 .803922 rgb
f
549.181 138.505 mo
479.345 138.505 li
467.83 138.505 458.462 129.137 458.462 117.622 cv
458.462 50.0386 li
458.462 46.7249 459.238 43.5891 460.617 40.8031 cv
460.455 41.3419 460.315 41.8915 460.199 42.4486 cv
459.296 44.7608 458.8 47.2755 458.8 49.9038 cv
458.8 117.397 li
458.8 128.725 468.016 137.942 479.345 137.942 cv
549.181 137.942 li
560.509 137.942 569.726 128.725 569.726 117.397 cv
569.726 49.9038 li
569.726 47.2755 569.23 44.7615 568.326 42.4493 cv
568.21 41.8916 568.071 41.343 567.908 40.8037 cv
569.288 43.5897 570.063 46.7249 570.063 50.0386 cv
570.063 117.622 li
570.063 129.137 560.695 138.505 549.181 138.505 cv
.780392 .780392 .780392 rgb
f
549.181 137.942 mo
479.345 137.942 li
468.016 137.942 458.8 128.725 458.8 117.397 cv
458.8 49.9038 li
458.8 47.2755 459.296 44.7608 460.199 42.4486 cv
460.08 43.0237 459.986 43.6069 459.918 44.1992 cv
459.41 45.9688 459.138 47.8377 459.138 49.7685 cv
459.138 117.171 li
459.138 128.313 468.202 137.378 479.345 137.378 cv
549.181 137.378 li
560.323 137.378 569.388 128.313 569.388 117.171 cv
569.388 49.7685 li
569.388 47.8377 569.116 45.9697 568.608 44.2 cv
568.54 43.6084 568.446 43.0238 568.326 42.4493 cv
569.23 44.7615 569.726 47.2755 569.726 49.9038 cv
569.726 117.397 li
569.726 128.725 560.509 137.942 549.181 137.942 cv
.764706 .764706 .764706 rgb
f
549.181 137.378 mo
479.345 137.378 li
468.202 137.378 459.138 128.313 459.138 117.171 cv
459.138 49.7685 li
459.138 47.8377 459.41 45.9688 459.918 44.1992 cv
459.847 44.817 459.806 45.444 459.794 46.0777 cv
459.585 47.2314 459.476 48.4203 459.476 49.6333 cv
459.476 116.946 li
459.476 127.902 468.389 136.815 479.345 136.815 cv
549.181 136.815 li
560.137 136.815 569.05 127.902 569.05 116.946 cv
569.05 49.6333 li
569.05 48.4203 568.94 47.2314 568.731 46.0777 cv
568.72 45.444 568.678 44.8178 568.608 44.2 cv
569.116 45.9697 569.388 47.8377 569.388 49.7685 cv
569.388 117.171 li
569.388 128.313 560.323 137.378 549.181 137.378 cv
.74902 .74902 .74902 rgb
f
549.181 136.815 mo
479.345 136.815 li
468.389 136.815 459.476 127.902 459.476 116.946 cv
459.476 49.6333 li
459.476 48.4203 459.585 47.2314 459.794 46.0777 cv
459.792 46.1964 459.791 46.315 459.791 46.4341 cv
459.791 116.27 li
459.791 116.27 li
459.791 116.675 459.803 117.078 459.828 117.477 cv
460.226 127.898 468.828 136.253 479.345 136.253 cv
549.181 136.253 li
559.694 136.253 568.295 127.901 568.697 117.484 cv
568.722 117.082 568.734 116.677 568.734 116.27 cv
568.734 46.4341 li
568.734 46.4341 li
568.734 46.315 568.733 46.1964 568.731 46.0777 cv
568.94 47.2314 569.05 48.4203 569.05 49.6333 cv
569.05 116.946 li
569.05 127.902 560.137 136.815 549.181 136.815 cv
.729412 .729412 .729412 rgb
f
549.181 136.253 mo
479.345 136.253 li
468.828 136.253 460.226 127.898 459.828 117.477 cv
460.453 127.699 468.968 135.824 479.345 135.824 cv
549.181 135.824 li
559.555 135.824 568.069 127.703 568.697 117.484 cv
568.295 127.901 559.694 136.253 549.181 136.253 cv
.709804 .709804 .709804 rgb
f
479.345 135.824 mo
468.563 135.824 459.791 127.052 459.791 116.27 cv
459.791 46.4341 li
459.791 35.6519 468.563 26.8803 479.345 26.8803 cv
549.181 26.8803 li
559.963 26.8803 568.734 35.6519 568.734 46.4341 cv
568.734 116.27 li
568.734 127.052 559.963 135.824 549.181 135.824 cv
479.345 135.824 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 514.263 135.824 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.701961 .701961 .701961 ]
/C1 [.8 .8 .8 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 514.263 135.824 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Za7!EZa7!EZa7!F['[3I['[3I['d<L[C*EM[C*EN[^NWQ[^NWQ[^W`T\$riU\$riU\@B&Y\@B&Y\@B)[
\[f8]\[f8]]"5Ja]"5Ja]"5Mc]=Y\e]=Y\e]=beh]Y(ni]Y(nj]tM+m]tM+m]tV4p^:q=q^:q=r^V@Ou
^V@Ou^V@S"^qdb$^qdb$_83t(_83t(_84"*_SX1,_SX1,_o'C0_o'C0_o'C1`5KU4`5KU4`5T^7`Pog8
`Pog9`l?$<`l?$<`lH-?a2c6@a2c6@aN2HDaN2HDaN2KFaiVZHaiVZHb0%lLb0%lLb0%oNbKJ)PbKJ)P
~>
<~Za7!EZa7!EZa7!F['[3I['[3I['d<L[C*EM[C*EN[^NWQ[^NWQ[^W`T\$riU\$riU\@B&Y\@B&Y\@B)[
\[f8]\[f8]]"5Ja]"5Ja]"5Mc]=Y\e]=Y\e]=beh]Y(ni]Y(nj]tM+m]tM+m]tV4p^:q=q^:q=r^V@Ou
^V@Ou^V@S"^qdb$^qdb$_83t(_83t(_84"*_SX1,_SX1,_o'C0_o'C0_o'C1`5KU4`5KU4`5T^7`Pog8
`Pog9`l?$<`l?$<`lH-?a2c6@a2c6@aN2HDaN2HDaN2KFaiVZHaiVZHb0%lLb0%lLb0%oNbKJ)PbKJ)P
~>
<~Za7!EZa7!EZa7!F['[3I['[3I['d<L[C*EM[C*EN[^NWQ[^NWQ[^W`T\$riU\$riU\@B&Y\@B&Y\@B)[
\[f8]\[f8]]"5Ja]"5Ja]"5Mc]=Y\e]=Y\e]=beh]Y(ni]Y(nj]tM+m]tM+m]tV4p^:q=q^:q=r^V@Ou
^V@Ou^V@S"^qdb$^qdb$_83t(_83t(_84"*_SX1,_SX1,_o'C0_o'C0_o'C1`5KU4`5KU4`5T^7`Pog8
`Pog9`l?$<`l?$<`lH-?a2c6@a2c6@aN2HDaN2HDaN2KFaiVZHaiVZHb0%lLb0%lLb0%oNbKJ)PbKJ)P
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
549.181 135.824 mo
479.345 135.824 li
468.968 135.824 460.453 127.699 459.828 117.477 cv
459.803 117.078 459.791 116.675 459.791 116.27 cv
459.791 116.27 li
459.791 46.4341 li
459.791 35.6519 468.563 26.8803 479.345 26.8803 cv
549.181 26.8803 li
559.963 26.8803 568.734 35.6519 568.734 46.4341 cv
568.734 46.4341 li
568.734 116.27 li
568.734 116.677 568.722 117.082 568.697 117.484 cv
568.069 127.703 559.555 135.824 549.181 135.824 cv
479.345 27.5845 mo
468.95 27.5845 460.495 36.04 460.495 46.4341 cv
460.495 116.27 li
460.495 126.664 468.95 135.12 479.345 135.12 cv
549.181 135.12 li
559.574 135.12 568.03 126.664 568.03 116.27 cv
568.03 46.4341 li
568.03 36.04 559.574 27.5845 549.181 27.5845 cv
479.345 27.5845 li
549.181 130.941 mo
479.345 130.941 li
471.255 130.941 464.673 124.359 464.673 116.27 cv
464.673 46.4341 li
464.673 38.3448 471.255 31.7627 479.345 31.7627 cv
549.181 31.7627 li
557.271 31.7627 563.852 38.3448 563.852 46.4341 cv
563.852 116.27 li
563.852 124.359 557.271 130.941 549.181 130.941 cv
465.378 116.27 mo
465.378 116.27 li
465.378 123.984 471.631 130.237 479.345 130.237 cv
549.181 130.237 li
556.894 130.237 563.147 123.984 563.147 116.27 cv
563.147 46.4341 li
563.147 46.4341 li
563.147 38.7203 556.894 32.4673 549.181 32.4673 cv
479.345 32.4673 li
471.631 32.4673 465.378 38.7203 465.378 46.4341 cv
465.378 116.27 li
465.378 116.27 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 514.263 135.824 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 514.263 135.824 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
549.181 135.12 mo
479.345 135.12 li
468.95 135.12 460.495 126.664 460.495 116.27 cv
460.495 46.4341 li
460.495 36.04 468.95 27.5845 479.345 27.5845 cv
549.181 27.5845 li
559.574 27.5845 568.03 36.04 568.03 46.4341 cv
568.03 116.27 li
568.03 126.664 559.574 135.12 549.181 135.12 cv
461.199 116.27 mo
461.199 116.27 li
461.199 126.275 469.339 134.415 479.345 134.415 cv
549.181 134.415 li
559.185 134.415 567.325 126.275 567.325 116.27 cv
567.325 46.4341 li
567.325 46.4341 li
567.325 36.4288 559.185 28.2891 549.181 28.2891 cv
479.345 28.2891 li
469.339 28.2891 461.199 36.4288 461.199 46.4341 cv
461.199 116.27 li
461.199 116.27 li
549.181 131.646 mo
479.345 131.646 li
470.866 131.646 463.969 124.748 463.969 116.27 cv
463.969 46.4341 li
463.969 37.956 470.866 31.0581 479.345 31.0581 cv
549.181 31.0581 li
557.658 31.0581 564.557 37.956 564.557 46.4341 cv
564.557 116.27 li
564.557 124.748 557.658 131.646 549.181 131.646 cv
479.345 31.7627 mo
471.255 31.7627 464.673 38.3448 464.673 46.4341 cv
464.673 116.27 li
464.673 124.359 471.255 130.941 479.345 130.941 cv
549.181 130.941 li
557.271 130.941 563.852 124.359 563.852 116.27 cv
563.852 46.4341 li
563.852 38.3448 557.271 31.7627 549.181 31.7627 cv
479.345 31.7627 li
level3{
gsave
clp
[6.58462e-15 -107.535 107.535 6.58462e-15 514.263 135.12 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.58462e-15 -107.535 107.535 6.58462e-15 514.263 135.12 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
548.269 133.031 mo
480.256 133.031 li
470.512 133.031 462.584 125.103 462.584 115.359 cv
462.584 47.3453 li
462.584 37.6011 470.512 29.6733 480.256 29.6733 cv
548.269 29.6733 li
558.014 29.6733 565.941 37.6011 565.941 47.3453 cv
565.941 115.359 li
565.941 125.103 558.014 133.031 548.269 133.031 cv
479.345 31.0581 mo
470.866 31.0581 463.969 37.956 463.969 46.4341 cv
463.969 116.27 li
463.969 124.748 470.866 131.646 479.345 131.646 cv
549.181 131.646 li
557.658 131.646 564.557 124.748 564.557 116.27 cv
564.557 46.4341 li
564.557 37.956 557.658 31.0581 549.181 31.0581 cv
479.345 31.0581 li
level3{
gsave
clp
[6.49836e-15 -106.126 106.126 6.49836e-15 514.263 134.415 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49836e-15 -106.126 106.126 6.49836e-15 514.263 134.415 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
549.181 134.415 mo
479.345 134.415 li
469.339 134.415 461.199 126.275 461.199 116.27 cv
461.199 116.27 li
461.199 46.4341 li
461.199 36.4288 469.339 28.2891 479.345 28.2891 cv
549.181 28.2891 li
559.185 28.2891 567.325 36.4288 567.325 46.4341 cv
567.325 46.4341 li
567.325 116.27 li
567.325 126.275 559.185 134.415 549.181 134.415 cv
479.345 28.5709 mo
469.495 28.5709 461.481 36.5845 461.481 46.4341 cv
461.481 116.27 li
461.481 126.12 469.495 134.133 479.345 134.133 cv
549.181 134.133 li
559.03 134.133 567.044 126.12 567.044 116.27 cv
567.044 46.4341 li
567.044 36.5845 559.03 28.5709 549.181 28.5709 cv
479.345 28.5709 li
548.269 133.313 mo
480.256 133.313 li
470.356 133.313 462.302 125.259 462.302 115.359 cv
462.302 47.3453 li
462.302 37.4453 470.356 29.3916 480.256 29.3916 cv
548.269 29.3916 li
558.168 29.3916 566.223 37.4453 566.223 47.3453 cv
566.223 115.359 li
566.223 125.259 558.168 133.313 548.269 133.313 cv
480.256 29.6733 mo
470.512 29.6733 462.584 37.6011 462.584 47.3453 cv
462.584 115.359 li
462.584 125.103 470.512 133.031 480.256 133.031 cv
548.269 133.031 li
558.014 133.031 565.941 125.103 565.941 115.359 cv
565.941 47.3453 li
565.941 37.6011 558.014 29.6733 548.269 29.6733 cv
480.256 29.6733 li
level3{
gsave
clp
[6.49836e-15 -106.126 106.126 6.49836e-15 514.263 134.415 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49836e-15 -106.126 106.126 6.49836e-15 514.263 134.415 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
549.181 134.133 mo
479.345 134.133 li
469.495 134.133 461.481 126.12 461.481 116.27 cv
461.481 46.4341 li
461.481 36.5845 469.495 28.5709 479.345 28.5709 cv
549.181 28.5709 li
559.03 28.5709 567.044 36.5845 567.044 46.4341 cv
567.044 116.27 li
567.044 126.12 559.03 134.133 549.181 134.133 cv
480.256 29.3916 mo
470.356 29.3916 462.302 37.4453 462.302 47.3453 cv
462.302 115.359 li
462.302 125.259 470.356 133.313 480.256 133.313 cv
548.269 133.313 li
558.168 133.313 566.223 125.259 566.223 115.359 cv
566.223 47.3453 li
566.223 37.4453 558.168 29.3916 548.269 29.3916 cv
480.256 29.3916 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[107.04 0 0 107.04 460.8 315.12 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 223 
/H 223 
/M[223 0 0 -223 0 223 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K"?QFK"?QFK"?QFK"?QFK"?QF]t24qK"HWHK"HWHS%In"K"uuRK"uuRK#%/sMo1.aK#<2XK#?0WXiH%6
K#`J`K#b7=K$/bhK$/bhK$3&pUsFY=K$T%pK$V-V`mfUiK%,D%K%-:>kgtF<K%GV+K%GV+pt(GYK%kn3
K%kn3f%[=aK&;1;K&;1;[,6JqK&_ICK&_IChrCNqK'.aKK'.aK^$!E%K'\*UK'\*US*]A-K("<[K("<[
K(&L'MtDVnK(OZeK(RXdXn[MCK(srmK(u_JK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srm
K(srmK)#-9Mt_htK(jlkK(mjjXn@;=K(X`gK(ZMDK(=NaK(=NaK(@giV!EWuK'S$SK'U,9`o)I,K&D7=
K&E-Vkg4q.K$]+rK$]+rps=r.K"$?@K"$?@f!hcDJrtYIJrtYI[#orIJmX+:JmX+:hd<0[Jl[J(Jl[J(
Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl_YIMcG@/JlRD&JlRD&JlRD&JlRD&ZrM]XJlRD&JlRD&hc6IOJlI>$
JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlK*VJl@8"Jl@8"Jl@8"Jl@8"
Jl@8"Jl@8"Jl@8"JlA.;kYd"1Jl71uJl71uJl71uJl71uJl71uJl71uJl71uZr2KRJl71uJl71uhbp7I
Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sekrPGJl%%qJl%%qZqu?NJl%%qJl%%q
Jl%%qJl%%qJl'-W`_V1^JkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJkraLJkptoJkpto
Jkt9"UeZM:JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmpeH`AJk^hkJk^hkJk^hkJk^hkJk`UHJk^hk
Jk^hkJk^hkJk^hkJk^hk]hQL?JkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiZqQ'E
JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gpe-N;JkCVeJkCVeJkCVeJkCVeJkECB
JkCVeJkCVeJkCVeJkCVeJkCVe]h6:9Jk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk=NbX[n%7Jk1Ja
Jk37>Jk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk2A%kXU4pJk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_
Jk(D_Zq#^<Jk(D_Jk(D_haaJ3Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]ejcc1
Jjk8[Jjk8[ZpfR8Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[RmlO/Jjb2YJjb2YJjb2YJjb2YJjb2Y
Jjb2YJjb2YJjct6JjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJj]<#MaE"^JjP&U
JjP&UJjP&UJjP&UZpK@2JjP&UJjP&UJjP&UJjP&UJjR.;`^,2BJjFuSJjFuSJjFuSJjFuSJjFuSJjFuS
JjFuSJjFuSJjFuSJjHb0Jj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJjB)rMa)eX
Jj4iOJj4iOJj4iOJj4iOZp0.,Jj4iOJj4iOJj4iOJj4iOJj6q5`]eu<Jj+cMJj+cMJj+cMJj+cMJj+cM
Jj+cMJj+cMeip3!Jj"]KJj"]KZos"(Jj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KRm#stJinWIJinWI
JinWIJinWIJinWIJinWIJinWIJipD&JinWIJinWIJiqpQUcX/iJieQGJieQGJieQGJieQGJieQGJieQG
JieQGJieQGJieQGJihOFXZD%pJi\KEJi^8"Ji\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi]A^kW+5T
JiSECJiSECJiSECJiSECJiSECJiSECJiSECZoN^tJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AJiJ?Apc+0jJiA9?JiA9?JiA9?JiA9?JiC%qJiA9?JiA9?JiA9?JiA9?JiA9?]f3qhJi83=Ji83=
Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Zo3LnJi/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;
Ji/-;Ji/-;Ji/-;pbdsdJi&'9Ji&'9Ji&'9Ji&'9Ji'hkJi&'9Ji&'9Ji)@AUbdTYJhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhtt6XYPJ`Jhhp5Jhj\gJhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5
Jhhp5JhifNkV7ZDJh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Zn[.eJh_j3Jh_j3h_Co\JhVd1JhVd1
JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1ehF3ZJhM^/JhM^/ZnI"aJhM^/JhM^/JhM^/JhM^/
JhOej`\)iqJhDX-JhENFk`LIZJrtYIJrtYIplUKZK$AnlK$Anlf$1>ZK'%[IK'%[I[,uu0K(+B]K(+B]
hsdH5K(FTcK(FTcK(FTcK(FTcK(GK'kjj>rK(=NaK(=Naq!s@1K'e0WK'e0Wf'TU(K'@mOK'@mO[-<2(
K&qUGK&qUGhrUZlK&D7=K&D7=^#6obK%kn3K%kn3S(m/XK%>P)K%>P)K%B_JMpd4*K$o8!K$r5uXj2OD
K$JtnK$LaKK#rVdK#rVdK#uolUr@r)K#N>\K#PFB`k[2AK"uuRK#!kkkduGYK"HWHK"HWHpq)HnK"$?@
K"$?@f!hceK!L!6K!L!6['G:dK!'^.K!'^.hl`cSJuO@$JuO@$]rB#JJu+'qJu+'qS#,>BJt[diJt[di
Jt_t5Mk#BhJt.F_Jt1D^XdOd/Jsh4YJsj!6Js:kOJs:kOJs>/WUl^1iJrkSGJrm[-`f,M.JrG;?JrH1X
k_FbFJqnr5Jqnr5pkOc\JqS`/JqS`/eqC/TJq&B%Jq&B%["![SJpW)rJpW)rhg;/BJp)`hJp)`h]lqD9
JoZH`JoZH`Rr[_2Jo?6ZJo?6ZJoCF&Me[iYJnfmPJnikOX_!)qJn9OFJn;<#Jn0IDJn0IDJn3bLJ,~>

%%EndBinary
grestore
np
549.181 130.237 mo
479.345 130.237 li
471.631 130.237 465.378 123.984 465.378 116.27 cv
465.378 116.27 li
465.378 46.4341 li
465.378 38.7203 471.631 32.4673 479.345 32.4673 cv
549.181 32.4673 li
556.894 32.4673 563.147 38.7203 563.147 46.4341 cv
563.147 46.4341 li
563.147 116.27 li
563.147 123.984 556.894 130.237 549.181 130.237 cv
466.786 110.965 mo
466.786 116.27 li
466.786 123.194 472.42 128.829 479.345 128.829 cv
549.181 128.829 li
556.104 128.829 561.739 123.194 561.739 116.27 cv
561.739 110.965 li
561.739 117.89 556.104 123.524 549.181 123.524 cv
479.345 123.524 li
472.42 123.524 466.786 117.89 466.786 110.965 cv
479.345 33.4673 mo
472.194 33.4673 466.378 39.2841 466.378 46.4341 cv
466.378 71.7978 li
562.147 71.7978 li
562.147 46.4341 li
562.147 39.2841 556.331 33.4673 549.181 33.4673 cv
479.345 33.4673 li
level3{
gsave
clp
[5.9867e-15 -97.7702 97.7702 5.9867e-15 514.263 130.237 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.9867e-15 -97.7702 97.7702 5.9867e-15 514.263 130.237 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
549.181 128.829 mo
479.345 128.829 li
472.42 128.829 466.786 123.194 466.786 116.27 cv
466.786 110.965 li
466.786 117.89 472.42 123.524 479.345 123.524 cv
549.181 123.524 li
556.104 123.524 561.739 117.89 561.739 110.965 cv
561.739 116.27 li
561.739 123.194 556.104 128.829 549.181 128.829 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[96.48 0 0 19.2 466.08 320.4 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 201 
/H 40 
/M[201 0 0 -40 0 40 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K#E8ZK#E8ZU;Z$.K#<2XK#<2XK#<2XK#<2XK#<2XK#<2XK#<5Y!5sK-K#E8ZK#E8ZK#E8ZK#E8ZK#E8Z
K#Fh1K#G.:bf,1QK#N>\K#Q?\XMf_/K#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8Z\AZS0K#N>\K#N>\K#N>\
K#N>\K#N>\Y/Q"3K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#R,rQH"NrK#WD^
K#WD^K#WD^K#Xt5K#N>\K#N>\U;c*2K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^UW264
K#`J`K#`J`_oKR4K#WD^Y/Z(5\&QY4K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`\Aue6
K#iPbK#iPbK#iPbK#iPbK#m`.MoW!@K#`J`K#d5uQcOd"K#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPb
K#iPbK#m?#QH=a#K#rVdNlgt8K#iPbK#iPbY/l+~>

%%EndBinary
grestore
np
562.147 71.7978 mo
466.378 71.7978 li
466.378 46.4341 li
466.378 39.2841 472.194 33.4673 479.345 33.4673 cv
549.181 33.4673 li
556.331 33.4673 562.147 39.2841 562.147 46.4341 cv
562.147 71.7978 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[97.44 0 0 39.84 465.6 377.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 203 
/H 83 
/M[203 0 0 -83 0 83 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 203 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 203 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 203 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)b-9RJqg;K)UB$K)UB$K)UB$K)UB$K)UB$
LAlf([JnJMK)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)LB$s87KHK)C5uK)C5uK)C5uK)C5uK)C5uK)C5u
K)F'pZ29:QK):/sK):/sK):/sK):/sK):/sK):/sSbqRGK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)q
lh["EK)(#oK)(/sK)(#oK)(#oK)(#oK)(#oK))kNc1lncK(srmK(srmK(srmK(srmlM-eAK(jlkK(jlk
K(jlkK(jlkK(jlkK(k#oK(l\IcLuk`K(afiK(afiK(afiK(afiK(afiK(afiK_GH=K(X`gK(X`gK(X`g
K(X`gK(ZYHbOgDYK(OZeK(OZeL@g)iK(OZeK(OZeK(OZeKCf08K(FTcK(FTcK(FTcK(FTcK(HJCbjpAV
K(=NaK(=NaK(=NaK(=NaK(=NaK(=NaL@TrdK(4H_K(4H_K(4H_K(4H_[dhW3K(+B]K(+B]K(+B]K(+B]
K(+B]K(+B]K(+K`rpPI-K("<[K(#?#jR.WfK'nB]K'n6YK'n6YK'n6YK'n6YK'n6YK'qmkRdG^oK'e0W
K'e0WK'e0WK'e0WK'e0WK'e0W\F%K+K'\*UK'\*Udd47)L?jHWK'S$SK'S$SK'S$SK'S$SK'S$SK'Sun
k3@Q`K'IsQK'IsQK'IsQK'IsQdH\%%K'@mOK'@mOK'@mOK'@mOL?X<RK'7gMK'7gMK'7gMK'7gM[cl!!
K'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.jNroSgpK'%[IK'&]fjQ2!TK&qaKK&qUGK&qUGK&qUGcfMOp
K&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&iNajl:sQK&_ICK&aB$bMn-5K&VCAK&VCAL>mgEK&VCAki/)j
K&M=?K&M=?K&M=?K&M=?S`/_hK&D7=K&D7=\)>KfK&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;=?K&2+9
K&2+9K&2+9K&2+9K&3rmc/"!-K&)%7K&+f0J,~>

%%EndBinary
grestore
np
416.814 152.585 mo
326.027 152.585 li
315.631 152.585 307.172 144.126 307.172 133.729 cv
307.172 42.9423 li
307.172 32.5454 315.631 24.087 326.027 24.087 cv
416.814 24.087 li
427.211 24.087 435.67 32.5454 435.67 42.9423 cv
435.67 133.729 li
435.67 144.126 427.211 152.585 416.814 152.585 cv
326.027 24.2896 mo
315.817 24.2896 307.51 32.5966 307.51 42.8072 cv
307.51 133.504 li
307.51 143.714 315.817 152.021 326.027 152.021 cv
416.814 152.021 li
427.024 152.021 435.332 143.714 435.332 133.504 cv
435.332 42.8072 li
435.332 32.5966 427.024 24.2896 416.814 24.2896 cv
326.027 24.2896 li
1 1 1 rgb
f
416.814 152.021 mo
326.027 152.021 li
315.817 152.021 307.51 143.714 307.51 133.504 cv
307.51 42.8072 li
307.51 32.5966 315.817 24.2896 326.027 24.2896 cv
416.814 24.2896 li
427.024 24.2896 435.332 32.5966 435.332 42.8072 cv
435.332 133.504 li
435.332 143.714 427.024 152.021 416.814 152.021 cv
326.027 24.4922 mo
316.003 24.4922 307.848 32.648 307.848 42.6724 cv
307.848 133.278 li
307.848 143.303 316.003 151.459 326.027 151.459 cv
416.814 151.459 li
426.839 151.459 434.994 143.303 434.994 133.278 cv
434.994 42.6724 li
434.994 32.648 426.839 24.4922 416.814 24.4922 cv
326.027 24.4922 li
f
416.814 151.459 mo
326.027 151.459 li
316.003 151.459 307.848 143.303 307.848 133.278 cv
307.848 42.6724 li
307.848 32.648 316.003 24.4922 326.027 24.4922 cv
416.814 24.4922 li
426.839 24.4922 434.994 32.648 434.994 42.6724 cv
434.994 133.278 li
434.994 143.303 426.839 151.459 416.814 151.459 cv
326.027 24.6953 mo
316.189 24.6953 308.186 32.6992 308.186 42.5371 cv
308.186 133.053 li
308.186 142.891 316.189 150.895 326.027 150.895 cv
416.814 150.895 li
426.652 150.895 434.656 142.891 434.656 133.053 cv
434.656 42.5371 li
434.656 32.6992 426.652 24.6953 416.814 24.6953 cv
326.027 24.6953 li
f
416.814 150.895 mo
326.027 150.895 li
316.189 150.895 308.186 142.891 308.186 133.053 cv
308.186 42.5371 li
308.186 32.6992 316.189 24.6953 326.027 24.6953 cv
416.814 24.6953 li
426.652 24.6953 434.656 32.6992 434.656 42.5371 cv
434.656 133.053 li
434.656 142.891 426.652 150.895 416.814 150.895 cv
326.027 24.8979 mo
316.376 24.8979 308.523 32.75 308.523 42.4019 cv
308.523 132.828 li
308.523 142.48 316.376 150.332 326.027 150.332 cv
416.814 150.332 li
426.466 150.332 434.318 142.48 434.318 132.828 cv
434.318 42.4019 li
434.318 32.75 426.466 24.8979 416.814 24.8979 cv
326.027 24.8979 li
.996078 .996078 .996078 rgb
f
416.814 150.332 mo
326.027 150.332 li
316.376 150.332 308.523 142.48 308.523 132.828 cv
308.523 42.4019 li
308.523 32.75 316.376 24.8979 326.027 24.8979 cv
416.814 24.8979 li
426.466 24.8979 434.318 32.75 434.318 42.4019 cv
434.318 132.828 li
434.318 142.48 426.466 150.332 416.814 150.332 cv
326.027 25.1005 mo
316.562 25.1005 308.861 32.8013 308.861 42.2666 cv
308.861 132.603 li
308.861 142.068 316.562 149.769 326.027 149.769 cv
416.814 149.769 li
426.279 149.769 433.98 142.068 433.98 132.603 cv
433.98 42.2666 li
433.98 32.8013 426.279 25.1005 416.814 25.1005 cv
326.027 25.1005 li
f
416.814 149.769 mo
326.027 149.769 li
316.562 149.769 308.861 142.068 308.861 132.603 cv
308.861 42.2666 li
308.861 32.8013 316.562 25.1005 326.027 25.1005 cv
416.814 25.1005 li
426.279 25.1005 433.98 32.8013 433.98 42.2666 cv
433.98 132.603 li
433.98 142.068 426.279 149.769 416.814 149.769 cv
326.027 25.3032 mo
316.748 25.3032 309.199 32.8526 309.199 42.1314 cv
309.199 132.377 li
309.199 141.656 316.748 149.206 326.027 149.206 cv
416.814 149.206 li
426.093 149.206 433.643 141.656 433.643 132.377 cv
433.643 42.1314 li
433.643 32.8526 426.093 25.3032 416.814 25.3032 cv
326.027 25.3032 li
.992157 .992157 .992157 rgb
f
416.814 149.206 mo
326.027 149.206 li
316.748 149.206 309.199 141.656 309.199 132.377 cv
309.199 42.1314 li
309.199 32.8526 316.748 25.3032 326.027 25.3032 cv
416.814 25.3032 li
426.093 25.3032 433.643 32.8526 433.643 42.1314 cv
433.643 132.377 li
433.643 141.656 426.093 149.206 416.814 149.206 cv
326.027 25.5058 mo
316.935 25.5058 309.537 32.9038 309.537 41.9965 cv
309.537 132.152 li
309.537 141.245 316.935 148.643 326.027 148.643 cv
416.814 148.643 li
425.907 148.643 433.305 141.245 433.305 132.152 cv
433.305 41.9965 li
433.305 32.9038 425.907 25.5058 416.814 25.5058 cv
326.027 25.5058 li
.988235 .988235 .988235 rgb
f
416.814 148.643 mo
326.027 148.643 li
316.935 148.643 309.537 141.245 309.537 132.152 cv
309.537 41.9965 li
309.537 32.9038 316.935 25.5058 326.027 25.5058 cv
416.814 25.5058 li
425.907 25.5058 433.305 32.9038 433.305 41.9965 cv
433.305 132.152 li
433.305 141.245 425.907 148.643 416.814 148.643 cv
326.027 25.709 mo
317.121 25.709 309.875 32.9551 309.875 41.8613 cv
309.875 131.927 li
309.875 140.833 317.121 148.079 326.027 148.079 cv
416.814 148.079 li
425.721 148.079 432.967 140.833 432.967 131.927 cv
432.967 41.8613 li
432.967 32.9551 425.721 25.709 416.814 25.709 cv
326.027 25.709 li
.984314 .984314 .984314 rgb
f
416.814 148.079 mo
326.027 148.079 li
317.121 148.079 309.875 140.833 309.875 131.927 cv
309.875 41.8613 li
309.875 32.9551 317.121 25.709 326.027 25.709 cv
416.814 25.709 li
425.721 25.709 432.967 32.9551 432.967 41.8613 cv
432.967 131.927 li
432.967 140.833 425.721 148.079 416.814 148.079 cv
326.027 25.9116 mo
317.308 25.9116 310.213 33.0059 310.213 41.7261 cv
310.213 131.702 li
310.213 140.421 317.308 147.516 326.027 147.516 cv
416.814 147.516 li
425.534 147.516 432.629 140.421 432.629 131.702 cv
432.629 41.7261 li
432.629 33.0059 425.534 25.9116 416.814 25.9116 cv
326.027 25.9116 li
.976471 .976471 .976471 rgb
f
416.814 147.516 mo
326.027 147.516 li
317.308 147.516 310.213 140.421 310.213 131.702 cv
310.213 41.7261 li
310.213 33.0059 317.308 25.9116 326.027 25.9116 cv
416.814 25.9116 li
425.534 25.9116 432.629 33.0059 432.629 41.7261 cv
432.629 131.702 li
432.629 140.421 425.534 147.516 416.814 147.516 cv
326.027 26.1143 mo
317.494 26.1143 310.551 33.0571 310.551 41.5908 cv
310.551 131.477 li
310.551 140.01 317.494 146.953 326.027 146.953 cv
416.814 146.953 li
425.348 146.953 432.291 140.01 432.291 131.477 cv
432.291 41.5908 li
432.291 33.0571 425.348 26.1143 416.814 26.1143 cv
326.027 26.1143 li
.972549 .972549 .972549 rgb
f
416.814 146.953 mo
326.027 146.953 li
317.494 146.953 310.551 140.01 310.551 131.477 cv
310.551 41.5908 li
310.551 33.0571 317.494 26.1143 326.027 26.1143 cv
416.814 26.1143 li
425.348 26.1143 432.291 33.0571 432.291 41.5908 cv
432.291 131.477 li
432.291 140.01 425.348 146.953 416.814 146.953 cv
326.027 26.3169 mo
317.68 26.3169 310.889 33.1084 310.889 41.4556 cv
310.889 131.251 li
310.889 139.599 317.68 146.39 326.027 146.39 cv
416.814 146.39 li
425.162 146.39 431.953 139.599 431.953 131.251 cv
431.953 41.4556 li
431.953 33.1084 425.162 26.3169 416.814 26.3169 cv
326.027 26.3169 li
.964706 .964706 .964706 rgb
f
416.814 146.39 mo
326.027 146.39 li
317.68 146.39 310.889 139.599 310.889 131.251 cv
310.889 41.4556 li
310.889 33.1084 317.68 26.3169 326.027 26.3169 cv
416.814 26.3169 li
425.162 26.3169 431.953 33.1084 431.953 41.4556 cv
431.953 131.251 li
431.953 139.599 425.162 146.39 416.814 146.39 cv
326.027 26.52 mo
317.866 26.52 311.226 33.1597 311.226 41.3203 cv
311.226 131.026 li
311.226 139.187 317.866 145.827 326.027 145.827 cv
416.814 145.827 li
424.976 145.827 431.615 139.187 431.615 131.026 cv
431.615 41.3203 li
431.615 33.1597 424.976 26.52 416.814 26.52 cv
326.027 26.52 li
.956863 .956863 .956863 rgb
f
416.814 145.827 mo
326.027 145.827 li
317.866 145.827 311.226 139.187 311.226 131.026 cv
311.226 41.3203 li
311.226 33.1597 317.866 26.52 326.027 26.52 cv
416.814 26.52 li
424.976 26.52 431.615 33.1597 431.615 41.3203 cv
431.615 131.026 li
431.615 139.187 424.976 145.827 416.814 145.827 cv
326.027 26.7226 mo
318.053 26.7226 311.564 33.2105 311.564 41.1856 cv
311.564 130.8 li
311.564 138.775 318.053 145.263 326.027 145.263 cv
416.814 145.263 li
424.789 145.263 431.277 138.775 431.277 130.8 cv
431.277 41.1856 li
431.277 33.2105 424.789 26.7226 416.814 26.7226 cv
326.027 26.7226 li
.94902 .94902 .94902 rgb
f
416.814 145.263 mo
326.027 145.263 li
318.053 145.263 311.564 138.775 311.564 130.8 cv
311.564 41.1856 li
311.564 33.2105 318.053 26.7226 326.027 26.7226 cv
416.814 26.7226 li
424.789 26.7226 431.277 33.2105 431.277 41.1856 cv
431.277 130.8 li
431.277 138.775 424.789 145.263 416.814 145.263 cv
324.525 27.0045 mo
317.441 27.7567 311.902 33.7689 311.902 41.0502 cv
311.902 130.575 li
311.902 138.364 318.239 144.7 326.027 144.7 cv
416.814 144.7 li
424.603 144.7 430.939 138.364 430.939 130.575 cv
430.939 41.0502 li
430.939 33.7689 425.401 27.7567 418.316 27.0045 cv
417.828 26.9228 417.326 26.8803 416.814 26.8803 cv
326.027 26.8803 li
325.516 26.8803 325.014 26.9228 324.525 27.0045 cv
.941176 .941176 .941176 rgb
f
416.814 144.7 mo
326.027 144.7 li
318.239 144.7 311.902 138.364 311.902 130.575 cv
311.902 41.0502 li
311.902 33.7689 317.441 27.7567 324.525 27.0045 cv
323.839 27.1193 323.178 27.3113 322.553 27.5714 cv
316.628 29.1156 312.24 34.5128 312.24 40.915 cv
312.24 130.35 li
312.24 137.952 318.426 144.137 326.027 144.137 cv
416.814 144.137 li
424.416 144.137 430.602 137.952 430.602 130.35 cv
430.602 40.915 li
430.602 34.5128 426.214 29.1157 420.289 27.5714 cv
419.663 27.3113 419.003 27.1193 418.316 27.0045 cv
425.401 27.7567 430.939 33.7689 430.939 41.0502 cv
430.939 130.575 li
430.939 138.364 424.603 144.7 416.814 144.7 cv
.933333 .933333 .933333 rgb
f
416.814 144.137 mo
326.027 144.137 li
318.426 144.137 312.24 137.952 312.24 130.35 cv
312.24 40.915 li
312.24 34.5128 316.628 29.1156 322.553 27.5714 cv
322.152 27.7381 321.765 27.9328 321.396 28.1528 cv
316.255 30.0444 312.578 34.991 312.578 40.7797 cv
312.578 130.124 li
312.578 137.54 318.611 143.574 326.027 143.574 cv
416.814 143.574 li
424.23 143.574 430.264 137.54 430.264 130.124 cv
430.264 40.7797 li
430.264 34.991 426.587 30.0444 421.446 28.1529 cv
421.076 27.9328 420.69 27.7381 420.289 27.5714 cv
426.214 29.1157 430.602 34.5128 430.602 40.915 cv
430.602 130.35 li
430.602 137.952 424.416 144.137 416.814 144.137 cv
.921569 .921569 .921569 rgb
f
416.814 143.574 mo
326.027 143.574 li
318.611 143.574 312.578 137.54 312.578 130.124 cv
312.578 40.7797 li
312.578 34.991 316.255 30.0444 321.396 28.1528 cv
321.091 28.3347 320.797 28.5337 320.516 28.749 cv
316.032 30.8345 312.916 35.3825 312.916 40.6445 cv
312.916 129.899 li
312.916 137.129 318.798 143.011 326.027 143.011 cv
416.814 143.011 li
424.044 143.011 429.925 137.129 429.925 129.899 cv
429.925 40.6445 li
429.925 35.3829 426.809 30.835 422.326 28.7492 cv
422.045 28.534 421.751 28.3347 421.446 28.1529 cv
426.587 30.0444 430.264 34.991 430.264 40.7797 cv
430.264 130.124 li
430.264 137.54 424.23 143.574 416.814 143.574 cv
.913725 .913725 .913725 rgb
f
416.814 143.011 mo
326.027 143.011 li
318.798 143.011 312.916 137.129 312.916 129.899 cv
312.916 40.6445 li
312.916 35.3825 316.032 30.8345 320.516 28.749 cv
320.266 28.9407 320.026 29.145 319.797 29.3612 cv
315.896 31.5499 313.254 35.727 313.254 40.5093 cv
313.254 129.674 li
313.254 136.717 318.984 142.447 326.027 142.447 cv
416.814 142.447 li
423.857 142.447 429.587 136.717 429.587 129.674 cv
429.587 40.5093 li
429.587 35.727 426.946 31.5503 423.045 29.3616 cv
422.816 29.1452 422.576 28.9411 422.326 28.7492 cv
426.809 30.835 429.925 35.3829 429.925 40.6445 cv
429.925 129.899 li
429.925 137.129 424.044 143.011 416.814 143.011 cv
.901961 .901961 .901961 rgb
f
416.814 142.447 mo
326.027 142.447 li
318.984 142.447 313.254 136.717 313.254 129.674 cv
313.254 40.5093 li
313.254 35.727 315.896 31.5499 319.797 29.3612 cv
319.586 29.5612 319.384 29.7713 319.192 29.9906 cv
315.821 32.2174 313.592 36.0407 313.592 40.3745 cv
313.592 129.449 li
313.592 136.306 319.171 141.884 326.027 141.884 cv
416.814 141.884 li
423.671 141.884 429.249 136.306 429.249 129.449 cv
429.249 40.3745 li
429.249 36.0407 427.021 32.2179 423.65 29.9911 cv
423.459 29.7717 423.257 29.5616 423.045 29.3616 cv
426.946 31.5503 429.587 35.727 429.587 40.5093 cv
429.587 129.674 li
429.587 136.717 423.857 142.447 416.814 142.447 cv
.890196 .890196 .890196 rgb
f
416.814 141.884 mo
326.027 141.884 li
319.171 141.884 313.592 136.306 313.592 129.449 cv
313.592 40.3745 li
313.592 36.0407 315.821 32.2174 319.192 29.9906 cv
319.01 30.1981 318.838 30.414 318.676 30.6375 cv
315.792 32.8508 313.931 36.3317 313.931 40.2393 cv
313.931 129.224 li
313.931 135.894 319.356 141.321 326.027 141.321 cv
416.814 141.321 li
423.484 141.321 428.911 135.894 428.911 129.224 cv
428.911 40.2393 li
428.911 36.3321 427.049 32.8516 424.166 30.6384 cv
424.004 30.4149 423.832 30.1986 423.65 29.9911 cv
427.021 32.2179 429.249 36.0407 429.249 40.3745 cv
429.249 129.449 li
429.249 136.306 423.671 141.884 416.814 141.884 cv
.878431 .878431 .878431 rgb
f
416.814 141.321 mo
326.027 141.321 li
319.356 141.321 313.931 135.894 313.931 129.224 cv
313.931 40.2393 li
313.931 36.3317 315.792 32.8508 318.676 30.6375 cv
318.52 30.8528 318.373 31.075 318.236 31.3039 cv
315.804 33.4598 314.269 36.606 314.269 40.1039 cv
314.269 128.998 li
314.269 135.482 319.543 140.758 326.027 140.758 cv
416.814 140.758 li
423.299 140.758 428.573 135.482 428.573 128.998 cv
428.573 40.1039 li
428.573 36.606 427.038 33.4599 424.606 31.304 cv
424.469 31.0754 424.322 30.8534 424.166 30.6384 cv
427.049 32.8516 428.911 36.3321 428.911 40.2393 cv
428.911 129.224 li
428.911 135.894 423.484 141.321 416.814 141.321 cv
.858823 .858823 .858823 rgb
f
416.814 140.758 mo
326.027 140.758 li
319.543 140.758 314.269 135.482 314.269 128.998 cv
314.269 40.1039 li
314.269 36.606 315.804 33.4598 318.236 31.3039 cv
318.102 31.5261 317.978 31.7544 317.864 31.9884 cv
315.85 34.0488 314.606 36.8663 314.606 39.9688 cv
314.606 128.773 li
314.606 135.071 319.73 140.194 326.027 140.194 cv
416.814 140.194 li
423.112 140.194 428.235 135.071 428.235 128.773 cv
428.235 39.9688 li
428.235 36.8663 426.992 34.0489 424.978 31.9885 cv
424.863 31.7546 424.739 31.5262 424.606 31.304 cv
427.038 33.4599 428.573 36.606 428.573 40.1039 cv
428.573 128.998 li
428.573 135.482 423.299 140.758 416.814 140.758 cv
.847059 .847059 .847059 rgb
f
416.814 140.194 mo
326.027 140.194 li
319.73 140.194 314.606 135.071 314.606 128.773 cv
314.606 39.9688 li
314.606 36.8663 315.85 34.0488 317.864 31.9884 cv
317.752 32.2185 317.649 32.454 317.556 32.6944 cv
315.927 34.6244 314.944 37.1161 314.944 39.8334 cv
314.944 128.548 li
314.944 134.659 319.916 139.631 326.027 139.631 cv
416.814 139.631 li
422.926 139.631 427.897 134.659 427.897 128.548 cv
427.897 39.8334 li
427.897 37.1165 426.914 34.6244 425.286 32.6946 cv
425.193 32.4542 425.09 32.2186 424.978 31.9885 cv
426.992 34.0489 428.235 36.8663 428.235 39.9688 cv
428.235 128.773 li
428.235 135.071 423.112 140.194 416.814 140.194 cv
.831372 .831372 .831372 rgb
f
416.814 139.631 mo
326.027 139.631 li
319.916 139.631 314.944 134.659 314.944 128.548 cv
314.944 39.8334 li
314.944 37.1161 315.927 34.6244 317.556 32.6944 cv
317.464 32.9327 317.381 33.176 317.309 33.4234 cv
316.034 35.1903 315.282 37.3581 315.282 39.6987 cv
315.282 128.322 li
315.282 134.248 320.102 139.068 326.027 139.068 cv
416.814 139.068 li
422.739 139.068 427.56 134.248 427.56 128.322 cv
427.56 39.6987 li
427.56 37.3585 426.807 35.1902 425.532 33.4235 cv
425.46 33.1761 425.378 32.9329 425.286 32.6946 cv
426.914 34.6244 427.897 37.1165 427.897 39.8334 cv
427.897 128.548 li
427.897 134.659 422.926 139.631 416.814 139.631 cv
.815686 .815686 .815686 rgb
f
416.814 139.068 mo
326.027 139.068 li
320.102 139.068 315.282 134.248 315.282 128.322 cv
315.282 39.6987 li
315.282 37.3581 316.034 35.1903 317.309 33.4234 cv
317.237 33.6706 317.176 33.9222 317.125 34.1775 cv
316.17 35.7498 315.62 37.5936 315.62 39.5635 cv
315.62 128.097 li
315.62 133.836 320.288 138.505 326.027 138.505 cv
416.814 138.505 li
422.553 138.505 427.222 133.836 427.222 128.097 cv
427.222 39.5635 li
427.222 37.5939 426.672 35.7505 425.717 34.1784 cv
425.666 33.9228 425.605 33.671 425.532 33.4235 cv
426.807 35.1902 427.56 37.3585 427.56 39.6987 cv
427.56 128.322 li
427.56 134.248 422.739 139.068 416.814 139.068 cv
.803922 .803922 .803922 rgb
f
416.814 138.505 mo
326.027 138.505 li
320.288 138.505 315.62 133.836 315.62 128.097 cv
315.62 39.5635 li
315.62 37.5936 316.17 35.7498 317.125 34.1775 cv
317.073 34.4352 317.033 34.6967 317.004 34.9617 cv
316.335 36.3083 315.958 37.8251 315.958 39.4282 cv
315.958 127.872 li
315.958 133.424 320.475 137.942 326.027 137.942 cv
416.814 137.942 li
422.367 137.942 426.884 133.424 426.884 127.872 cv
426.884 39.4282 li
426.884 37.8251 426.507 36.3084 425.838 34.9617 cv
425.809 34.6971 425.769 34.4358 425.717 34.1784 cv
426.672 35.7505 427.222 37.5939 427.222 39.5635 cv
427.222 128.097 li
427.222 133.836 422.553 138.505 416.814 138.505 cv
.780392 .780392 .780392 rgb
f
416.814 137.942 mo
326.027 137.942 li
320.475 137.942 315.958 133.424 315.958 127.872 cv
315.958 39.4282 li
315.958 37.8251 316.335 36.3083 317.004 34.9617 cv
316.974 35.2316 316.956 35.5051 316.951 35.7816 cv
316.528 36.8714 316.296 38.0556 316.296 39.293 cv
316.296 127.646 li
316.296 133.013 320.661 137.378 326.027 137.378 cv
416.814 137.378 li
422.181 137.378 426.546 133.013 426.546 127.646 cv
426.546 39.293 li
426.546 38.0556 426.314 36.8718 425.891 35.782 cv
425.886 35.5052 425.868 35.232 425.838 34.9617 cv
426.507 36.3084 426.884 37.8251 426.884 39.4282 cv
426.884 127.872 li
426.884 133.424 422.367 137.942 416.814 137.942 cv
.764706 .764706 .764706 rgb
f
416.814 137.378 mo
326.027 137.378 li
320.661 137.378 316.296 133.013 316.296 127.646 cv
316.296 39.293 li
316.296 38.0556 316.528 36.8714 316.951 35.7816 cv
316.95 35.8406 316.949 35.8996 316.949 35.9589 cv
316.949 36.7397 li
316.744 37.5113 316.634 38.3221 316.634 39.1577 cv
316.634 127.421 li
316.634 132.601 320.848 136.815 326.027 136.815 cv
416.814 136.815 li
421.994 136.815 426.208 132.601 426.208 127.421 cv
426.208 39.1577 li
426.208 38.3221 426.098 37.5114 425.893 36.7397 cv
425.893 35.9589 li
425.893 35.9589 li
425.893 35.8999 425.892 35.8407 425.891 35.782 cv
426.314 36.8718 426.546 38.0556 426.546 39.293 cv
426.546 127.646 li
426.546 133.013 422.181 137.378 416.814 137.378 cv
.74902 .74902 .74902 rgb
f
416.814 136.815 mo
326.027 136.815 li
320.848 136.815 316.634 132.601 316.634 127.421 cv
316.634 39.1577 li
316.634 38.3221 316.744 37.5113 316.949 36.7397 cv
316.949 126.746 li
316.949 126.746 li
316.949 126.975 316.958 127.202 316.975 127.426 cv
317.097 132.314 321.111 136.253 326.027 136.253 cv
416.814 136.253 li
421.73 136.253 425.743 132.315 425.867 127.429 cv
425.884 127.203 425.893 126.976 425.893 126.746 cv
425.893 36.7397 li
426.098 37.5114 426.208 38.3221 426.208 39.1577 cv
426.208 127.421 li
426.208 132.601 421.994 136.815 416.814 136.815 cv
.729412 .729412 .729412 rgb
f
416.814 136.253 mo
326.027 136.253 li
321.111 136.253 317.097 132.314 316.975 127.426 cv
317.324 132.116 321.25 135.824 326.027 135.824 cv
416.814 135.824 li
421.59 135.824 425.516 132.117 425.867 127.429 cv
425.743 132.315 421.73 136.253 416.814 136.253 cv
.709804 .709804 .709804 rgb
f
326.027 135.824 mo
321.021 135.824 316.949 131.751 316.949 126.746 cv
316.949 35.9589 li
316.949 30.9526 321.021 26.8803 326.027 26.8803 cv
416.814 26.8803 li
421.82 26.8803 425.893 30.9526 425.893 35.9589 cv
425.893 126.746 li
425.893 131.751 421.82 135.824 416.814 135.824 cv
326.027 135.824 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 371.421 135.824 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 371.421 135.824 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
416.814 135.824 mo
326.027 135.824 li
321.25 135.824 317.324 132.116 316.975 127.426 cv
316.958 127.202 316.949 126.975 316.949 126.746 cv
316.949 126.746 li
316.949 35.9589 li
316.949 30.9526 321.021 26.8803 326.027 26.8803 cv
416.814 26.8803 li
421.82 26.8803 425.893 30.9526 425.893 35.9589 cv
425.893 35.9589 li
425.893 36.7397 li
425.893 126.746 li
425.893 126.976 425.884 127.203 425.867 127.429 cv
425.516 132.117 421.59 135.824 416.814 135.824 cv
326.027 27.5845 mo
321.411 27.5845 317.653 31.3418 317.653 35.9589 cv
317.653 126.746 li
317.653 131.363 321.411 135.12 326.027 135.12 cv
416.813 135.12 li
421.432 135.12 425.188 131.363 425.188 126.746 cv
425.188 35.9589 li
425.188 31.3418 421.432 27.5845 416.813 27.5845 cv
326.027 27.5845 li
416.813 130.941 mo
326.027 130.941 li
323.714 130.941 321.832 129.06 321.832 126.746 cv
321.832 35.9589 li
321.832 33.645 323.714 31.7627 326.027 31.7627 cv
416.813 31.7627 li
419.128 31.7627 421.011 33.645 421.011 35.9589 cv
421.011 126.746 li
421.011 129.06 419.128 130.941 416.813 130.941 cv
322.536 126.746 mo
322.536 126.746 li
322.536 128.674 324.099 130.237 326.027 130.237 cv
416.814 130.237 li
418.742 130.237 420.306 128.674 420.306 126.746 cv
420.306 35.9589 li
420.306 35.9589 li
420.306 34.0303 418.742 32.4673 416.814 32.4673 cv
326.027 32.4673 li
324.099 32.4673 322.536 34.0303 322.536 35.9589 cv
322.536 126.746 li
322.536 126.746 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 371.421 135.824 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 371.421 135.824 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
416.813 135.12 mo
326.027 135.12 li
321.411 135.12 317.653 131.363 317.653 126.746 cv
317.653 35.9589 li
317.653 31.3418 321.411 27.5845 326.027 27.5845 cv
416.813 27.5845 li
421.432 27.5845 425.188 31.3418 425.188 35.9589 cv
425.188 126.746 li
425.188 131.363 421.432 135.12 416.813 135.12 cv
318.358 126.746 mo
318.358 126.746 li
318.358 130.975 321.799 134.415 326.027 134.415 cv
416.813 134.415 li
421.044 134.415 424.484 130.975 424.484 126.746 cv
424.484 35.9589 li
424.484 35.9589 li
424.484 31.7295 421.044 28.2891 416.813 28.2891 cv
326.027 28.2891 li
321.799 28.2891 318.358 31.7295 318.358 35.9589 cv
318.358 126.746 li
318.358 126.746 li
416.813 131.646 mo
326.027 131.646 li
323.326 131.646 321.127 129.448 321.127 126.746 cv
321.127 35.9589 li
321.127 33.2563 323.326 31.0581 326.027 31.0581 cv
416.813 31.0581 li
419.517 31.0581 421.715 33.2563 421.715 35.9589 cv
421.715 126.746 li
421.715 129.448 419.517 131.646 416.813 131.646 cv
326.027 31.7627 mo
323.714 31.7627 321.832 33.645 321.832 35.9589 cv
321.832 126.746 li
321.832 129.06 323.714 130.941 326.027 130.941 cv
416.813 130.941 li
419.128 130.941 421.011 129.06 421.011 126.746 cv
421.011 35.9589 li
421.011 33.645 419.128 31.7627 416.813 31.7627 cv
326.027 31.7627 li
level3{
gsave
clp
[6.58462e-15 -107.535 107.535 6.58462e-15 371.421 135.12 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.58462e-15 -107.535 107.535 6.58462e-15 371.421 135.12 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
416.813 133.055 mo
326.027 133.055 li
322.549 133.055 319.719 130.224 319.719 126.746 cv
319.719 35.9589 li
319.719 32.4799 322.549 29.6495 326.027 29.6495 cv
416.813 29.6495 li
420.293 29.6495 423.124 32.4799 423.124 35.9589 cv
423.124 126.746 li
423.124 130.224 420.293 133.055 416.813 133.055 cv
326.027 31.0581 mo
323.326 31.0581 321.127 33.2563 321.127 35.9589 cv
321.127 126.746 li
321.127 129.448 323.326 131.646 326.027 131.646 cv
416.813 131.646 li
419.517 131.646 421.715 129.448 421.715 126.746 cv
421.715 35.9589 li
421.715 33.2563 419.517 31.0581 416.813 31.0581 cv
326.027 31.0581 li
level3{
gsave
clp
[6.49836e-15 -106.126 106.126 6.49836e-15 371.421 134.415 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49836e-15 -106.126 106.126 6.49836e-15 371.421 134.415 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
416.813 134.415 mo
326.027 134.415 li
321.799 134.415 318.358 130.975 318.358 126.746 cv
318.358 126.746 li
318.358 35.9589 li
318.358 31.7295 321.799 28.2891 326.027 28.2891 cv
416.813 28.2891 li
421.044 28.2891 424.484 31.7295 424.484 35.9589 cv
424.484 35.9589 li
424.484 126.746 li
424.484 130.975 421.044 134.415 416.813 134.415 cv
326.027 28.5709 mo
321.954 28.5709 318.641 31.8848 318.641 35.9589 cv
318.641 126.746 li
318.641 130.819 321.954 134.133 326.027 134.133 cv
416.813 134.133 li
420.889 134.133 424.202 130.819 424.202 126.746 cv
424.202 35.9589 li
424.202 31.8848 420.889 28.5709 416.813 28.5709 cv
326.027 28.5709 li
416.813 133.337 mo
326.027 133.337 li
322.393 133.337 319.436 130.379 319.436 126.746 cv
319.436 35.9589 li
319.436 32.3247 322.393 29.3677 326.027 29.3677 cv
416.813 29.3677 li
420.448 29.3677 423.406 32.3247 423.406 35.9589 cv
423.406 126.746 li
423.406 130.379 420.448 133.337 416.813 133.337 cv
326.027 29.6495 mo
322.549 29.6495 319.719 32.4799 319.719 35.9589 cv
319.719 126.746 li
319.719 130.224 322.549 133.055 326.027 133.055 cv
416.813 133.055 li
420.293 133.055 423.124 130.224 423.124 126.746 cv
423.124 35.9589 li
423.124 32.4799 420.293 29.6495 416.813 29.6495 cv
326.027 29.6495 li
level3{
gsave
clp
[6.49836e-15 -106.126 106.126 6.49836e-15 371.421 134.415 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49836e-15 -106.126 106.126 6.49836e-15 371.421 134.415 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
416.813 134.133 mo
326.027 134.133 li
321.954 134.133 318.641 130.819 318.641 126.746 cv
318.641 35.9589 li
318.641 31.8848 321.954 28.5709 326.027 28.5709 cv
416.813 28.5709 li
420.889 28.5709 424.202 31.8848 424.202 35.9589 cv
424.202 126.746 li
424.202 130.819 420.889 134.133 416.813 134.133 cv
326.027 29.3677 mo
322.393 29.3677 319.436 32.3247 319.436 35.9589 cv
319.436 126.746 li
319.436 130.379 322.393 133.337 326.027 133.337 cv
416.813 133.337 li
420.448 133.337 423.406 130.379 423.406 126.746 cv
423.406 35.9589 li
423.406 32.3247 420.448 29.3677 416.813 29.3677 cv
326.027 29.3677 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[107.04 0 0 107.04 317.76 315.12 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 223 
/H 223 
/M[223 0 0 -223 0 223 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K"?QFK"?QFK"?QFK"?QFK"?QF]t24qK"HWHK"HWHS%In"K"uuRK"uuRK#%/sMo1.aK#<2XK#?0WXiH%6
K#`J`K#b7=K$/bhK$/bhK$3&pUsFY=K$T%pK$V-V`mfUiK%,D%K%-:>kgtF<K%GV+K%GV+pt(GYK%kn3
K%kn3f%[=aK&;1;K&;1;[,6JqK&_ICK&_IChrCNqK'.aKK'.aK^$!E%K'\*UK'\*US*]A-K("<[K("<[
K(&L'MtDVnK(OZeK(RXdXn[MCK(srmK(u_JK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srm
K(srmK)#-9Mt_htK(jlkK(mjjXn@;=K(X`gK(ZMDK(=NaK(=NaK(@giV!EWuK'S$SK'U,9`o)I,K&D7=
K&E-Vkg4q.K$]+rK$]+rps=r.K"$?@K"$?@f!hcDJrtYIJrtYI[#orIJmX+:JmX+:hd<0[Jl[J(Jl[J(
Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl_YIMcG@/JlRD&JlRD&JlRD&JlRD&ZrM]XJlRD&JlRD&hc6IOJlI>$
JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlK*VJl@8"Jl@8"Jl@8"Jl@8"
Jl@8"Jl@8"Jl@8"JlA.;kYd"1Jl71uJl71uJl71uJl71uJl71uJl71uJl71uZr2KRJl71uJl71uhbp7I
Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sekrPGJl%%qJl%%qZqu?NJl%%qJl%%q
Jl%%qJl%%qJl'-W`_V1^JkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJkraLJkptoJkpto
Jkt9"UeZM:JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmpeH`AJk^hkJk^hkJk^hkJk^hkJk`UHJk^hk
Jk^hkJk^hkJk^hkJk^hk]hQL?JkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiZqQ'E
JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gpe-N;JkCVeJkCVeJkCVeJkCVeJkECB
JkCVeJkCVeJkCVeJkCVeJkCVe]h6:9Jk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk=NbX[n%7Jk1Ja
Jk37>Jk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk2A%kXU4pJk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_
Jk(D_Zq#^<Jk(D_Jk(D_haaJ3Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]ejcc1
Jjk8[Jjk8[ZpfR8Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[RmlO/Jjb2YJjb2YJjb2YJjb2YJjb2Y
Jjb2YJjb2YJjct6JjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJj]<#MaE"^JjP&U
JjP&UJjP&UJjP&UZpK@2JjP&UJjP&UJjP&UJjP&UJjR.;`^,2BJjFuSJjFuSJjFuSJjFuSJjFuSJjFuS
JjFuSJjFuSJjFuSJjHb0Jj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJjB)rMa)eX
Jj4iOJj4iOJj4iOJj4iOZp0.,Jj4iOJj4iOJj4iOJj4iOJj6q5`]eu<Jj+cMJj+cMJj+cMJj+cMJj+cM
Jj+cMJj+cMeip3!Jj"]KJj"]KZos"(Jj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KRm#stJinWIJinWI
JinWIJinWIJinWIJinWIJinWIJipD&JinWIJinWIJiqpQUcX/iJieQGJieQGJieQGJieQGJieQGJieQG
JieQGJieQGJieQGJihOFXZD%pJi\KEJi^8"Ji\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi]A^kW+5T
JiSECJiSECJiSECJiSECJiSECJiSECJiSECZoN^tJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AJiJ?Apc+0jJiA9?JiA9?JiA9?JiA9?JiC%qJiA9?JiA9?JiA9?JiA9?JiA9?]f3qhJi83=Ji83=
Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Zo3LnJi/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;
Ji/-;Ji/-;Ji/-;pbdsdJi&'9Ji&'9Ji&'9Ji&'9Ji'hkJi&'9Ji&'9Ji)@AUbdTYJhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhtt6XYPJ`Jhhp5Jhj\gJhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5
Jhhp5JhifNkV7ZDJh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Zn[.eJh_j3Jh_j3h_Co\JhVd1JhVd1
JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1ehF3ZJhM^/JhM^/ZnI"aJhM^/JhM^/JhM^/JhM^/
JhOej`\)iqJhDX-JhENFk`LIZJrtYIJrtYIplUKZK$AnlK$Anlf$1>ZK'%[IK'%[I[,uu0K(+B]K(+B]
hsdH5K(FTcK(FTcK(FTcK(FTcK(GK'kjj>rK(=NaK(=Naq!s@1K'e0WK'e0Wf'TU(K'@mOK'@mO[-<2(
K&qUGK&qUGhrUZlK&D7=K&D7=^#6obK%kn3K%kn3S(m/XK%>P)K%>P)K%B_JMpd4*K$o8!K$r5uXj2OD
K$JtnK$LaKK#rVdK#rVdK#uolUr@r)K#N>\K#PFB`k[2AK"uuRK#!kkkduGYK"HWHK"HWHpq)HnK"$?@
K"$?@f!hceK!L!6K!L!6['G:dK!'^.K!'^.hl`cSJuO@$JuO@$]rB#JJu+'qJu+'qS#,>BJt[diJt[di
Jt_t5Mk#BhJt.F_Jt1D^XdOd/Jsh4YJsj!6Js:kOJs:kOJs>/WUl^1iJrkSGJrm[-`f,M.JrG;?JrH1X
k_FbFJqnr5Jqnr5pkOc\JqS`/JqS`/eqC/TJq&B%Jq&B%["![SJpW)rJpW)rhg;/BJp)`hJp)`h]lqD9
JoZH`JoZH`Rr[_2Jo?6ZJo?6ZJoCF&Me[iYJnfmPJnikOX_!)qJn9OFJn;<#Jn0IDJn0IDJn3bLJ,~>

%%EndBinary
grestore
np
416.814 130.237 mo
326.027 130.237 li
324.099 130.237 322.536 128.674 322.536 126.746 cv
322.536 126.746 li
322.536 35.9589 li
322.536 34.0303 324.099 32.4673 326.027 32.4673 cv
416.814 32.4673 li
418.742 32.4673 420.306 34.0303 420.306 35.9589 cv
420.306 35.9589 li
420.306 126.746 li
420.306 128.674 418.742 130.237 416.814 130.237 cv
323.945 121.111 mo
323.945 126.746 li
323.945 127.895 324.879 128.829 326.027 128.829 cv
416.813 128.829 li
417.962 128.829 418.897 127.895 418.897 126.746 cv
418.897 121.111 li
418.897 122.26 417.962 123.194 416.813 123.194 cv
326.027 123.194 li
324.879 123.194 323.945 122.26 323.945 121.111 cv
326.027 33.4673 mo
324.653 33.4673 323.536 34.585 323.536 35.9589 cv
323.536 71.7978 li
419.306 71.7978 li
419.306 35.9589 li
419.306 34.585 418.189 33.4673 416.814 33.4673 cv
326.027 33.4673 li
level3{
gsave
clp
[5.9867e-15 -97.7702 97.7702 5.9867e-15 371.421 130.237 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.9867e-15 -97.7702 97.7702 5.9867e-15 371.421 130.237 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
416.813 128.829 mo
326.027 128.829 li
324.879 128.829 323.945 127.895 323.945 126.746 cv
323.945 121.111 li
323.945 122.26 324.879 123.194 326.027 123.194 cv
416.813 123.194 li
417.962 123.194 418.897 122.26 418.897 121.111 cv
418.897 126.746 li
418.897 127.895 417.962 128.829 416.813 128.829 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[96.48 0 0 9.12 323.04 320.4 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 201 
/H 19 
/M[201 0 0 -19 0 19 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K"uuRK"uuRK"uuRK"uuRK"uuRK"uuRK"uuRikV8(K#*&TK#*)U!5a?)K#3,VK#3,VK#3,VK#3,VK#3,V
K#4\-K#5"6beo%MK#<2XK#?3XXMf_/K#E8ZK#E8ZK#E8ZK#F%plc"IpK#N>\K#P7=bJo.RK#WD^K#ZH_
X2T\0K#N>\K#RN(MoMp>K#WD^K#[/sQcF]uK#`J`K#`J`K#`J`K#b"6f#WHaK#iPbK#l3X[`O-CK#rVd
K$!E%QH4[!K#iPbNlZ_~>

%%EndBinary
grestore
np
419.306 71.7978 mo
323.536 71.7978 li
323.536 35.9589 li
323.536 34.585 324.653 33.4673 326.027 33.4673 cv
416.814 33.4673 li
418.189 33.4673 419.306 34.585 419.306 35.9589 cv
419.306 71.7978 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[96.96 0 0 39.84 323.04 377.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 202 
/H 83 
/M[202 0 0 -83 0 83 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)bQENW+P/K)UB$K)UB$K)UB$K)UB$K)UB$
Rf7p<[f4PMK)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L`.p&'F>K)C5uK)C5uK)C5uK)C5uK)C5uK)C5u
K)Fa.T)4uRK):/sK):/sK):/sK):/sK):/sK):/sV>K-GK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)q
r;)3EK)(#oK)(l2K)(#oK)(#oK)(#oK)(#oK)*(Ta7t8]K(srmK(srmK(srmK(srmp@sXAK(jlkK(jlk
K(jlkK(jlkK(jlkK(k`.K(l_Jc1Zb_K(afiK(afiK(afiK(afiK(afiK(afiNqW/=K(X`gK(X`gK(X`g
K(X`gK([4X]C^^IK(OZeK(OZeRe24(K(OZeK(OZeK(OZeM"LT9K(FTcK(FTcK(FTcK(FTcK(HkN_=E3K
K(=NaK(=NaK(=NaK(=NaK(=NaK(=NaRdu(#K(4H_K(4H_K(4H_K(4H_]^a&3K(+B]K(+B]K(+B]K(+B]
K(+B]K(+B]K(,#on*bksK("<[K(#u5ddD_TK'o)qK'n6YK'n6YK'n6YK'n6YK'n6YK'r-rPO3thK'e0W
K'e0WK'e0WK'e0WK'e0WK'e0WaR-V+K'\*UK'\*Ujm8T)Rd5RkK'S$SK'S$SK'S$SK'S$SK'S$SK'T9!
hWf^XK'IsQK'IsQK'IsQK'IsQhs.$%K'@mOK'@mOK'@mOK'@mORd#FfK'7gMK'7gMK'7gMK'7gM]]dE!
K'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'/B]n)f5aK'%[IK''?#dcH)BK&rH_K&qUGK&qUGK&qUGe)dgp
K&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&iunf].SDK&_ICK&ar4]AeG%K&VCAK&VCARc8qYK&VCAlJe5j
K&M=?K&M=?K&M=?K&M=?V;^:hK&D7=K&D7=_Vi8fK&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&<$SK&2+9
K&2+9K&2+9K&2+9K&4/sa5)@'K&)%7K&,,9J,~>

%%EndBinary
grestore
np
242.546 152.585 mo
214.612 152.585 li
186.886 152.585 164.33 130.029 164.33 102.303 cv
164.33 74.3687 li
164.33 46.6431 186.886 24.087 214.612 24.087 cv
242.546 24.087 li
270.272 24.087 292.828 46.6431 292.828 74.3687 cv
292.828 102.303 li
292.828 130.029 270.272 152.585 242.546 152.585 cv
214.612 24.2896 mo
187.073 24.2896 164.668 46.6943 164.668 74.2334 cv
164.668 102.078 li
164.668 129.617 187.073 152.021 214.612 152.021 cv
242.546 152.021 li
270.085 152.021 292.49 129.617 292.49 102.078 cv
292.49 74.2334 li
292.49 46.6943 270.085 24.2896 242.546 24.2896 cv
214.612 24.2896 li
1 1 1 rgb
f
242.546 152.021 mo
214.612 152.021 li
187.073 152.021 164.668 129.617 164.668 102.078 cv
164.668 74.2334 li
164.668 46.6943 187.073 24.2896 214.612 24.2896 cv
242.546 24.2896 li
270.085 24.2896 292.49 46.6943 292.49 74.2334 cv
292.49 102.078 li
292.49 129.617 270.085 152.021 242.546 152.021 cv
214.612 24.4922 mo
187.259 24.4922 165.006 46.7451 165.006 74.0982 cv
165.006 101.853 li
165.006 129.206 187.259 151.459 214.612 151.459 cv
242.546 151.459 li
269.899 151.459 292.152 129.206 292.152 101.853 cv
292.152 74.0982 li
292.152 46.7451 269.899 24.4922 242.546 24.4922 cv
214.612 24.4922 li
f
242.546 151.459 mo
214.612 151.459 li
187.259 151.459 165.006 129.206 165.006 101.853 cv
165.006 74.0982 li
165.006 46.7451 187.259 24.4922 214.612 24.4922 cv
242.546 24.4922 li
269.899 24.4922 292.152 46.7451 292.152 74.0982 cv
292.152 101.853 li
292.152 129.206 269.899 151.459 242.546 151.459 cv
214.612 24.6953 mo
187.445 24.6953 165.344 46.7964 165.344 73.9633 cv
165.344 101.627 li
165.344 128.794 187.445 150.895 214.612 150.895 cv
242.546 150.895 li
269.713 150.895 291.814 128.794 291.814 101.627 cv
291.814 73.9633 li
291.814 46.7964 269.713 24.6953 242.546 24.6953 cv
214.612 24.6953 li
f
242.546 150.895 mo
214.612 150.895 li
187.445 150.895 165.344 128.794 165.344 101.627 cv
165.344 73.9633 li
165.344 46.7964 187.445 24.6953 214.612 24.6953 cv
242.546 24.6953 li
269.713 24.6953 291.814 46.7964 291.814 73.9633 cv
291.814 101.627 li
291.814 128.794 269.713 150.895 242.546 150.895 cv
214.612 24.8979 mo
187.632 24.8979 165.682 46.8476 165.682 73.8281 cv
165.682 101.402 li
165.682 128.382 187.632 150.332 214.612 150.332 cv
242.546 150.332 li
269.526 150.332 291.477 128.382 291.477 101.402 cv
291.477 73.8281 li
291.477 46.8476 269.526 24.8979 242.546 24.8979 cv
214.612 24.8979 li
.996078 .996078 .996078 rgb
f
242.546 150.332 mo
214.612 150.332 li
187.632 150.332 165.682 128.382 165.682 101.402 cv
165.682 73.8281 li
165.682 46.8476 187.632 24.8979 214.612 24.8979 cv
242.546 24.8979 li
269.526 24.8979 291.477 46.8476 291.477 73.8281 cv
291.477 101.402 li
291.477 128.382 269.526 150.332 242.546 150.332 cv
214.612 25.1005 mo
187.818 25.1005 166.02 46.8989 166.02 73.6928 cv
166.02 101.177 li
166.02 127.971 187.818 149.769 214.612 149.769 cv
242.546 149.769 li
269.34 149.769 291.139 127.971 291.139 101.177 cv
291.139 73.6928 li
291.139 46.8989 269.34 25.1005 242.546 25.1005 cv
214.612 25.1005 li
f
242.546 149.769 mo
214.612 149.769 li
187.818 149.769 166.02 127.971 166.02 101.177 cv
166.02 73.6928 li
166.02 46.8989 187.818 25.1005 214.612 25.1005 cv
242.546 25.1005 li
269.34 25.1005 291.139 46.8989 291.139 73.6928 cv
291.139 101.177 li
291.139 127.971 269.34 149.769 242.546 149.769 cv
214.612 25.3032 mo
188.004 25.3032 166.357 46.9502 166.357 73.5576 cv
166.357 100.951 li
166.357 127.559 188.004 149.206 214.612 149.206 cv
242.546 149.206 li
269.154 149.206 290.801 127.559 290.801 100.951 cv
290.801 73.5576 li
290.801 46.9502 269.154 25.3032 242.546 25.3032 cv
214.612 25.3032 li
.992157 .992157 .992157 rgb
f
242.546 149.206 mo
214.612 149.206 li
188.004 149.206 166.357 127.559 166.357 100.951 cv
166.357 73.5576 li
166.357 46.9502 188.004 25.3032 214.612 25.3032 cv
242.546 25.3032 li
269.154 25.3032 290.801 46.9502 290.801 73.5576 cv
290.801 100.951 li
290.801 127.559 269.154 149.206 242.546 149.206 cv
214.612 25.5058 mo
188.191 25.5058 166.696 47.001 166.696 73.4223 cv
166.696 100.726 li
166.696 127.147 188.191 148.643 214.612 148.643 cv
242.546 148.643 li
268.968 148.643 290.463 127.147 290.463 100.726 cv
290.463 73.4223 li
290.463 47.001 268.968 25.5058 242.546 25.5058 cv
214.612 25.5058 li
.988235 .988235 .988235 rgb
f
242.546 148.643 mo
214.612 148.643 li
188.191 148.643 166.696 127.147 166.696 100.726 cv
166.696 73.4223 li
166.696 47.001 188.191 25.5058 214.612 25.5058 cv
242.546 25.5058 li
268.968 25.5058 290.463 47.001 290.463 73.4223 cv
290.463 100.726 li
290.463 127.147 268.968 148.643 242.546 148.643 cv
214.612 25.709 mo
188.377 25.709 167.034 47.0522 167.034 73.2871 cv
167.034 100.501 li
167.034 126.736 188.377 148.079 214.612 148.079 cv
242.546 148.079 li
268.781 148.079 290.125 126.736 290.125 100.501 cv
290.125 73.2871 li
290.125 47.0522 268.781 25.709 242.546 25.709 cv
214.612 25.709 li
.984314 .984314 .984314 rgb
f
242.546 148.079 mo
214.612 148.079 li
188.377 148.079 167.034 126.736 167.034 100.501 cv
167.034 73.2871 li
167.034 47.0522 188.377 25.709 214.612 25.709 cv
242.546 25.709 li
268.781 25.709 290.125 47.0522 290.125 73.2871 cv
290.125 100.501 li
290.125 126.736 268.781 148.079 242.546 148.079 cv
214.612 25.9116 mo
188.564 25.9116 167.372 47.1034 167.372 73.1524 cv
167.372 100.275 li
167.372 126.324 188.564 147.516 214.612 147.516 cv
242.546 147.516 li
268.595 147.516 289.787 126.324 289.787 100.275 cv
289.787 73.1524 li
289.787 47.1034 268.595 25.9116 242.546 25.9116 cv
214.612 25.9116 li
.976471 .976471 .976471 rgb
f
242.546 147.516 mo
214.612 147.516 li
188.564 147.516 167.372 126.324 167.372 100.275 cv
167.372 73.1524 li
167.372 47.1034 188.564 25.9116 214.612 25.9116 cv
242.546 25.9116 li
268.595 25.9116 289.787 47.1034 289.787 73.1524 cv
289.787 100.275 li
289.787 126.324 268.595 147.516 242.546 147.516 cv
214.612 26.1143 mo
188.749 26.1143 167.71 47.1548 167.71 73.017 cv
167.71 100.05 li
167.71 125.913 188.749 146.953 214.612 146.953 cv
242.546 146.953 li
268.409 146.953 289.449 125.913 289.449 100.05 cv
289.449 73.017 li
289.449 47.1548 268.409 26.1143 242.546 26.1143 cv
214.612 26.1143 li
.972549 .972549 .972549 rgb
f
242.546 146.953 mo
214.612 146.953 li
188.749 146.953 167.71 125.913 167.71 100.05 cv
167.71 73.017 li
167.71 47.1548 188.749 26.1143 214.612 26.1143 cv
242.546 26.1143 li
268.409 26.1143 289.449 47.1548 289.449 73.017 cv
289.449 100.05 li
289.449 125.913 268.409 146.953 242.546 146.953 cv
214.612 26.3169 mo
188.936 26.3169 168.047 47.206 168.047 72.8819 cv
168.047 99.8246 li
168.047 125.501 188.936 146.39 214.612 146.39 cv
242.546 146.39 li
268.222 146.39 289.111 125.501 289.111 99.8246 cv
289.111 72.8819 li
289.111 47.206 268.222 26.3169 242.546 26.3169 cv
214.612 26.3169 li
.964706 .964706 .964706 rgb
f
242.546 146.39 mo
214.612 146.39 li
188.936 146.39 168.047 125.501 168.047 99.8246 cv
168.047 72.8819 li
168.047 47.206 188.936 26.3169 214.612 26.3169 cv
242.546 26.3169 li
268.222 26.3169 289.111 47.206 289.111 72.8819 cv
289.111 99.8246 li
289.111 125.501 268.222 146.39 242.546 146.39 cv
214.612 26.52 mo
189.123 26.52 168.385 47.2568 168.385 72.7465 cv
168.385 99.5996 li
168.385 125.089 189.123 145.827 214.612 145.827 cv
242.546 145.827 li
268.036 145.827 288.773 125.089 288.773 99.5996 cv
288.773 72.7465 li
288.773 47.2568 268.036 26.52 242.546 26.52 cv
214.612 26.52 li
.956863 .956863 .956863 rgb
f
242.546 145.827 mo
214.612 145.827 li
189.123 145.827 168.385 125.089 168.385 99.5996 cv
168.385 72.7465 li
168.385 47.2568 189.123 26.52 214.612 26.52 cv
242.546 26.52 li
268.036 26.52 288.773 47.2568 288.773 72.7465 cv
288.773 99.5996 li
288.773 125.089 268.036 145.827 242.546 145.827 cv
214.612 26.7226 mo
189.309 26.7226 168.723 47.3082 168.723 72.6113 cv
168.723 99.3745 li
168.723 124.678 189.309 145.263 214.612 145.263 cv
242.546 145.263 li
267.85 145.263 288.435 124.678 288.435 99.3745 cv
288.435 72.6113 li
288.435 47.3082 267.85 26.7226 242.546 26.7226 cv
214.612 26.7226 li
.94902 .94902 .94902 rgb
f
242.546 145.263 mo
214.612 145.263 li
189.309 145.263 168.723 124.678 168.723 99.3745 cv
168.723 72.6113 li
168.723 47.3082 189.309 26.7226 214.612 26.7226 cv
242.546 26.7226 li
267.85 26.7226 288.435 47.3082 288.435 72.6113 cv
288.435 99.3745 li
288.435 124.678 267.85 145.263 242.546 145.263 cv
208.912 27.28 mo
186.475 30.0933 169.061 49.2894 169.061 72.476 cv
169.061 99.1489 li
169.061 124.266 189.495 144.7 214.612 144.7 cv
242.546 144.7 li
267.663 144.7 288.097 124.266 288.097 99.1489 cv
288.097 72.476 li
288.097 49.2894 270.683 30.0933 248.246 27.28 cv
246.846 27.0819 245.422 26.9558 243.98 26.9053 cv
243.504 26.8887 243.026 26.8803 242.546 26.8803 cv
214.612 26.8803 li
214.285 26.8803 213.958 26.8842 213.633 26.892 cv
212.035 26.93 210.46 27.0611 208.912 27.28 cv
.941176 .941176 .941176 rgb
f
242.546 144.7 mo
214.612 144.7 li
189.495 144.7 169.061 124.266 169.061 99.1489 cv
169.061 72.476 li
169.061 49.2894 186.475 30.0933 208.912 27.28 cv
206.284 27.6518 203.734 28.2773 201.292 29.1299 cv
182.841 34.8282 169.399 52.044 169.399 72.3413 cv
169.399 98.9239 li
169.399 123.855 189.681 144.137 214.612 144.137 cv
242.546 144.137 li
267.477 144.137 287.759 123.855 287.759 98.9239 cv
287.759 72.3413 li
287.759 52.044 274.317 34.8281 255.866 29.1298 cv
253.424 28.2772 250.874 27.6518 248.246 27.28 cv
270.683 30.0933 288.097 49.2894 288.097 72.476 cv
288.097 99.1489 li
288.097 124.266 267.663 144.7 242.546 144.7 cv
.933333 .933333 .933333 rgb
f
242.546 144.137 mo
214.612 144.137 li
189.681 144.137 169.399 123.855 169.399 98.9239 cv
169.399 72.3413 li
169.399 52.044 182.841 34.8282 201.292 29.1299 cv
199.704 29.6844 198.161 30.3348 196.67 31.0748 cv
180.83 38.0105 169.737 53.8368 169.737 72.2061 cv
169.737 98.6987 li
169.737 123.443 189.868 143.574 214.612 143.574 cv
242.546 143.574 li
267.291 143.574 287.421 123.443 287.421 98.6987 cv
287.421 72.2061 li
287.421 53.8368 276.328 38.0103 260.488 31.0746 cv
258.996 30.3346 257.454 29.6843 255.866 29.1298 cv
274.317 34.8281 287.759 52.044 287.759 72.3413 cv
287.759 98.9239 li
287.759 123.855 267.477 144.137 242.546 144.137 cv
.921569 .921569 .921569 rgb
f
242.546 143.574 mo
214.612 143.574 li
189.868 143.574 169.737 123.443 169.737 98.6987 cv
169.737 72.2061 li
169.737 53.8368 180.83 38.0105 196.67 31.0748 cv
195.421 31.6943 194.209 32.3763 193.037 33.1168 cv
179.354 40.7257 170.075 55.3355 170.075 72.0708 cv
170.075 98.4731 li
170.075 123.031 190.054 143.011 214.612 143.011 cv
242.546 143.011 li
267.104 143.011 287.083 123.031 287.083 98.4731 cv
287.083 72.0708 li
287.083 55.3355 277.804 40.7259 264.122 33.117 cv
262.95 32.3765 261.737 31.6941 260.488 31.0746 cv
276.328 38.0103 287.421 53.8368 287.421 72.2061 cv
287.421 98.6987 li
287.421 123.443 267.291 143.574 242.546 143.574 cv
.913725 .913725 .913725 rgb
f
242.546 143.011 mo
214.612 143.011 li
190.054 143.011 170.075 123.031 170.075 98.4731 cv
170.075 72.0708 li
170.075 55.3355 179.354 40.7257 193.037 33.1168 cv
191.976 33.7873 190.949 34.5044 189.957 35.2676 cv
178.175 43.2149 170.413 56.6855 170.413 71.9356 cv
170.413 98.2481 li
170.413 122.62 190.24 142.447 214.612 142.447 cv
242.546 142.447 li
266.918 142.447 286.746 122.62 286.746 98.2481 cv
286.746 71.9356 li
286.746 56.6855 278.983 43.2152 267.201 35.2679 cv
266.209 34.5046 265.183 33.7875 264.122 33.117 cv
277.804 40.7259 287.083 55.3355 287.083 72.0708 cv
287.083 98.4731 li
287.083 123.031 267.104 143.011 242.546 143.011 cv
.901961 .901961 .901961 rgb
f
242.546 142.447 mo
214.612 142.447 li
190.24 142.447 170.413 122.62 170.413 98.2481 cv
170.413 71.9356 li
170.413 56.6855 178.175 43.2149 189.957 35.2676 cv
189.026 35.9845 188.125 36.7414 187.26 37.5348 cv
177.202 45.579 170.751 57.9496 170.751 71.8002 cv
170.751 98.023 li
170.751 122.208 190.427 141.884 214.612 141.884 cv
242.546 141.884 li
266.731 141.884 286.408 122.208 286.408 98.023 cv
286.408 71.8002 li
286.408 57.9496 279.955 45.5786 269.898 37.5345 cv
269.032 36.741 268.133 35.9848 267.201 35.2679 cv
278.983 43.2152 286.746 56.6855 286.746 71.9356 cv
286.746 98.2481 li
286.746 122.62 266.918 142.447 242.546 142.447 cv
.890196 .890196 .890196 rgb
f
242.546 141.884 mo
214.612 141.884 li
190.427 141.884 170.751 122.208 170.751 98.023 cv
170.751 71.8002 li
170.751 57.9496 177.202 45.579 187.26 37.5348 cv
186.429 38.2975 185.627 39.0963 184.861 39.9251 cv
176.389 47.8713 171.088 59.1607 171.088 71.6655 cv
171.088 97.7973 li
171.088 121.796 190.613 141.321 214.612 141.321 cv
242.546 141.321 li
266.545 141.321 286.07 121.796 286.07 97.7973 cv
286.07 71.6655 li
286.07 59.1607 280.768 47.8702 272.296 39.924 cv
271.53 39.0952 270.729 38.2971 269.898 37.5345 cv
279.955 45.5786 286.408 57.9496 286.408 71.8002 cv
286.408 98.023 li
286.408 122.208 266.731 141.884 242.546 141.884 cv
.878431 .878431 .878431 rgb
f
242.546 141.321 mo
214.612 141.321 li
190.613 141.321 171.088 121.796 171.088 97.7973 cv
171.088 71.6655 li
171.088 59.1607 176.389 47.8713 184.861 39.9251 cv
184.112 40.7362 183.397 41.5759 182.715 42.4461 cv
175.706 50.1263 171.426 60.3377 171.426 71.5303 cv
171.426 97.5722 li
171.426 121.385 190.799 140.758 214.612 140.758 cv
242.546 140.758 li
266.359 140.758 285.732 121.385 285.732 97.5722 cv
285.732 71.5303 li
285.732 60.3377 281.452 50.1264 274.443 42.4461 cv
273.761 41.5759 273.045 40.7351 272.296 39.924 cv
280.768 47.8702 286.07 59.1607 286.07 71.6655 cv
286.07 97.7973 li
286.07 121.796 266.545 141.321 242.546 141.321 cv
.858823 .858823 .858823 rgb
f
242.546 140.758 mo
214.612 140.758 li
190.799 140.758 171.426 121.385 171.426 97.5722 cv
171.426 71.5303 li
171.426 60.3377 175.706 50.1263 182.715 42.4461 cv
182.042 43.3053 181.403 44.1913 180.8 45.1041 cv
175.139 52.3675 171.764 61.4939 171.764 71.395 cv
171.764 97.3467 li
171.764 120.973 190.986 140.194 214.612 140.194 cv
242.546 140.194 li
266.172 140.194 285.394 120.973 285.394 97.3467 cv
285.394 71.395 li
285.394 61.4939 282.019 52.3679 276.359 45.1045 cv
275.755 44.1918 275.116 43.3053 274.443 42.4461 cv
281.452 50.1264 285.732 60.3377 285.732 71.5303 cv
285.732 97.5722 li
285.732 121.385 266.359 140.758 242.546 140.758 cv
.847059 .847059 .847059 rgb
f
242.546 140.194 mo
214.612 140.194 li
190.986 140.194 171.764 120.973 171.764 97.3467 cv
171.764 71.395 li
171.764 61.4939 175.139 52.3675 180.8 45.1041 cv
180.197 46.0158 179.63 46.9532 179.101 47.9142 cv
174.679 54.619 172.102 62.6443 172.102 71.2598 cv
172.102 97.1216 li
172.102 120.561 191.172 139.631 214.612 139.631 cv
242.546 139.631 li
265.986 139.631 285.056 120.561 285.056 97.1216 cv
285.056 71.2598 li
285.056 62.6443 282.48 54.6191 278.057 47.9143 cv
277.528 46.9533 276.961 46.0162 276.359 45.1045 cv
282.019 52.3679 285.394 61.4939 285.394 71.395 cv
285.394 97.3467 li
285.394 120.973 266.172 140.194 242.546 140.194 cv
.831372 .831372 .831372 rgb
f
242.546 139.631 mo
214.612 139.631 li
191.172 139.631 172.102 120.561 172.102 97.1216 cv
172.102 71.2598 li
172.102 62.6443 174.679 54.619 179.101 47.9142 cv
178.568 48.8831 178.073 49.8759 177.619 50.8908 cv
174.318 56.9012 172.44 63.7968 172.44 71.1245 cv
172.44 96.8964 li
172.44 120.15 191.358 139.068 214.612 139.068 cv
242.546 139.068 li
265.8 139.068 284.718 120.15 284.718 96.8964 cv
284.718 71.1245 li
284.718 63.7982 282.84 56.9016 279.54 50.892 cv
279.086 49.8771 278.59 48.8831 278.057 47.9143 cv
282.48 54.6191 285.056 62.6443 285.056 71.2598 cv
285.056 97.1216 li
285.056 120.561 265.986 139.631 242.546 139.631 cv
.815686 .815686 .815686 rgb
f
242.546 139.068 mo
214.612 139.068 li
191.358 139.068 172.44 120.15 172.44 96.8964 cv
172.44 71.1245 li
172.44 63.7968 174.318 56.9012 177.619 50.8908 cv
177.157 51.922 176.736 52.9785 176.361 54.0529 cv
174.058 59.2329 172.778 64.9649 172.778 70.9893 cv
172.778 96.6708 li
172.778 119.738 191.545 138.505 214.612 138.505 cv
242.546 138.505 li
265.613 138.505 284.38 119.738 284.38 96.6708 cv
284.38 70.9893 li
284.38 64.9649 283.1 59.233 280.797 54.053 cv
280.422 52.9785 280.002 51.9232 279.54 50.892 cv
282.84 56.9016 284.718 63.7982 284.718 71.1245 cv
284.718 96.8964 li
284.718 120.15 265.8 139.068 242.546 139.068 cv
.803922 .803922 .803922 rgb
f
242.546 138.505 mo
214.612 138.505 li
191.545 138.505 172.778 119.738 172.778 96.6708 cv
172.778 70.9893 li
172.778 64.9649 174.058 59.2329 176.361 54.0529 cv
175.975 55.1554 175.637 56.2793 175.346 57.4226 cv
173.901 61.6367 173.116 66.1566 173.116 70.8546 cv
173.116 96.4458 li
173.116 119.327 191.731 137.942 214.612 137.942 cv
242.546 137.942 li
265.427 137.942 284.042 119.327 284.042 96.4458 cv
284.042 70.8546 li
284.042 66.1566 283.258 61.6381 281.812 57.424 cv
281.522 56.2794 281.183 55.1567 280.797 54.053 cv
283.1 59.233 284.38 64.9649 284.38 70.9893 cv
284.38 96.6708 li
284.38 119.738 265.613 138.505 242.546 138.505 cv
.780392 .780392 .780392 rgb
f
242.546 137.942 mo
214.612 137.942 li
191.731 137.942 173.116 119.327 173.116 96.4458 cv
173.116 70.8546 li
173.116 66.1566 173.901 61.6367 175.346 57.4226 cv
175.045 58.6089 174.796 59.8169 174.603 61.042 cv
173.852 64.146 173.454 67.3878 173.454 70.7192 cv
173.454 96.2207 li
173.454 118.915 191.917 137.378 214.612 137.378 cv
242.546 137.378 li
265.241 137.378 283.704 118.915 283.704 96.2207 cv
283.704 70.7192 li
283.704 67.3865 283.306 64.1439 282.555 61.0388 cv
282.361 59.815 282.113 58.6091 281.812 57.424 cv
283.258 61.6381 284.042 66.1566 284.042 70.8546 cv
284.042 96.4458 li
284.042 119.327 265.427 137.942 242.546 137.942 cv
.764706 .764706 .764706 rgb
f
242.546 137.378 mo
214.612 137.378 li
191.917 137.378 173.454 118.915 173.454 96.2207 cv
173.454 70.7192 li
173.454 67.3878 173.852 64.146 174.603 61.042 cv
174.4 62.3272 174.258 63.6294 174.179 64.9513 cv
173.924 66.7932 173.792 68.6731 173.792 70.584 cv
173.792 95.9951 li
173.792 118.503 192.104 136.815 214.612 136.815 cv
242.546 136.815 li
265.055 136.815 283.367 118.503 283.367 95.9951 cv
283.367 70.584 li
283.367 68.6717 283.234 66.7887 282.979 64.9456 cv
282.9 63.6264 282.757 62.3213 282.555 61.0388 cv
283.306 64.1439 283.704 67.3865 283.704 70.7192 cv
283.704 96.2207 li
283.704 118.915 265.241 137.378 242.546 137.378 cv
.74902 .74902 .74902 rgb
f
242.546 136.815 mo
214.612 136.815 li
192.104 136.815 173.792 118.503 173.792 95.9951 cv
173.792 70.584 li
173.792 68.6731 173.924 66.7932 174.179 64.9513 cv
174.131 65.7561 174.107 66.5682 174.107 67.3847 cv
174.107 95.3193 li
174.107 96.0909 174.129 96.8586 174.172 97.6197 cv
175.142 119.086 192.91 136.253 214.612 136.253 cv
242.546 136.253 li
264.258 136.253 282.032 119.072 282.988 97.5924 cv
283.03 96.8393 283.051 96.0827 283.051 95.3193 cv
283.051 67.3847 li
283.051 66.5654 283.027 65.753 282.979 64.9456 cv
283.234 66.7887 283.367 68.6717 283.367 70.584 cv
283.367 95.9951 li
283.367 118.503 265.055 136.815 242.546 136.815 cv
.729412 .729412 .729412 rgb
f
242.546 136.253 mo
214.612 136.253 li
192.91 136.253 175.142 119.086 174.172 97.6197 cv
175.367 118.889 193.049 135.824 214.612 135.824 cv
242.546 135.824 li
264.117 135.824 281.804 118.873 282.988 97.5924 cv
282.032 119.072 264.258 136.253 242.546 136.253 cv
.709804 .709804 .709804 rgb
f
179.694 95.3193 mo
179.694 95.3193 li
179.694 67.3847 li
179.694 48.1006 195.327 32.4673 214.612 32.4673 cv
242.546 32.4673 li
261.831 32.4673 277.464 48.1006 277.464 67.3847 cv
277.464 67.3847 li
277.464 48.1006 261.831 32.4673 242.546 32.4673 cv
214.612 32.4673 li
195.327 32.4673 179.694 48.1006 179.694 67.3853 cv
179.694 95.3193 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 228.579 135.824 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 228.579 135.824 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
242.546 135.824 mo
214.612 135.824 li
193.049 135.824 175.367 118.889 174.172 97.6197 cv
174.129 96.8586 174.107 96.0909 174.107 95.3193 cv
174.107 67.3847 li
174.107 66.5682 174.131 65.7561 174.179 64.9513 cv
174.258 63.6294 174.4 62.3272 174.603 61.042 cv
174.796 59.8169 175.045 58.6089 175.346 57.4226 cv
175.637 56.2793 175.975 55.1554 176.361 54.0529 cv
176.736 52.9785 177.157 51.922 177.619 50.8908 cv
178.073 49.8759 178.568 48.8831 179.101 47.9142 cv
179.63 46.9532 180.197 46.0158 180.8 45.1041 cv
181.403 44.1913 182.042 43.3053 182.715 42.4461 cv
183.397 41.5759 184.112 40.7362 184.861 39.9251 cv
185.627 39.0963 186.429 38.2975 187.26 37.5348 cv
188.125 36.7414 189.026 35.9845 189.957 35.2676 cv
190.949 34.5044 191.976 33.7873 193.037 33.1168 cv
194.209 32.3763 195.421 31.6943 196.67 31.0748 cv
198.161 30.3348 199.704 29.6844 201.292 29.1299 cv
203.734 28.2773 206.284 27.6518 208.912 27.28 cv
210.46 27.0611 212.035 26.93 213.633 26.892 cv
213.958 26.8842 214.285 26.8803 214.612 26.8803 cv
242.546 26.8803 li
243.026 26.8803 243.504 26.8887 243.98 26.9053 cv
245.422 26.9558 246.846 27.0819 248.246 27.28 cv
250.874 27.6518 253.424 28.2772 255.866 29.1298 cv
257.454 29.6843 258.996 30.3346 260.488 31.0746 cv
261.737 31.6941 262.95 32.3765 264.122 33.117 cv
265.183 33.7875 266.209 34.5046 267.201 35.2679 cv
268.133 35.9848 269.032 36.741 269.898 37.5345 cv
270.729 38.2971 271.53 39.0952 272.296 39.924 cv
273.045 40.7351 273.761 41.5759 274.443 42.4461 cv
275.116 43.3053 275.755 44.1918 276.359 45.1045 cv
276.961 46.0162 277.528 46.9533 278.057 47.9143 cv
278.59 48.8831 279.086 49.8771 279.54 50.892 cv
280.002 51.9232 280.422 52.9785 280.797 54.053 cv
281.183 55.1567 281.522 56.2794 281.812 57.424 cv
282.113 58.6091 282.361 59.815 282.555 61.0388 cv
282.757 62.3213 282.9 63.6264 282.979 64.9456 cv
283.027 65.753 283.051 66.5654 283.051 67.3847 cv
283.051 95.3193 li
283.051 96.0827 283.03 96.8393 282.988 97.5924 cv
281.804 118.873 264.117 135.824 242.546 135.824 cv
214.612 27.5845 mo
192.666 27.5845 174.812 45.439 174.812 67.3853 cv
174.812 95.3193 li
174.812 117.266 192.666 135.12 214.612 135.12 cv
242.546 135.12 li
264.492 135.12 282.347 117.266 282.347 95.3193 cv
282.347 67.3853 li
282.347 45.439 264.492 27.5845 242.546 27.5845 cv
214.612 27.5845 li
242.546 130.941 mo
214.612 130.941 li
194.97 130.941 178.99 114.961 178.99 95.3193 cv
178.99 67.3853 li
178.99 47.7432 194.97 31.7631 214.612 31.7631 cv
242.546 31.7631 li
262.189 31.7631 278.169 47.7432 278.169 67.3853 cv
278.169 95.3193 li
278.169 114.961 262.189 130.941 242.546 130.941 cv
179.694 95.3193 mo
179.694 95.3193 li
179.694 114.604 195.327 130.237 214.612 130.237 cv
242.546 130.237 li
261.831 130.237 277.464 114.604 277.464 95.3193 cv
277.464 67.3853 li
277.464 67.3853 li
277.464 67.3847 li
277.464 48.1006 261.831 32.4673 242.546 32.4673 cv
214.612 32.4673 li
195.327 32.4673 179.694 48.1006 179.694 67.3847 cv
179.694 95.3193 li
179.694 95.3193 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 228.579 135.824 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 228.579 135.824 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
242.546 135.12 mo
214.612 135.12 li
192.666 135.12 174.812 117.266 174.812 95.3193 cv
174.812 67.3853 li
174.812 45.439 192.666 27.5845 214.612 27.5845 cv
242.546 27.5845 li
264.492 27.5845 282.347 45.439 282.347 67.3853 cv
282.347 95.3193 li
282.347 117.266 264.492 135.12 242.546 135.12 cv
175.517 95.3193 mo
175.517 95.3193 li
175.517 116.877 193.055 134.416 214.612 134.416 cv
242.546 134.416 li
264.104 134.416 281.643 116.877 281.643 95.3193 cv
281.643 67.3853 li
281.643 67.3853 li
281.643 45.8276 264.104 28.2886 242.546 28.2886 cv
214.612 28.2886 li
193.055 28.2886 175.517 45.8276 175.517 67.3853 cv
175.517 95.3193 li
175.517 95.3193 li
242.546 131.645 mo
214.612 131.645 li
194.582 131.645 178.286 115.35 178.286 95.3193 cv
178.286 67.3853 li
178.286 47.3544 194.582 31.0585 214.612 31.0585 cv
242.546 31.0585 li
262.577 31.0585 278.874 47.3544 278.874 67.3853 cv
278.874 95.3193 li
278.874 115.35 262.577 131.645 242.546 131.645 cv
214.612 31.7631 mo
194.97 31.7631 178.99 47.7432 178.99 67.3853 cv
178.99 95.3193 li
178.99 114.961 194.97 130.941 214.612 130.941 cv
242.546 130.941 li
262.189 130.941 278.169 114.961 278.169 95.3193 cv
278.169 67.3853 li
278.169 47.7432 262.189 31.7631 242.546 31.7631 cv
214.612 31.7631 li
level3{
gsave
clp
[6.58466e-15 -107.536 107.536 6.58466e-15 228.58 135.12 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.58466e-15 -107.536 107.536 6.58466e-15 228.58 135.12 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
242.546 133.055 mo
214.612 133.055 li
193.805 133.055 176.877 116.126 176.877 95.3193 cv
176.877 67.3853 li
176.877 46.5776 193.805 29.6499 214.612 29.6499 cv
242.546 29.6499 li
263.354 29.6499 280.282 46.5776 280.282 67.3853 cv
280.282 95.3193 li
280.282 116.126 263.354 133.055 242.546 133.055 cv
214.612 31.0585 mo
194.582 31.0585 178.286 47.3544 178.286 67.3853 cv
178.286 95.3193 li
178.286 115.35 194.582 131.645 214.612 131.645 cv
242.546 131.645 li
262.577 131.645 278.874 115.35 278.874 95.3193 cv
278.874 67.3853 li
278.874 47.3544 262.577 31.0585 242.546 31.0585 cv
214.612 31.0585 li
level3{
gsave
clp
[6.4984e-15 -106.127 106.127 6.4984e-15 228.58 134.416 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.4984e-15 -106.127 106.127 6.4984e-15 228.58 134.416 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
242.546 134.416 mo
214.612 134.416 li
193.055 134.416 175.517 116.877 175.517 95.3193 cv
175.517 95.3193 li
175.517 67.3853 li
175.517 45.8276 193.055 28.2886 214.612 28.2886 cv
242.546 28.2886 li
264.104 28.2886 281.643 45.8276 281.643 67.3853 cv
281.643 67.3853 li
281.643 95.3193 li
281.643 116.877 264.104 134.416 242.546 134.416 cv
214.612 28.5709 mo
193.211 28.5709 175.798 45.9829 175.798 67.3853 cv
175.798 95.3193 li
175.798 116.722 193.211 134.134 214.612 134.134 cv
242.546 134.134 li
263.949 134.134 281.361 116.722 281.361 95.3193 cv
281.361 67.3853 li
281.361 45.9829 263.949 28.5709 242.546 28.5709 cv
214.612 28.5709 li
242.546 133.336 mo
214.612 133.336 li
193.649 133.336 176.595 116.282 176.595 95.3193 cv
176.595 67.3853 li
176.595 46.4224 193.649 29.3681 214.612 29.3681 cv
242.546 29.3681 li
263.508 29.3681 280.564 46.4224 280.564 67.3853 cv
280.564 95.3193 li
280.564 116.282 263.508 133.336 242.546 133.336 cv
214.612 29.6499 mo
193.805 29.6499 176.877 46.5776 176.877 67.3853 cv
176.877 95.3193 li
176.877 116.126 193.805 133.055 214.612 133.055 cv
242.546 133.055 li
263.354 133.055 280.282 116.126 280.282 95.3193 cv
280.282 67.3853 li
280.282 46.5776 263.354 29.6499 242.546 29.6499 cv
214.612 29.6499 li
level3{
gsave
clp
[6.4984e-15 -106.127 106.127 6.4984e-15 228.58 134.416 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.4984e-15 -106.127 106.127 6.4984e-15 228.58 134.416 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
242.546 134.134 mo
214.612 134.134 li
193.211 134.134 175.798 116.722 175.798 95.3193 cv
175.798 67.3853 li
175.798 45.9829 193.211 28.5709 214.612 28.5709 cv
242.546 28.5709 li
263.949 28.5709 281.361 45.9829 281.361 67.3853 cv
281.361 95.3193 li
281.361 116.722 263.949 134.134 242.546 134.134 cv
214.612 29.3681 mo
193.649 29.3681 176.595 46.4224 176.595 67.3853 cv
176.595 95.3193 li
176.595 116.282 193.649 133.336 214.612 133.336 cv
242.546 133.336 li
263.508 133.336 280.564 116.282 280.564 95.3193 cv
280.564 67.3853 li
280.564 46.4224 263.508 29.3681 242.546 29.3681 cv
214.612 29.3681 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[107.04 0 0 107.04 175.2 315.12 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 223 
/H 223 
/M[223 0 0 -223 0 223 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K"?QFK"?QFK"?QFK"?QFK"?QF]t24qK"HWHK"HWHS%In"K"uuRK"uuRK#%/sMo1.aK#<2XK#?0WXiH%6
K#`J`K#b7=K$/bhK$/bhK$3&pUsFY=K$T%pK$V-V`mfUiK%,D%K%-:>kgtF<K%GV+K%GV+pt(GYK%kn3
K%kn3f%[=aK&;1;K&;1;[,6JqK&_ICK&_IChrCNqK'.aKK'.aK^$!E%K'\*UK'\*US*]A-K("<[K("<[
K(&L'MtDVnK(OZeK(RXdXn[MCK(srmK(u_JK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srm
K(srmK)#-9Mt_htK(jlkK(mjjXn@;=K(X`gK(ZMDK(=NaK(=NaK(@giV!EWuK'S$SK'U,9`o)I,K&D7=
K&E-Vkg4q.K$]+rK$]+rps=r.K"$?@K"$?@f!hcDJrtYIJrtYI[#orIJmX+:JmX+:hd<0[Jl[J(Jl[J(
Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl_YIMcG@/JlRD&JlRD&JlRD&JlRD&ZrM]XJlRD&JlRD&hc6IOJlI>$
JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlK*VJl@8"Jl@8"Jl@8"Jl@8"
Jl@8"Jl@8"Jl@8"JlA.;kYd"1Jl71uJl71uJl71uJl71uJl71uJl71uJl71uZr2KRJl71uJl71uhbp7I
Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sekrPGJl%%qJl%%qZqu?NJl%%qJl%%q
Jl%%qJl%%qJl'-W`_V1^JkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJkraLJkptoJkpto
Jkt9"UeZM:JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmpeH`AJk^hkJk^hkJk^hkJk^hkJk`UHJk^hk
Jk^hkJk^hkJk^hkJk^hk]hQL?JkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiZqQ'E
JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gpe-N;JkCVeJkCVeJkCVeJkCVeJkECB
JkCVeJkCVeJkCVeJkCVeJkCVe]h6:9Jk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk=NbX[n%7Jk1Ja
Jk37>Jk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk2A%kXU4pJk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_
Jk(D_Zq#^<Jk(D_Jk(D_haaJ3Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]ejcc1
Jjk8[Jjk8[ZpfR8Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[RmlO/Jjb2YJjb2YJjb2YJjb2YJjb2Y
Jjb2YJjb2YJjct6JjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJj]<#MaE"^JjP&U
JjP&UJjP&UJjP&UZpK@2JjP&UJjP&UJjP&UJjP&UJjR.;`^,2BJjFuSJjFuSJjFuSJjFuSJjFuSJjFuS
JjFuSJjFuSJjFuSJjHb0Jj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJjB)rMa)eX
Jj4iOJj4iOJj4iOJj4iOZp0.,Jj4iOJj4iOJj4iOJj4iOJj6q5`]eu<Jj+cMJj+cMJj+cMJj+cMJj+cM
Jj+cMJj+cMeip3!Jj"]KJj"]KZos"(Jj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KRm#stJinWIJinWI
JinWIJinWIJinWIJinWIJinWIJipD&JinWIJinWIJiqpQUcX/iJieQGJieQGJieQGJieQGJieQGJieQG
JieQGJieQGJieQGJihOFXZD%pJi\KEJi^8"Ji\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi]A^kW+5T
JiSECJiSECJiSECJiSECJiSECJiSECJiSECZoN^tJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AJiJ?Apc+0jJiA9?JiA9?JiA9?JiA9?JiC%qJiA9?JiA9?JiA9?JiA9?JiA9?]f3qhJi83=Ji83=
Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Zo3LnJi/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;
Ji/-;Ji/-;Ji/-;pbdsdJi&'9Ji&'9Ji&'9Ji&'9Ji'hkJi&'9Ji&'9Ji)@AUbdTYJhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhtt6XYPJ`Jhhp5Jhj\gJhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5
Jhhp5JhifNkV7ZDJh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Zn[.eJh_j3Jh_j3h_Co\JhVd1JhVd1
JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1ehF3ZJhM^/JhM^/ZnI"aJhM^/JhM^/JhM^/JhM^/
JhOej`\)iqJhDX-JhENFk`LIZJrtYIJrtYIplUKZK$AnlK$Anlf$1>ZK'%[IK'%[I[,uu0K(+B]K(+B]
hsdH5K(FTcK(FTcK(FTcK(FTcK(GK'kjj>rK(=NaK(=Naq!s@2K'n6YK'n6Yf'][)K'@mOK'@mO[-<2(
K&qUGK&qUGhrUZlK&D7=K&D7=^#6obK%kn3K%kn3S(m/XK%>P)K%>P)K%B_JMpd4*K$o8!K$r5uXj2OD
K$JtnK$LaKK#rVdK#rVdK#uolUr@r)K#N>\K#PFB`k[2AK"uuRK#!kkkduGYK"HWHK"HWHpq)HnK"$?@
K"$?@f!hceK!L!6K!L!6['G:dK!'^.K!'^.hl`cSJuO@$JuO@$]rB#JJu+'qJu+'qS#,>BJt[diJt[di
Jt_t5Mk#BhJt.F_Jt1D^XdOd/Jsh4YJsj!6Js:kOJs:kOJs>/WUl^1iJrkSGJrm[-`f,M.JrG;?JrH1X
k_FbFJqnr5Jqnr5pkOc\JqS`/JqS`/eqC/TJq&B%Jq&B%["![SJpW)rJpW)rhg;/BJp)`hJp)`h]lqD9
JoZH`JoZH`Rr[_2Jo?6ZJo?6ZJoCF&Me[iYJnfmPJnikOX_!)qJn9OFJn;<#Jn0IDJn0IDJn3bLJ,~>

%%EndBinary
grestore
np
242.546 130.237 mo
214.612 130.237 li
195.327 130.237 179.694 114.604 179.694 95.3193 cv
179.694 95.3193 li
179.694 67.3853 li
179.694 48.1006 195.327 32.4673 214.612 32.4673 cv
242.546 32.4673 li
261.831 32.4673 277.464 48.1006 277.464 67.3853 cv
277.464 67.3853 li
277.464 95.3193 li
277.464 114.604 261.831 130.237 242.546 130.237 cv
181.103 89.6845 mo
181.103 95.3193 li
181.103 113.796 196.135 128.828 214.612 128.828 cv
242.546 128.828 li
261.024 128.828 276.056 113.796 276.056 95.3193 cv
276.056 89.6845 li
276.056 108.161 261.024 123.193 242.546 123.193 cv
214.612 123.193 li
196.135 123.193 181.103 108.161 181.103 89.6845 cv
214.612 33.4673 mo
195.909 33.4673 180.694 48.6827 180.694 67.3853 cv
180.694 71.7978 li
276.464 71.7978 li
276.464 67.3853 li
276.464 48.6827 261.249 33.4673 242.546 33.4673 cv
214.612 33.4673 li
level3{
gsave
clp
[5.9867e-15 -97.7702 97.7702 5.9867e-15 228.579 130.237 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.9867e-15 -97.7702 97.7702 5.9867e-15 228.579 130.237 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
242.546 128.828 mo
214.612 128.828 li
196.135 128.828 181.103 113.796 181.103 95.3193 cv
181.103 89.6845 li
181.103 108.161 196.135 123.193 214.612 123.193 cv
242.546 123.193 li
261.024 123.193 276.056 108.161 276.056 89.6845 cv
276.056 95.3193 li
276.056 113.796 261.024 128.828 242.546 128.828 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[96.48 0 0 40.8 180.48 320.4 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 201 
/H 85 
/M[201 0 0 -85 0 85 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhile%<K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\f
Y0)@=\&uq<K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$0P)lcOh%K$&\fK$&\fK$&\fK$&\fK$&\fK$&\f
K$&\fY0)@=K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\f
K$&\fY0)@=K$&\fK$&\fK$&\fK$&\f_TK^:K#rVdK#rVdK#rVdK#rVdK?4,9K$&\fK$&\fK$&\fK$&\f
K$&\fK$&\fY0)@=K$&\fK$&\fK$)]fXN?(9K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#uZe
X3-%:K$&\fK$&\fY0)@=K$&\fK$&\fK$&\fNQUt:K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdNlgt:K$&\fK$&\fY0)@=K$&\fK$'h1iQ6\nK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVd_o]^8K#iPbY/l49\&ce8K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdprSH8Y/l49K#iPbK#iPbK#iPbNQCh8K#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdNlgt8K#iPbK#iPbY/l4:K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdUWMH8K#iPbK#iPbK#iPbK#k+9K#iPbK#iPbK#iPbf>t&8K#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#tOEbK,:VK#iPbK#iPbK#iPbK#iPbprJB8Y/u:;K#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK$!E%QH4[!K#iPbK#iPbK#iPbK#k+9K#iPbK#iPbU<)<8K#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rYe!6Bc5K#iPbK#j_.J,~>

%%EndBinary
grestore
np
276.464 71.7978 mo
180.694 71.7978 li
180.694 67.3853 li
180.694 48.6827 195.909 33.4673 214.612 33.4673 cv
242.546 33.4673 li
261.249 33.4673 276.464 48.6827 276.464 67.3853 cv
276.464 71.7978 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[96.96 0 0 39.84 180 377.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 202 
/H 83 
/M[202 0 0 -83 0 83 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 202 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)bQENW+P/K)UB$K)UB$K)UB$K)UB$K)UB$
Rf7p<[f4PMK)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L`.p&'F>K)C5uK)C5uK)C5uK)C5uK)C5uK)C5u
K)Fa.T)4uRK):/sK):/sK):/sK):/sK):/sK):/sV>K-GK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)q
r;)3EK)(#oK)(l2K)(#oK)(#oK)(#oK)(#oK)*(Ta7t8]K(srmK(srmK(srmK(srmp@sXAK(jlkK(jlk
K(jlkK(jlkK(jlkK(k`.K(l_Jc1Zb_K(afiK(afiK(afiK(afiK(afiK(afiNqW/=K(X`gK(X`gK(X`g
K(X`gK([4X]C^^IK(OZeK(OZeRe24(K(OZeK(OZeK(OZeM"LT9K(FTcK(FTcK(FTcK(FTcK(HkN_=E3K
K(=NaK(=NaK(=NaK(=NaK(=NaK(=NaRdu(#K(4H_K(4H_K(4H_K(4H_]^a&3K(+B]K(+B]K(+B]K(+B]
K(+B]K(+B]K(,#on*bksK("<[K(#u5ddD_TK'o)qK'n6YK'n6YK'n6YK'n6YK'n6YK'r-rPO3thK'e0W
K'e0WK'e0WK'e0WK'e0WK'e0WaR-V+K'\*UK'\*Ujm8T)Rd5RkK'S$SK'S$SK'S$SK'S$SK'S$SK'T9!
hWf^XK'IsQK'IsQK'IsQK'IsQhs.$%K'@mOK'@mOK'@mOK'@mORd#FfK'7gMK'7gMK'7gMK'7gM]]dE!
K'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'/B]n)f5aK'%[IK''?#dcH)BK&rH_K&qUGK&qUGK&qUGe)dgp
K&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&iunf].SDK&_ICK&ar4]AeG%K&VCAK&VCARc8qYK&VCAlJe5j
K&M=?K&M=?K&M=?K&M=?V;^:hK&D7=K&D7=_Vi8fK&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&<$SK&2+9
K&2+9K&2+9K&2+9K&4/sa5)@'K&)%7K&,,9J,~>

%%EndBinary
grestore
np
85.7373 152.585 mo
50.3106 152.585 21.4883 123.763 21.4883 88.3359 cv
21.4883 52.9087 50.3106 24.087 85.7373 24.087 cv
121.165 24.087 149.986 52.9087 149.986 88.3359 cv
149.986 123.763 121.165 152.585 85.7373 152.585 cv
85.7373 24.2896 mo
50.4965 24.2896 21.8261 52.8696 21.8261 88.1104 cv
21.8261 123.351 50.4965 152.021 85.7373 152.021 cv
120.978 152.021 149.648 123.351 149.648 88.1104 cv
149.648 52.8696 120.978 24.2896 85.7373 24.2896 cv
1 1 1 rgb
f
85.7373 152.021 mo
50.4965 152.021 21.8261 123.351 21.8261 88.1104 cv
21.8261 52.8696 50.4965 24.2896 85.7373 24.2896 cv
120.978 24.2896 149.648 52.8696 149.648 88.1104 cv
149.648 123.351 120.978 152.021 85.7373 152.021 cv
85.7373 24.4922 mo
50.6831 24.4922 22.1641 52.831 22.1641 87.8853 cv
22.1641 122.939 50.6831 151.459 85.7373 151.459 cv
120.792 151.459 149.31 122.939 149.31 87.8853 cv
149.31 52.831 120.792 24.4922 85.7373 24.4922 cv
f
85.7373 151.459 mo
50.6831 151.459 22.1641 122.939 22.1641 87.8853 cv
22.1641 52.831 50.6831 24.4922 85.7373 24.4922 cv
120.792 24.4922 149.31 52.831 149.31 87.8853 cv
149.31 122.939 120.792 151.459 85.7373 151.459 cv
85.7373 24.6953 mo
50.8692 24.6953 22.502 52.792 22.502 87.6601 cv
22.502 122.528 50.8692 150.895 85.7373 150.895 cv
120.605 150.895 148.973 122.528 148.973 87.6601 cv
148.973 52.792 120.605 24.6953 85.7373 24.6953 cv
f
85.7373 150.895 mo
50.8692 150.895 22.502 122.528 22.502 87.6601 cv
22.502 52.792 50.8692 24.6953 85.7373 24.6953 cv
120.605 24.6953 148.973 52.792 148.973 87.6601 cv
148.973 122.528 120.605 150.895 85.7373 150.895 cv
85.7373 24.8979 mo
51.0556 24.8979 22.8403 52.7529 22.8403 87.4345 cv
22.8403 122.116 51.0556 150.332 85.7373 150.332 cv
120.419 150.332 148.635 122.116 148.635 87.4345 cv
148.635 52.7529 120.419 24.8979 85.7373 24.8979 cv
.996078 .996078 .996078 rgb
f
85.7373 150.332 mo
51.0556 150.332 22.8403 122.116 22.8403 87.4345 cv
22.8403 52.7529 51.0556 24.8979 85.7373 24.8979 cv
120.419 24.8979 148.635 52.7529 148.635 87.4345 cv
148.635 122.116 120.419 150.332 85.7373 150.332 cv
85.7373 25.1005 mo
51.2422 25.1005 23.1782 52.7138 23.1782 87.2095 cv
23.1782 121.705 51.2422 149.769 85.7373 149.769 cv
120.233 149.769 148.297 121.705 148.297 87.2095 cv
148.297 52.7138 120.233 25.1005 85.7373 25.1005 cv
f
85.7373 149.769 mo
51.2422 149.769 23.1782 121.705 23.1782 87.2095 cv
23.1782 52.7138 51.2422 25.1005 85.7373 25.1005 cv
120.233 25.1005 148.297 52.7138 148.297 87.2095 cv
148.297 121.705 120.233 149.769 85.7373 149.769 cv
85.7373 25.3032 mo
51.4283 25.3032 23.516 52.6752 23.516 86.9843 cv
23.516 121.293 51.4283 149.206 85.7373 149.206 cv
120.046 149.206 147.959 121.293 147.959 86.9843 cv
147.959 52.6752 120.046 25.3032 85.7373 25.3032 cv
.992157 .992157 .992157 rgb
f
85.7373 149.206 mo
51.4283 149.206 23.516 121.293 23.516 86.9843 cv
23.516 52.6752 51.4283 25.3032 85.7373 25.3032 cv
120.046 25.3032 147.959 52.6752 147.959 86.9843 cv
147.959 121.293 120.046 149.206 85.7373 149.206 cv
85.7373 25.5058 mo
51.6148 25.5058 23.854 52.6362 23.854 86.7587 cv
23.854 120.882 51.6148 148.643 85.7373 148.643 cv
119.86 148.643 147.621 120.882 147.621 86.7587 cv
147.621 52.6362 119.86 25.5058 85.7373 25.5058 cv
.988235 .988235 .988235 rgb
f
85.7373 148.643 mo
51.6148 148.643 23.854 120.882 23.854 86.7587 cv
23.854 52.6362 51.6148 25.5058 85.7373 25.5058 cv
119.86 25.5058 147.621 52.6362 147.621 86.7587 cv
147.621 120.882 119.86 148.643 85.7373 148.643 cv
85.7373 25.709 mo
51.8008 25.709 24.192 52.5971 24.192 86.5337 cv
24.192 120.47 51.8008 148.079 85.7373 148.079 cv
119.674 148.079 147.283 120.47 147.283 86.5337 cv
147.283 52.5971 119.674 25.709 85.7373 25.709 cv
.984314 .984314 .984314 rgb
f
85.7373 148.079 mo
51.8008 148.079 24.192 120.47 24.192 86.5337 cv
24.192 52.5971 51.8008 25.709 85.7373 25.709 cv
119.674 25.709 147.283 52.5971 147.283 86.5337 cv
147.283 120.47 119.674 148.079 85.7373 148.079 cv
85.7373 25.9116 mo
51.9873 25.9116 24.5298 52.5581 24.5298 86.3081 cv
24.5298 120.059 51.9873 147.516 85.7373 147.516 cv
119.487 147.516 146.945 120.059 146.945 86.3081 cv
146.945 52.5581 119.487 25.9116 85.7373 25.9116 cv
.976471 .976471 .976471 rgb
f
85.7373 147.516 mo
51.9873 147.516 24.5298 120.059 24.5298 86.3081 cv
24.5298 52.5581 51.9873 25.9116 85.7373 25.9116 cv
119.487 25.9116 146.945 52.5581 146.945 86.3081 cv
146.945 120.059 119.487 147.516 85.7373 147.516 cv
85.7373 26.1143 mo
52.1739 26.1143 24.8677 52.519 24.8677 86.083 cv
24.8677 119.647 52.1739 146.953 85.7373 146.953 cv
119.301 146.953 146.607 119.647 146.607 86.083 cv
146.607 52.519 119.301 26.1143 85.7373 26.1143 cv
.972549 .972549 .972549 rgb
f
85.7373 146.953 mo
52.1739 146.953 24.8677 119.647 24.8677 86.083 cv
24.8677 52.519 52.1739 26.1143 85.7373 26.1143 cv
119.301 26.1143 146.607 52.519 146.607 86.083 cv
146.607 119.647 119.301 146.953 85.7373 146.953 cv
85.7373 26.3169 mo
52.3598 26.3169 25.2055 52.4804 25.2055 85.858 cv
25.2055 119.235 52.3598 146.39 85.7373 146.39 cv
119.115 146.39 146.27 119.235 146.27 85.858 cv
146.27 52.4804 119.115 26.3169 85.7373 26.3169 cv
.964706 .964706 .964706 rgb
f
85.7373 146.39 mo
52.3598 146.39 25.2055 119.235 25.2055 85.858 cv
25.2055 52.4804 52.3598 26.3169 85.7373 26.3169 cv
119.115 26.3169 146.27 52.4804 146.27 85.858 cv
146.27 119.235 119.115 146.39 85.7373 146.39 cv
85.7373 26.52 mo
52.5464 26.52 25.5435 52.4414 25.5435 85.6323 cv
25.5435 118.824 52.5464 145.827 85.7373 145.827 cv
118.929 145.827 145.932 118.824 145.932 85.6323 cv
145.932 52.4414 118.929 26.52 85.7373 26.52 cv
.956863 .956863 .956863 rgb
f
85.7373 145.827 mo
52.5464 145.827 25.5435 118.824 25.5435 85.6323 cv
25.5435 52.4414 52.5464 26.52 85.7373 26.52 cv
118.929 26.52 145.932 52.4414 145.932 85.6323 cv
145.932 118.824 118.929 145.827 85.7373 145.827 cv
85.7373 26.7226 mo
52.7325 26.7226 25.8813 52.4023 25.8813 85.4072 cv
25.8813 118.412 52.7325 145.263 85.7373 145.263 cv
118.742 145.263 145.593 118.412 145.593 85.4072 cv
145.593 52.4023 118.742 26.7226 85.7373 26.7226 cv
.94902 .94902 .94902 rgb
f
85.7373 145.263 mo
52.7325 145.263 25.8813 118.412 25.8813 85.4072 cv
25.8813 52.4023 52.7325 26.7226 85.7373 26.7226 cv
118.742 26.7226 145.593 52.4023 145.593 85.4072 cv
145.593 118.412 118.742 145.263 85.7373 145.263 cv
79.5314 27.2316 mo
49.6181 30.2034 26.2193 54.4585 26.2193 85.1822 cv
26.2193 118.001 52.9189 144.7 85.7373 144.7 cv
118.556 144.7 145.255 118.001 145.255 85.1822 cv
145.255 54.4585 121.857 30.2035 91.9441 27.2317 cv
89.9061 26.9994 87.8364 26.8803 85.7373 26.8803 cv
83.6401 26.8803 81.5676 26.9998 79.5314 27.2316 cv
.941176 .941176 .941176 rgb
f
85.7373 144.7 mo
52.9189 144.7 26.2193 118.001 26.2193 85.1822 cv
26.2193 54.4585 49.6181 30.2034 79.5314 27.2316 cv
76.6961 27.5545 73.9275 28.0959 71.2402 28.8386 cv
45.5926 35.0231 26.5571 57.3238 26.5571 84.9566 cv
26.5571 117.589 53.1054 144.137 85.7373 144.137 cv
118.37 144.137 144.917 117.589 144.917 84.9566 cv
144.917 57.3238 125.883 35.0233 100.235 28.8388 cv
97.5497 28.0966 94.7776 27.5546 91.9441 27.2317 cv
121.857 30.2035 145.255 54.4585 145.255 85.1822 cv
145.255 118.001 118.556 144.7 85.7373 144.7 cv
.933333 .933333 .933333 rgb
f
85.7373 144.137 mo
53.1054 144.137 26.5571 117.589 26.5571 84.9566 cv
26.5571 57.3238 45.5926 35.0231 71.2402 28.8386 cv
69.5448 29.3072 67.884 29.8553 66.2588 30.4797 cv
43.3574 38.159 26.895 59.1099 26.895 84.7314 cv
26.895 117.177 53.2915 143.574 85.7373 143.574 cv
118.183 143.574 144.58 117.177 144.58 84.7314 cv
144.58 59.1099 128.119 38.1597 105.218 30.4803 cv
103.593 29.8559 101.931 29.3073 100.235 28.8388 cv
125.883 35.0233 144.917 57.3238 144.917 84.9566 cv
144.917 117.589 118.37 144.137 85.7373 144.137 cv
.921569 .921569 .921569 rgb
f
85.7373 143.574 mo
53.2915 143.574 26.895 117.177 26.895 84.7314 cv
26.895 59.1099 43.3574 38.159 66.2588 30.4797 cv
64.9327 30.9892 63.6306 31.5495 62.3565 32.1574 cv
41.7 40.7623 27.2328 60.5536 27.2328 84.5058 cv
27.2328 116.766 53.4781 143.011 85.7373 143.011 cv
117.997 143.011 144.242 116.766 144.242 84.5058 cv
144.242 60.5555 129.773 40.7638 109.119 32.1578 cv
107.845 31.5498 106.544 30.9898 105.218 30.4803 cv
128.119 38.1597 144.58 59.1099 144.58 84.7314 cv
144.58 117.177 118.183 143.574 85.7373 143.574 cv
.913725 .913725 .913725 rgb
f
85.7373 143.011 mo
53.4781 143.011 27.2328 116.766 27.2328 84.5058 cv
27.2328 60.5536 41.7 40.7623 62.3565 32.1574 cv
61.2284 32.6957 60.1218 33.2717 59.038 33.8837 cv
40.3596 43.0969 27.5708 61.8252 27.5708 84.2808 cv
27.5708 116.354 53.664 142.447 85.7373 142.447 cv
117.81 142.447 143.904 116.354 143.904 84.2808 cv
143.904 61.8272 131.116 43.0994 112.44 33.8853 cv
111.355 33.2723 110.249 32.6968 109.119 32.1578 cv
129.773 40.7638 144.242 60.5555 144.242 84.5058 cv
144.242 116.766 117.997 143.011 85.7373 143.011 cv
.901961 .901961 .901961 rgb
f
85.7373 142.447 mo
53.664 142.447 27.5708 116.354 27.5708 84.2808 cv
27.5708 61.8252 40.3596 43.0969 59.038 33.8837 cv
58.0348 34.4502 57.0513 35.0475 56.0887 35.6745 cv
39.2228 45.281 27.9088 62.9996 27.9088 84.0557 cv
27.9088 115.942 53.8506 141.884 85.7373 141.884 cv
117.624 141.884 143.566 115.942 143.566 84.0557 cv
143.566 62.9996 132.255 45.2825 115.389 35.676 cv
114.426 35.0489 113.443 34.4519 112.44 33.8853 cv
131.116 43.0994 143.904 61.8272 143.904 84.2808 cv
143.904 116.354 117.81 142.447 85.7373 142.447 cv
.890196 .890196 .890196 rgb
f
85.7373 141.884 mo
53.8506 141.884 27.9088 115.942 27.9088 84.0557 cv
27.9088 62.9996 39.2228 45.281 56.0887 35.6745 cv
55.1719 36.2716 54.2761 36.894 53.3985 37.5437 cv
38.2264 47.3771 28.2466 64.1122 28.2466 83.8301 cv
28.2466 115.531 54.0371 141.321 85.7373 141.321 cv
117.438 141.321 143.228 115.531 143.228 83.8301 cv
143.228 64.1122 133.25 47.3782 118.078 37.5447 cv
117.202 36.8961 116.304 36.2722 115.389 35.676 cv
132.255 45.2825 143.566 62.9996 143.566 84.0557 cv
143.566 115.942 117.624 141.884 85.7373 141.884 cv
.878431 .878431 .878431 rgb
f
85.7373 141.321 mo
54.0371 141.321 28.2466 115.531 28.2466 83.8301 cv
28.2466 64.1122 38.2264 47.3771 53.3985 37.5437 cv
52.5428 38.177 51.7048 38.8359 50.8884 39.5171 cv
37.3321 49.4399 28.5845 65.1974 28.5845 83.605 cv
28.5845 115.119 54.2231 140.758 85.7373 140.758 cv
117.251 140.758 142.89 115.119 142.89 83.605 cv
142.89 65.1993 134.144 49.4427 120.59 39.5197 cv
119.772 38.8373 118.935 38.1791 118.078 37.5447 cv
133.25 47.3782 143.228 64.1122 143.228 83.8301 cv
143.228 115.531 117.438 141.321 85.7373 141.321 cv
.858823 .858823 .858823 rgb
f
85.7373 140.758 mo
54.2231 140.758 28.5845 115.119 28.5845 83.605 cv
28.5845 65.1974 37.3321 49.4399 50.8884 39.5171 cv
50.076 40.1951 49.2813 40.8982 48.5098 41.6215 cv
36.5176 51.5095 28.9223 66.2798 28.9223 83.3799 cv
28.9223 114.708 54.4096 140.194 85.7373 140.194 cv
117.065 140.194 142.552 114.708 142.552 83.3799 cv
142.552 66.2798 134.959 51.5113 122.967 41.6233 cv
122.196 40.9 121.402 40.1977 120.59 39.5197 cv
134.144 49.4427 142.89 65.1993 142.89 83.605 cv
142.89 115.119 117.251 140.758 85.7373 140.758 cv
.847059 .847059 .847059 rgb
f
85.7373 140.194 mo
54.4096 140.194 28.9223 114.708 28.9223 83.3799 cv
28.9223 66.2798 36.5176 51.5095 48.5098 41.6215 cv
47.7221 42.3599 46.9585 43.1194 46.2157 43.9029 cv
35.7574 53.6343 29.2603 67.3839 29.2603 83.1543 cv
29.2603 114.296 54.5958 139.631 85.7373 139.631 cv
116.879 139.631 142.214 114.296 142.214 83.1543 cv
142.214 67.3858 135.719 53.6373 125.262 43.9061 cv
124.52 43.1225 123.755 42.3618 122.967 41.6233 cv
134.959 51.5113 142.552 66.2798 142.552 83.3799 cv
142.552 114.708 117.065 140.194 85.7373 140.194 cv
.831372 .831372 .831372 rgb
f
85.7373 139.631 mo
54.5958 139.631 29.2603 114.296 29.2603 83.1543 cv
29.2603 67.3839 35.7574 53.6343 46.2157 43.9029 cv
45.4378 44.7234 44.6854 45.5677 43.9592 46.4352 cv
35.034 55.8789 29.5987 68.5474 29.5987 82.9291 cv
29.5987 113.884 54.7822 139.068 85.7373 139.068 cv
116.692 139.068 141.876 113.884 141.876 82.9291 cv
141.876 68.5493 136.441 55.8805 127.518 46.4372 cv
126.792 45.571 126.039 44.7255 125.262 43.9061 cv
135.719 53.6373 142.214 67.3858 142.214 83.1543 cv
142.214 114.296 116.879 139.631 85.7373 139.631 cv
.815686 .815686 .815686 rgb
f
85.7373 139.068 mo
54.7822 139.068 29.5987 113.884 29.5987 82.9291 cv
29.5987 68.5474 35.034 55.8789 43.9592 46.4352 cv
43.1749 47.372 42.4214 48.3357 41.7004 49.3243 cv
34.3303 58.3233 29.9365 69.8117 29.9365 82.7041 cv
29.9365 113.473 54.9687 138.505 85.7373 138.505 cv
116.506 138.505 141.539 113.473 141.539 82.7041 cv
141.539 69.8117 137.145 58.3238 129.775 49.3248 cv
129.054 48.3363 128.302 47.374 127.518 46.4372 cv
136.441 55.8805 141.876 68.5493 141.876 82.9291 cv
141.876 113.884 116.692 139.068 85.7373 139.068 cv
.803922 .803922 .803922 rgb
f
85.7373 138.505 mo
54.9687 138.505 29.9365 113.473 29.9365 82.7041 cv
29.9365 69.8117 34.3303 58.3233 41.7004 49.3243 cv
40.885 50.4424 40.1107 51.5931 39.3806 52.7731 cv
33.6262 61.1135 30.2745 71.2546 30.2745 82.4785 cv
30.2745 113.061 55.1548 137.942 85.7373 137.942 cv
116.32 137.942 141.201 113.061 141.201 82.4785 cv
141.201 71.2546 137.85 61.1151 132.096 52.7748 cv
131.365 51.5947 130.591 50.443 129.775 49.3248 cv
137.145 58.3238 141.539 69.8117 141.539 82.7041 cv
141.539 113.473 116.506 138.505 85.7373 138.505 cv
.780392 .780392 .780392 rgb
f
85.7373 137.942 mo
55.1548 137.942 30.2745 113.061 30.2745 82.4785 cv
30.2745 71.2546 33.6262 61.1135 39.3806 52.7731 cv
38.4874 54.2166 37.6603 55.7036 36.9024 57.232 cv
32.8864 64.5636 30.6123 73.0365 30.6123 82.2534 cv
30.6123 112.649 55.3414 137.378 85.7373 137.378 cv
116.134 137.378 140.863 112.649 140.863 82.2534 cv
140.863 73.0365 138.589 64.5636 134.573 57.2321 cv
133.815 55.7036 132.989 54.2183 132.096 52.7748 cv
137.85 61.1151 141.201 71.2546 141.201 82.4785 cv
141.201 113.061 116.32 137.942 85.7373 137.942 cv
.764706 .764706 .764706 rgb
f
85.7373 137.378 mo
55.3414 137.378 30.6123 112.649 30.6123 82.2534 cv
30.6123 73.0365 32.8864 64.5636 36.9024 57.232 cv
35.8128 59.4292 34.8667 61.7108 34.0776 64.0627 cv
32.0527 69.5972 30.9502 75.6296 30.9502 82.0278 cv
30.9502 112.238 55.5273 136.815 85.7373 136.815 cv
115.947 136.815 140.525 112.238 140.525 82.0278 cv
140.525 75.6296 139.423 69.5993 137.398 64.0648 cv
136.609 61.7129 135.662 59.4293 134.573 57.2321 cv
138.589 64.5636 140.863 73.0365 140.863 82.2534 cv
140.863 112.649 116.134 137.378 85.7373 137.378 cv
.74902 .74902 .74902 rgb
f
85.7373 136.815 mo
55.5273 136.815 30.9502 112.238 30.9502 82.0278 cv
30.9502 75.6296 32.0527 69.5972 34.0776 64.0627 cv
32.2542 69.497 31.2657 75.3115 31.2657 81.352 cv
31.2657 81.352 li
31.2657 81.352 li
31.2657 82.3456 31.2924 83.3333 31.3452 84.314 cv
32.6611 113.177 56.555 136.253 85.7373 136.253 cv
114.912 136.253 138.802 113.185 140.129 84.3317 cv
140.182 83.3457 140.209 82.3511 140.209 81.352 cv
140.209 81.352 li
140.209 81.352 li
140.209 75.3115 139.222 69.4991 137.398 64.0648 cv
139.423 69.5993 140.525 75.6296 140.525 82.0278 cv
140.525 112.238 115.947 136.815 85.7373 136.815 cv
.729412 .729412 .729412 rgb
f
85.7373 136.253 mo
56.555 136.253 32.6611 113.177 31.3452 84.314 cv
32.8885 112.978 56.6953 135.824 85.7373 135.824 cv
114.774 135.824 138.577 112.988 140.129 84.3317 cv
138.802 113.185 114.912 136.253 85.7373 136.253 cv
.709804 .709804 .709804 rgb
f
85.7373 135.824 mo
55.7017 135.824 31.2657 111.388 31.2657 81.352 cv
31.2657 51.3164 55.7017 26.8803 85.7373 26.8803 cv
115.773 26.8803 140.209 51.3164 140.209 81.352 cv
140.209 111.388 115.773 135.824 85.7373 135.824 cv
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 85.7374 135.824 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 85.7374 135.824 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
85.7373 135.824 mo
56.6953 135.824 32.8885 112.978 31.3452 84.314 cv
31.2924 83.3333 31.2657 82.3456 31.2657 81.352 cv
31.2657 81.352 li
31.2657 51.3164 55.7017 26.8803 85.7373 26.8803 cv
115.773 26.8803 140.209 51.3164 140.209 81.352 cv
140.209 81.352 li
140.209 82.3511 140.182 83.3457 140.129 84.3317 cv
138.577 112.988 114.774 135.824 85.7373 135.824 cv
85.7373 27.5845 mo
56.0898 27.5845 31.9697 51.7046 31.9697 81.3526 cv
31.9697 111 56.0898 135.12 85.7373 135.12 cv
115.385 135.12 139.505 111 139.505 81.3526 cv
139.505 51.7046 115.385 27.5845 85.7373 27.5845 cv
85.7373 130.941 mo
58.3935 130.941 36.1479 108.696 36.1479 81.3526 cv
36.1479 54.0088 58.3935 31.7631 85.7373 31.7631 cv
113.081 31.7631 135.327 54.0088 135.327 81.3526 cv
135.327 108.696 113.081 130.941 85.7373 130.941 cv
36.8525 81.352 mo
36.8525 81.352 li
36.8525 108.351 58.7388 130.237 85.7373 130.237 cv
112.736 130.237 134.622 108.351 134.622 81.352 cv
134.622 81.352 li
134.622 81.352 li
134.622 54.3535 112.736 32.4673 85.7373 32.4673 cv
58.7388 32.4673 36.8525 54.3535 36.8525 81.352 cv
36.8525 81.352 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 85.7374 135.824 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 85.7374 135.824 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
85.7373 135.12 mo
56.0898 135.12 31.9697 111 31.9697 81.3526 cv
31.9697 51.7046 56.0898 27.5845 85.7373 27.5845 cv
115.385 27.5845 139.505 51.7046 139.505 81.3526 cv
139.505 111 115.385 135.12 85.7373 135.12 cv
32.6743 81.3526 mo
32.6743 81.3526 li
32.6743 110.611 56.4786 134.416 85.7373 134.416 cv
114.996 134.416 138.8 110.611 138.8 81.3526 cv
138.8 81.3526 li
138.8 81.3526 li
138.8 52.0928 114.996 28.2886 85.7373 28.2886 cv
56.4786 28.2886 32.6743 52.0928 32.6743 81.3526 cv
32.6743 81.3526 li
85.7373 131.645 mo
58.0054 131.645 35.4434 109.084 35.4434 81.3526 cv
35.4434 53.6206 58.0054 31.0585 85.7373 31.0585 cv
113.469 31.0585 136.031 53.6206 136.031 81.3526 cv
136.031 109.084 113.469 131.645 85.7373 131.645 cv
85.7373 31.7631 mo
58.3935 31.7631 36.1479 54.0088 36.1479 81.3526 cv
36.1479 108.696 58.3935 130.941 85.7373 130.941 cv
113.081 130.941 135.327 108.696 135.327 81.3526 cv
135.327 54.0088 113.081 31.7631 85.7373 31.7631 cv
level3{
gsave
clp
[6.58466e-15 -107.536 107.536 6.58466e-15 85.7373 135.12 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.58466e-15 -107.536 107.536 6.58466e-15 85.7373 135.12 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
85.7373 132.767 mo
57.3877 132.767 34.3232 109.702 34.3232 81.3526 cv
34.3232 53.0019 57.3877 29.9376 85.7373 29.9376 cv
114.087 29.9376 137.152 53.0019 137.152 81.3526 cv
137.152 109.702 114.087 132.767 85.7373 132.767 cv
85.7373 31.0585 mo
58.0054 31.0585 35.4434 53.6206 35.4434 81.3526 cv
35.4434 109.084 58.0054 131.645 85.7373 131.645 cv
113.469 131.645 136.031 109.084 136.031 81.3526 cv
136.031 53.6206 113.469 31.0585 85.7373 31.0585 cv
level3{
gsave
clp
[6.4984e-15 -106.127 106.127 6.4984e-15 85.7373 134.416 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.4984e-15 -106.127 106.127 6.4984e-15 85.7373 134.416 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
85.7373 134.416 mo
56.4786 134.416 32.6743 110.611 32.6743 81.3526 cv
32.6743 81.3526 li
32.6743 52.0928 56.4786 28.2886 85.7373 28.2886 cv
114.996 28.2886 138.8 52.0928 138.8 81.3526 cv
138.8 81.3526 li
138.8 110.611 114.996 134.416 85.7373 134.416 cv
85.7373 28.5709 mo
56.6337 28.5709 32.9561 52.2485 32.9561 81.3526 cv
32.9561 110.456 56.6337 134.134 85.7373 134.134 cv
114.841 134.134 138.518 110.456 138.518 81.3526 cv
138.518 52.2485 114.841 28.5709 85.7373 28.5709 cv
85.7373 133.049 mo
57.2324 133.049 34.041 109.857 34.041 81.3526 cv
34.041 52.8466 57.2324 29.6553 85.7373 29.6553 cv
114.242 29.6553 137.434 52.8466 137.434 81.3526 cv
137.434 109.857 114.242 133.049 85.7373 133.049 cv
85.7373 29.9376 mo
57.3877 29.9376 34.3232 53.0019 34.3232 81.3526 cv
34.3232 109.702 57.3877 132.767 85.7373 132.767 cv
114.087 132.767 137.152 109.702 137.152 81.3526 cv
137.152 53.0019 114.087 29.9376 85.7373 29.9376 cv
level3{
gsave
clp
[6.4984e-15 -106.127 106.127 6.4984e-15 85.7373 134.416 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.4984e-15 -106.127 106.127 6.4984e-15 85.7373 134.416 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
85.7373 134.134 mo
56.6337 134.134 32.9561 110.456 32.9561 81.3526 cv
32.9561 52.2485 56.6337 28.5709 85.7373 28.5709 cv
114.841 28.5709 138.518 52.2485 138.518 81.3526 cv
138.518 110.456 114.841 134.134 85.7373 134.134 cv
85.7373 29.6553 mo
57.2324 29.6553 34.041 52.8466 34.041 81.3526 cv
34.041 109.857 57.2324 133.049 85.7373 133.049 cv
114.242 133.049 137.434 109.857 137.434 81.3526 cv
137.434 52.8466 114.242 29.6553 85.7373 29.6553 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[107.04 0 0 107.04 32.16 315.12 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 223 
/H 223 
/M[223 0 0 -223 0 223 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 223 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K"?QFK"?QFK"?QFK"?QFK"?QF]t24qK"HWHK"HWHS%In"K"uuRK"uuRK#%/sMo1.aK#<2XK#?0WXiH%6
K#`J`K#b7=K$/bhK$/bhK$3&pUsFY=K$T%pK$V-V`mfUiK%,D%K%-:>kgtF<K%GV+K%GV+pt(GYK%kn3
K%kn3f%[=aK&;1;K&;1;[,6JqK&_ICK&_IChrCNqK'.aKK'.aK^$!E%K'\*UK'\*US*]A-K("<[K("<[
K(&L'MtDVnK(OZeK(RXdXn[MCK(srmK(u_JK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srm
K(srmK)#-9Mt_htK(jlkK(mjjXn@;=K(X`gK(ZMDK(=NaK(=NaK(@giV!EWuK'S$SK'U,9`o)I,K&D7=
K&E-Vkg4q.K$]+rK$]+rps=r.K"$?@K"$?@f!hcDJrtYIJrtYI[#orIJmX+:JmX+:hd<0[Jl[J(Jl[J(
Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl_YIMcG@/JlRD&JlRD&JlRD&JlRD&ZrM]XJlRD&JlRD&hc6IOJlI>$
JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlK*VJl@8"Jl@8"Jl@8"Jl@8"
Jl@8"Jl@8"Jl@8"JlA.;kYd"1Jl71uJl71uJl71uJl71uJl71uJl71uJl71uZr2KRJl71uJl71uhbp7I
Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sekrPGJl%%qJl%%qZqu?NJl%%qJl%%q
Jl%%qJl%%qJl'-W`_V1^JkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJkraLJkptoJkpto
Jkt9"UeZM:JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmpeH`AJk^hkJk^hkJk^hkJk^hkJk`UHJk^hk
Jk^hkJk^hkJk^hkJk^hk]hQL?JkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiZqQ'E
JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gpe-N;JkCVeJkCVeJkCVeJkCVeJkECB
JkCVeJkCVeJkCVeJkCVeJkCVe]h6:9Jk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk=NbX[n%7Jk1Ja
Jk37>Jk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk2A%kXU4pJk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_
Jk(D_Zq#^<Jk(D_Jk(D_haaJ3Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]ejcc1
Jjk8[Jjk8[ZpfR8Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[RmlO/Jjb2YJjb2YJjb2YJjb2YJjb2Y
Jjb2YJjb2YJjct6JjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJj]<#MaE"^JjP&U
JjP&UJjP&UJjP&UZpK@2JjP&UJjP&UJjP&UJjP&UJjR.;`^,2BJjFuSJjFuSJjFuSJjFuSJjFuSJjFuS
JjFuSJjFuSJjFuSJjHb0Jj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJjB)rMa)eX
Jj4iOJj4iOJj4iOJj4iOZp0.,Jj4iOJj4iOJj4iOJj4iOJj6q5`]eu<Jj+cMJj+cMJj+cMJj+cMJj+cM
Jj+cMJj+cMeip3!Jj"]KJj"]KZos"(Jj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KRm#stJinWIJinWI
JinWIJinWIJinWIJinWIJinWIJipD&JinWIJinWIJiqpQUcX/iJieQGJieQGJieQGJieQGJieQGJieQG
JieQGJieQGJieQGJihOFXZD%pJi\KEJi^8"Ji\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi]A^kW+5T
JiSECJiSECJiSECJiSECJiSECJiSECJiSECZoN^tJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AJiJ?Apc+0jJiA9?JiA9?JiA9?JiA9?JiC%qJiA9?JiA9?JiA9?JiA9?JiA9?]f3qhJi83=Ji83=
Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Zo3LnJi/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;
Ji/-;Ji/-;Ji/-;pbdsdJi&'9Ji&'9Ji&'9Ji&'9Ji'hkJi&'9Ji&'9Ji)@AUbdTYJhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhtt6XYPJ`Jhhp5Jhj\gJhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5
Jhhp5JhifNkV7ZDJh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Zn[.eJh_j3Jh_j3h_Co\JhVd1JhVd1
JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1ehF3ZJhM^/JhM^/ZnI"aJhM^/JhM^/JhM^/JhM^/
JhOej`\)iqJhDX-JhENFk`LIZJrtYIJrtYIplUKZK$AnlK$Anlf$1>ZK'%[IK'%[I[,uu0K(+B]K(+B]
hsdH5K(FTcK(FTcK(FTcK(FTcK(GK'kjj>rK(=NaK(=Naq!s@2K'n6YK'n6Yf'][)K'@mOK'@mO[-<2(
K&qUGK&qUGhrUZlK&D7=K&D7=^#6obK%kn3K%kn3S(m/XK%>P)K%>P)K%B_JMpd4*K$o8!K$r5uXj2OD
K$JtnK$LaKK#rVdK#rVdK#uolUr@r)K#N>\K#PFB`k[2AK"uuRK#!kkkduGYK"HWHK"HWHpq)HnK"$?@
K"$?@f!hceK!L!6K!L!6['G:dK!'^.K!'^.hl`cSJuO@$JuO@$]rB#JJu+'qJu+'qS#,>BJt[diJt[di
Jt_t5Mk#BhJt.F_Jt1D^XdOd/Jsh4YJsj!6Js:kOJs:kOJs>/WUl^1iJrkSGJrm[-`f,M.JrG;?JrH1X
k_FbFJqnr5Jqnr5pkOc\JqS`/JqS`/eqC/TJq&B%Jq&B%["![SJpW)rJpW)rhg;/BJp)`hJp)`h]lqD9
JoZH`JoZH`Rr[_2Jo?6ZJo?6ZJoCF&Me[iYJnfmPJnikOX_!)qJn9OFJn;<#Jn0IDJn0IDJn3bLJ,~>

%%EndBinary
grestore
np
85.7373 130.237 mo
58.7388 130.237 36.8525 108.351 36.8525 81.352 cv
36.8525 81.352 li
36.8525 54.3535 58.7388 32.4673 85.7373 32.4673 cv
112.736 32.4673 134.622 54.3535 134.622 81.352 cv
134.622 81.352 li
134.622 108.351 112.736 130.237 85.7373 130.237 cv
38.3515 78.5352 mo
38.2964 79.4683 38.2608 80.4063 38.2608 81.3526 cv
38.2608 107.531 59.5586 128.828 85.7373 128.828 cv
111.916 128.828 133.214 107.531 133.214 81.3526 cv
133.214 80.4063 133.178 79.4683 133.123 78.5352 cv
131.66 103.406 110.97 123.193 85.7373 123.193 cv
60.5049 123.193 39.8154 103.406 38.3515 78.5352 cv
85.7373 33.4673 mo
62.6045 33.4673 43.2524 49.9561 38.812 71.7978 cv
132.663 71.7978 li
128.223 49.9561 108.87 33.4673 85.7373 33.4673 cv
level3{
gsave
clp
[5.9867e-15 -97.7702 97.7702 5.9867e-15 85.7374 130.237 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.9867e-15 -97.7702 97.7702 5.9867e-15 85.7374 130.237 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
85.7373 128.828 mo
59.5586 128.828 38.2608 107.531 38.2608 81.3526 cv
38.2608 80.4063 38.2964 79.4683 38.3515 78.5352 cv
39.8154 103.406 60.5049 123.193 85.7373 123.193 cv
110.97 123.193 131.66 103.406 133.123 78.5352 cv
133.178 79.4683 133.214 80.4063 133.214 81.3526 cv
133.214 107.531 111.916 128.828 85.7373 128.828 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[96.48 0 0 51.84 37.44 320.4 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 201 
/H 108 
/M[201 0 0 -108 0 108 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 201 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K$T%pK$T%pK$T%pK$T%pK$V<[_9RYXK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$Jtn
Y0MXEK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$JtnK$Jtn
Y0MXEK$Jtnm*:sBK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$Anl
K$CICK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$AnlK$Anl_p-!@
K$8hjY0;LAK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hj
K$8hjY0;LAK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjK$98!ouhs1
K$/bhK$1=?K$/bhK$/bhK$/bhK$/bhK$2$S_9@MTK$8hjK$8hjK$8hjK$8hjK$8hjK$8hjUWhZ>K$/bh
K$/bhK$/bhK$1=?K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bh\BE(<K$&\fK$&\f
fZL8<K$/bhK$/bhK$1=?K$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhK$/bhmE:g<
K$&\fK$&\fK$&\fK$&\fY0)@=K$&\fK$&\fK$&\fK$&\f_TK^<K$/bhK$/bhK$/bhK$/bhK?F8;K$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fY0)@=K$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\fK$&\f
K$&\fK$&\fK$&\fK$&\fK$&\fY0)@=K$&\fK$&\fK$&\fK$&\fK$&\fK$(4<f#`NcK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdNlgt:K$&\fK$&\fY0)@=K$&\fK$&\fK$&\fK$&\f_TK^:K#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVd_o]^:K$&\fY0)@=K$&\fK$&\fK$)]fXN?(9K#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#t1;K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#t1;K#rVdK#rVdU<2B8K#iPbK#iPbK#iPbK#iPbK#lrm
Tuho.K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#t1;K#tLDbfGCWK#iPbK#lQbJ,~>

%%EndBinary
grestore
np
132.663 71.7978 mo
38.812 71.7978 li
43.2524 49.9561 62.6045 33.4673 85.7373 33.4673 cv
108.87 33.4673 128.223 49.9561 132.663 71.7978 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[95.52 0 0 39.84 37.92 377.52 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 199 
/H 83 
/M[199 0 0 -83 0 83 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 199 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 199 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 199 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&S,_^OK)UB$K)UB$K)UB$K)UB$K)UB$K)UB$
f)C:#\c0bMK)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)MeLfDL6uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5u
TD[dIK)=-rK):/sK):/sK):/sK):/sK):/sK):/s^&,hGK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)2_J
e+nUkK)(#oK)+!nK)(#oK)(#oK)(#oK)(#oK)*^f[J5@KK(srmK(srmK(srmK(ti1kkB]'K(jlkK(jlk
K(jlkK(jlkK(jlkK(mjjK(lhMb4^G\K(afiK(afiK(afiK(afiK(afiK(afiXS19=K(X`gK(X`gK(X`g
K(X`gK(\p3MtDVnK(OZeK(OZef(=RdK(OZeK(OZeK(OZeQh9Y9K(FTcK(FTcK(FTcK(FTcK(J$oT^m^*
K(=NaK(=NaK(=NaK(=NaK(=NaK(=Naf(+F_K(4H_K(4H_K(4H_K(4H_cLJ=3K(+B]K(+B]K(+B]K(+B]
K(+B]K(+B]K(-VG_XE*FK("<[K(%mkSF2!sK'q4XK'n6YK'n6YK'n6YK'n6YK'n6YL@5$-K'e0WK'e0W
K'e0WK'e0WK'e0WK'e0WK'e0Wq!F"+K'\*UK'],rjQhE`f'@qRK'S$SK'S$SK'S$SK'S$SK'S$SK'U,9
`p/0@K'IsQK'IsQK'IsQK'J6Yq<<LqK'@mOK'@mOK'@mOK'@mOf'.eMK'7gMK'7gMK'7gMK'7gMcKM\!
K'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'0u5_WHI4K'%[IK')7YSE5@aK&tSFK&qUGK&qUGK&qUGhrUZp
K&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&kA@Z/^GrK&_ICK&cXdMrK?JK&VCAK&VCAf&D;@K&VCAnD]Yj
K&M=?K&M=?K&M=?K&M=?^#?uhK&D7=K&D7=j5?TfK&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&>/:K&2+9
K&2+9K&2+9K&2+9K&4f0[G?GjK&)%7K&-(TJ,~>

%%EndBinary
grestore
np
559.656 436.66 mo
330.634 436.66 li
320.237 436.66 311.778 428.202 311.778 417.805 cv
311.778 327.019 li
311.778 316.621 320.237 308.162 330.634 308.162 cv
559.656 308.162 li
570.053 308.162 578.512 316.621 578.512 327.019 cv
578.512 417.805 li
578.512 428.202 570.053 436.66 559.656 436.66 cv
330.634 308.365 mo
320.424 308.365 312.116 316.673 312.116 326.883 cv
312.116 417.579 li
312.116 427.79 320.424 436.098 330.634 436.098 cv
559.656 436.098 li
569.866 436.098 578.174 427.79 578.174 417.579 cv
578.174 326.883 li
578.174 316.673 569.866 308.365 559.656 308.365 cv
330.634 308.365 li
1 1 1 rgb
f
559.656 436.098 mo
330.634 436.098 li
320.424 436.098 312.116 427.79 312.116 417.579 cv
312.116 326.883 li
312.116 316.673 320.424 308.365 330.634 308.365 cv
559.656 308.365 li
569.866 308.365 578.174 316.673 578.174 326.883 cv
578.174 417.579 li
578.174 427.79 569.866 436.098 559.656 436.098 cv
330.634 308.568 mo
320.61 308.568 312.454 316.724 312.454 326.748 cv
312.454 417.354 li
312.454 427.379 320.61 435.534 330.634 435.534 cv
559.656 435.534 li
569.681 435.534 577.836 427.379 577.836 417.354 cv
577.836 326.748 li
577.836 316.724 569.681 308.568 559.656 308.568 cv
330.634 308.568 li
f
559.656 435.534 mo
330.634 435.534 li
320.61 435.534 312.454 427.379 312.454 417.354 cv
312.454 326.748 li
312.454 316.724 320.61 308.568 330.634 308.568 cv
559.656 308.568 li
569.681 308.568 577.836 316.724 577.836 326.748 cv
577.836 417.354 li
577.836 427.379 569.681 435.534 559.656 435.534 cv
330.634 308.771 mo
320.796 308.771 312.792 316.774 312.792 326.612 cv
312.792 417.129 li
312.792 426.967 320.796 434.971 330.634 434.971 cv
559.656 434.971 li
569.494 434.971 577.498 426.967 577.498 417.129 cv
577.498 326.612 li
577.498 316.774 569.494 308.771 559.656 308.771 cv
330.634 308.771 li
f
559.656 434.971 mo
330.634 434.971 li
320.796 434.971 312.792 426.967 312.792 417.129 cv
312.792 326.612 li
312.792 316.774 320.796 308.771 330.634 308.771 cv
559.656 308.771 li
569.494 308.771 577.498 316.774 577.498 326.612 cv
577.498 417.129 li
577.498 426.967 569.494 434.971 559.656 434.971 cv
330.634 308.974 mo
320.982 308.974 313.13 316.826 313.13 326.478 cv
313.13 416.903 li
313.13 426.556 320.982 434.407 330.634 434.407 cv
559.656 434.407 li
569.308 434.407 577.16 426.556 577.16 416.903 cv
577.16 326.478 li
577.16 316.826 569.308 308.974 559.656 308.974 cv
330.634 308.974 li
.996078 .996078 .996078 rgb
f
559.656 434.407 mo
330.634 434.407 li
320.982 434.407 313.13 426.556 313.13 416.903 cv
313.13 326.478 li
313.13 316.826 320.982 308.974 330.634 308.974 cv
559.656 308.974 li
569.308 308.974 577.16 316.826 577.16 326.478 cv
577.16 416.903 li
577.16 426.556 569.308 434.407 559.656 434.407 cv
330.634 309.176 mo
321.169 309.176 313.468 316.877 313.468 326.343 cv
313.468 416.679 li
313.468 426.144 321.169 433.845 330.634 433.845 cv
559.656 433.845 li
569.121 433.845 576.822 426.144 576.822 416.679 cv
576.822 326.343 li
576.822 316.877 569.121 309.176 559.656 309.176 cv
330.634 309.176 li
f
559.656 433.845 mo
330.634 433.845 li
321.169 433.845 313.468 426.144 313.468 416.679 cv
313.468 326.343 li
313.468 316.877 321.169 309.176 330.634 309.176 cv
559.656 309.176 li
569.121 309.176 576.822 316.877 576.822 326.343 cv
576.822 416.679 li
576.822 426.144 569.121 433.845 559.656 433.845 cv
330.634 309.379 mo
321.355 309.379 313.806 316.928 313.806 326.207 cv
313.806 416.453 li
313.806 425.732 321.355 433.281 330.634 433.281 cv
559.656 433.281 li
568.934 433.281 576.484 425.732 576.484 416.453 cv
576.484 326.207 li
576.484 316.928 568.934 309.379 559.656 309.379 cv
330.634 309.379 li
.992157 .992157 .992157 rgb
f
559.656 433.281 mo
330.634 433.281 li
321.355 433.281 313.806 425.732 313.806 416.453 cv
313.806 326.207 li
313.806 316.928 321.355 309.379 330.634 309.379 cv
559.656 309.379 li
568.934 309.379 576.484 316.928 576.484 326.207 cv
576.484 416.453 li
576.484 425.732 568.934 433.281 559.656 433.281 cv
330.634 309.582 mo
321.541 309.582 314.144 316.979 314.144 326.072 cv
314.144 416.227 li
314.144 425.32 321.541 432.718 330.634 432.718 cv
559.656 432.718 li
568.749 432.718 576.146 425.32 576.146 416.227 cv
576.146 326.072 li
576.146 316.979 568.749 309.582 559.656 309.582 cv
330.634 309.582 li
.988235 .988235 .988235 rgb
f
559.656 432.718 mo
330.634 432.718 li
321.541 432.718 314.144 425.32 314.144 416.227 cv
314.144 326.072 li
314.144 316.979 321.541 309.582 330.634 309.582 cv
559.656 309.582 li
568.749 309.582 576.146 316.979 576.146 326.072 cv
576.146 416.227 li
576.146 425.32 568.749 432.718 559.656 432.718 cv
330.634 309.784 mo
321.728 309.784 314.481 317.03 314.481 325.937 cv
314.481 416.003 li
314.481 424.909 321.728 432.155 330.634 432.155 cv
559.656 432.155 li
568.562 432.155 575.809 424.909 575.809 416.003 cv
575.809 325.937 li
575.809 317.03 568.562 309.784 559.656 309.784 cv
330.634 309.784 li
.984314 .984314 .984314 rgb
f
559.656 432.155 mo
330.634 432.155 li
321.728 432.155 314.481 424.909 314.481 416.003 cv
314.481 325.937 li
314.481 317.03 321.728 309.784 330.634 309.784 cv
559.656 309.784 li
568.562 309.784 575.809 317.03 575.809 325.937 cv
575.809 416.003 li
575.809 424.909 568.562 432.155 559.656 432.155 cv
330.634 309.987 mo
321.914 309.987 314.819 317.082 314.819 325.802 cv
314.819 415.777 li
314.819 424.497 321.914 431.592 330.634 431.592 cv
559.656 431.592 li
568.376 431.592 575.471 424.497 575.471 415.777 cv
575.471 325.802 li
575.471 317.082 568.376 309.987 559.656 309.987 cv
330.634 309.987 li
.976471 .976471 .976471 rgb
f
559.656 431.592 mo
330.634 431.592 li
321.914 431.592 314.819 424.497 314.819 415.777 cv
314.819 325.802 li
314.819 317.082 321.914 309.987 330.634 309.987 cv
559.656 309.987 li
568.376 309.987 575.471 317.082 575.471 325.802 cv
575.471 415.777 li
575.471 424.497 568.376 431.592 559.656 431.592 cv
330.634 310.19 mo
322.101 310.19 315.157 317.133 315.157 325.667 cv
315.157 415.552 li
315.157 424.086 322.101 431.028 330.634 431.028 cv
559.656 431.028 li
568.189 431.028 575.133 424.086 575.133 415.552 cv
575.133 325.667 li
575.133 317.133 568.189 310.19 559.656 310.19 cv
330.634 310.19 li
.972549 .972549 .972549 rgb
f
559.656 431.028 mo
330.634 431.028 li
322.101 431.028 315.157 424.086 315.157 415.552 cv
315.157 325.667 li
315.157 317.133 322.101 310.19 330.634 310.19 cv
559.656 310.19 li
568.189 310.19 575.133 317.133 575.133 325.667 cv
575.133 415.552 li
575.133 424.086 568.189 431.028 559.656 431.028 cv
330.634 310.393 mo
322.287 310.393 315.496 317.184 315.496 325.531 cv
315.496 415.327 li
315.496 423.674 322.287 430.465 330.634 430.465 cv
559.656 430.465 li
568.003 430.465 574.795 423.674 574.795 415.327 cv
574.795 325.531 li
574.795 317.184 568.003 310.393 559.656 310.393 cv
330.634 310.393 li
.964706 .964706 .964706 rgb
f
559.656 430.465 mo
330.634 430.465 li
322.287 430.465 315.496 423.674 315.496 415.327 cv
315.496 325.531 li
315.496 317.184 322.287 310.393 330.634 310.393 cv
559.656 310.393 li
568.003 310.393 574.795 317.184 574.795 325.531 cv
574.795 415.327 li
574.795 423.674 568.003 430.465 559.656 430.465 cv
330.634 310.596 mo
322.473 310.596 315.834 317.235 315.834 325.396 cv
315.834 415.102 li
315.834 423.263 322.473 429.902 330.634 429.902 cv
559.656 429.902 li
567.817 429.902 574.457 423.263 574.457 415.102 cv
574.457 325.396 li
574.457 317.235 567.817 310.596 559.656 310.596 cv
330.634 310.596 li
.956863 .956863 .956863 rgb
f
559.656 429.902 mo
330.634 429.902 li
322.473 429.902 315.834 423.263 315.834 415.102 cv
315.834 325.396 li
315.834 317.235 322.473 310.596 330.634 310.596 cv
559.656 310.596 li
567.817 310.596 574.457 317.235 574.457 325.396 cv
574.457 415.102 li
574.457 423.263 567.817 429.902 559.656 429.902 cv
330.634 310.798 mo
322.659 310.798 316.172 317.286 316.172 325.261 cv
316.172 414.876 li
316.172 422.851 322.659 429.339 330.634 429.339 cv
559.656 429.339 li
567.631 429.339 574.119 422.851 574.119 414.876 cv
574.119 325.261 li
574.119 317.286 567.631 310.798 559.656 310.798 cv
330.634 310.798 li
.94902 .94902 .94902 rgb
f
559.656 429.339 mo
330.634 429.339 li
322.659 429.339 316.172 422.851 316.172 414.876 cv
316.172 325.261 li
316.172 317.286 322.659 310.798 330.634 310.798 cv
559.656 310.798 li
567.631 310.798 574.119 317.286 574.119 325.261 cv
574.119 414.876 li
574.119 422.851 567.631 429.339 559.656 429.339 cv
329.129 311.081 mo
322.046 311.834 316.51 317.846 316.51 325.126 cv
316.51 414.651 li
316.51 422.439 322.846 428.775 330.634 428.775 cv
559.656 428.775 li
567.444 428.775 573.78 422.439 573.78 414.651 cv
573.78 325.126 li
573.78 317.846 568.244 311.834 561.161 311.081 cv
560.671 310.999 560.169 310.956 559.656 310.956 cv
330.634 310.956 li
330.121 310.956 329.619 310.999 329.129 311.081 cv
.941176 .941176 .941176 rgb
f
559.656 428.775 mo
330.634 428.775 li
322.846 428.775 316.51 422.439 316.51 414.651 cv
316.51 325.126 li
316.51 317.846 322.046 311.834 329.129 311.081 cv
328.443 311.196 327.782 311.388 327.156 311.648 cv
321.233 313.193 316.848 318.589 316.848 324.99 cv
316.848 414.426 li
316.848 422.027 323.032 428.213 330.634 428.213 cv
559.656 428.213 li
567.258 428.213 573.442 422.027 573.442 414.426 cv
573.442 324.99 li
573.442 318.589 569.057 313.193 563.134 311.648 cv
562.508 311.388 561.847 311.196 561.161 311.081 cv
568.244 311.834 573.78 317.846 573.78 325.126 cv
573.78 414.651 li
573.78 422.439 567.444 428.775 559.656 428.775 cv
.933333 .933333 .933333 rgb
f
559.656 428.213 mo
330.634 428.213 li
323.032 428.213 316.848 422.027 316.848 414.426 cv
316.848 324.99 li
316.848 318.589 321.233 313.193 327.156 311.648 cv
326.757 311.814 326.372 312.009 326.003 312.228 cv
320.862 314.119 317.186 319.066 317.186 324.856 cv
317.186 414.2 li
317.186 421.616 323.219 427.649 330.634 427.649 cv
559.656 427.649 li
567.072 427.649 573.104 421.616 573.104 414.2 cv
573.104 324.856 li
573.104 319.066 569.427 314.119 564.286 312.228 cv
563.918 312.008 563.533 311.814 563.134 311.648 cv
569.057 313.193 573.442 318.589 573.442 324.99 cv
573.442 414.426 li
573.442 422.027 567.258 428.213 559.656 428.213 cv
.921569 .921569 .921569 rgb
f
559.656 427.649 mo
330.634 427.649 li
323.219 427.649 317.186 421.616 317.186 414.2 cv
317.186 324.856 li
317.186 319.066 320.862 314.119 326.003 312.228 cv
325.698 312.41 325.404 312.609 325.122 312.825 cv
320.639 314.911 317.523 319.459 317.523 324.721 cv
317.523 413.975 li
317.523 421.204 323.404 427.086 330.634 427.086 cv
559.656 427.086 li
566.886 427.086 572.767 421.204 572.767 413.975 cv
572.767 324.721 li
572.767 319.459 569.651 314.911 565.168 312.825 cv
564.886 312.609 564.592 312.41 564.286 312.228 cv
569.427 314.119 573.104 319.066 573.104 324.856 cv
573.104 414.2 li
573.104 421.616 567.072 427.649 559.656 427.649 cv
.913725 .913725 .913725 rgb
f
559.656 427.086 mo
330.634 427.086 li
323.404 427.086 317.523 421.204 317.523 413.975 cv
317.523 324.721 li
317.523 319.459 320.639 314.911 325.122 312.825 cv
324.872 313.016 324.633 313.221 324.404 313.436 cv
320.503 315.625 317.861 319.803 317.861 324.585 cv
317.861 413.75 li
317.861 420.793 323.591 426.523 330.634 426.523 cv
559.656 426.523 li
566.699 426.523 572.429 420.793 572.429 413.75 cv
572.429 324.585 li
572.429 319.803 569.787 315.625 565.886 313.436 cv
565.658 313.221 565.418 313.016 565.168 312.825 cv
569.651 314.911 572.767 319.459 572.767 324.721 cv
572.767 413.975 li
572.767 421.204 566.886 427.086 559.656 427.086 cv
.901961 .901961 .901961 rgb
f
559.656 426.523 mo
330.634 426.523 li
323.591 426.523 317.861 420.793 317.861 413.75 cv
317.861 324.585 li
317.861 319.803 320.503 315.625 324.404 313.436 cv
324.192 313.637 323.99 313.847 323.797 314.067 cv
320.427 316.294 318.199 320.117 318.199 324.45 cv
318.199 413.524 li
318.199 420.381 323.777 425.96 330.634 425.96 cv
559.656 425.96 li
566.513 425.96 572.091 420.381 572.091 413.524 cv
572.091 324.45 li
572.091 320.117 569.863 316.294 566.493 314.067 cv
566.3 313.847 566.098 313.637 565.886 313.436 cv
569.787 315.625 572.429 319.803 572.429 324.585 cv
572.429 413.75 li
572.429 420.793 566.699 426.523 559.656 426.523 cv
.890196 .890196 .890196 rgb
f
559.656 425.96 mo
330.634 425.96 li
323.777 425.96 318.199 420.381 318.199 413.524 cv
318.199 324.45 li
318.199 320.117 320.427 316.294 323.797 314.067 cv
323.616 314.275 323.443 314.491 323.281 314.715 cv
320.399 316.928 318.537 320.408 318.537 324.314 cv
318.537 413.299 li
318.537 419.97 323.964 425.396 330.634 425.396 cv
559.656 425.396 li
566.326 425.396 571.753 419.97 571.753 413.299 cv
571.753 324.314 li
571.753 320.408 569.891 316.928 567.009 314.715 cv
566.847 314.491 566.674 314.275 566.493 314.067 cv
569.863 316.294 572.091 320.117 572.091 324.45 cv
572.091 413.524 li
572.091 420.381 566.513 425.96 559.656 425.96 cv
.878431 .878431 .878431 rgb
f
559.656 425.396 mo
330.634 425.396 li
323.964 425.396 318.537 419.97 318.537 413.299 cv
318.537 324.314 li
318.537 320.408 320.399 316.928 323.281 314.715 cv
323.126 314.929 322.979 315.151 322.842 315.379 cv
320.41 317.535 318.875 320.681 318.875 324.18 cv
318.875 413.074 li
318.875 419.558 324.15 424.833 330.634 424.833 cv
559.656 424.833 li
566.141 424.833 571.415 419.558 571.415 413.074 cv
571.415 324.18 li
571.415 320.681 569.88 317.535 567.448 315.379 cv
567.311 315.151 567.164 314.929 567.009 314.715 cv
569.891 316.928 571.753 320.408 571.753 324.314 cv
571.753 413.299 li
571.753 419.97 566.326 425.396 559.656 425.396 cv
.858823 .858823 .858823 rgb
f
559.656 424.833 mo
330.634 424.833 li
324.15 424.833 318.875 419.558 318.875 413.074 cv
318.875 324.18 li
318.875 320.681 320.41 317.535 322.842 315.379 cv
322.709 315.602 322.585 315.831 322.47 316.065 cv
320.456 318.125 319.213 320.943 319.213 324.045 cv
319.213 412.849 li
319.213 419.147 324.336 424.271 330.634 424.271 cv
559.656 424.271 li
565.954 424.271 571.077 419.147 571.077 412.849 cv
571.077 324.045 li
571.077 320.943 569.834 318.125 567.82 316.065 cv
567.705 315.83 567.581 315.602 567.448 315.379 cv
569.88 317.535 571.415 320.681 571.415 324.18 cv
571.415 413.074 li
571.415 419.558 566.141 424.833 559.656 424.833 cv
.847059 .847059 .847059 rgb
f
559.656 424.271 mo
330.634 424.271 li
324.336 424.271 319.213 419.147 319.213 412.849 cv
319.213 324.045 li
319.213 320.943 320.456 318.125 322.47 316.065 cv
322.358 316.295 322.255 316.53 322.162 316.771 cv
320.534 318.7 319.551 321.192 319.551 323.909 cv
319.551 412.623 li
319.551 418.734 324.523 423.707 330.634 423.707 cv
559.656 423.707 li
565.768 423.707 570.739 418.734 570.739 412.623 cv
570.739 323.909 li
570.739 321.192 569.757 318.701 568.128 316.771 cv
568.035 316.53 567.932 316.295 567.82 316.065 cv
569.834 318.125 571.077 320.943 571.077 324.045 cv
571.077 412.849 li
571.077 419.147 565.954 424.271 559.656 424.271 cv
.831372 .831372 .831372 rgb
f
559.656 423.707 mo
330.634 423.707 li
324.523 423.707 319.551 418.734 319.551 412.623 cv
319.551 323.909 li
319.551 321.192 320.534 318.7 322.162 316.771 cv
322.07 317.009 321.988 317.252 321.916 317.499 cv
320.641 319.266 319.889 321.434 319.889 323.774 cv
319.889 412.398 li
319.889 418.323 324.709 423.144 330.634 423.144 cv
559.656 423.144 li
565.581 423.144 570.401 418.323 570.401 412.398 cv
570.401 323.774 li
570.401 321.434 569.649 319.266 568.374 317.499 cv
568.302 317.252 568.22 317.009 568.128 316.771 cv
569.757 318.701 570.739 321.192 570.739 323.909 cv
570.739 412.623 li
570.739 418.734 565.768 423.707 559.656 423.707 cv
.815686 .815686 .815686 rgb
f
559.656 423.144 mo
330.634 423.144 li
324.709 423.144 319.889 418.323 319.889 412.398 cv
319.889 323.774 li
319.889 321.434 320.641 319.266 321.916 317.499 cv
321.844 317.746 321.782 317.998 321.731 318.254 cv
320.777 319.826 320.227 321.669 320.227 323.639 cv
320.227 412.173 li
320.227 417.912 324.895 422.581 330.634 422.581 cv
559.656 422.581 li
565.394 422.581 570.063 417.912 570.063 412.173 cv
570.063 323.639 li
570.063 321.669 569.514 319.826 568.559 318.254 cv
568.508 317.998 568.446 317.747 568.374 317.499 cv
569.649 319.266 570.401 321.434 570.401 323.774 cv
570.401 412.398 li
570.401 418.323 565.581 423.144 559.656 423.144 cv
.803922 .803922 .803922 rgb
f
559.656 422.581 mo
330.634 422.581 li
324.895 422.581 320.227 417.912 320.227 412.173 cv
320.227 323.639 li
320.227 321.669 320.777 319.826 321.731 318.254 cv
321.68 318.511 321.639 318.772 321.61 319.037 cv
320.941 320.384 320.564 321.901 320.564 323.504 cv
320.564 411.947 li
320.564 417.5 325.081 422.018 330.634 422.018 cv
559.656 422.018 li
565.209 422.018 569.726 417.5 569.726 411.947 cv
569.726 323.504 li
569.726 321.901 569.349 320.384 568.68 319.037 cv
568.651 318.773 568.611 318.511 568.559 318.254 cv
569.514 319.826 570.063 321.669 570.063 323.639 cv
570.063 412.173 li
570.063 417.912 565.394 422.581 559.656 422.581 cv
.780392 .780392 .780392 rgb
f
559.656 422.018 mo
330.634 422.018 li
325.081 422.018 320.564 417.5 320.564 411.947 cv
320.564 323.504 li
320.564 321.901 320.941 320.384 321.61 319.037 cv
321.58 319.307 321.563 319.581 321.557 319.858 cv
321.134 320.947 320.902 322.132 320.902 323.369 cv
320.902 411.723 li
320.902 417.089 325.268 421.454 330.634 421.454 cv
559.656 421.454 li
565.022 421.454 569.388 417.089 569.388 411.723 cv
569.388 323.369 li
569.388 322.132 569.156 320.948 568.733 319.858 cv
568.727 319.581 568.71 319.308 568.68 319.037 cv
569.349 320.384 569.726 321.901 569.726 323.504 cv
569.726 411.947 li
569.726 417.5 565.209 422.018 559.656 422.018 cv
.764706 .764706 .764706 rgb
f
559.656 421.454 mo
330.634 421.454 li
325.268 421.454 320.902 417.089 320.902 411.723 cv
320.902 323.369 li
320.902 322.132 321.134 320.947 321.557 319.858 cv
321.556 319.916 321.556 319.975 321.556 320.034 cv
321.556 320.815 li
321.35 321.587 321.24 322.398 321.24 323.233 cv
321.24 411.497 li
321.24 416.677 325.454 420.891 330.634 420.891 cv
559.656 420.891 li
564.836 420.891 569.05 416.677 569.05 411.497 cv
569.05 323.233 li
569.05 322.398 568.94 321.587 568.734 320.815 cv
568.734 320.034 li
568.734 320.034 li
568.734 319.975 568.734 319.917 568.733 319.858 cv
569.156 320.948 569.388 322.132 569.388 323.369 cv
569.388 411.723 li
569.388 417.089 565.022 421.454 559.656 421.454 cv
.74902 .74902 .74902 rgb
f
559.656 420.891 mo
330.634 420.891 li
325.454 420.891 321.24 416.677 321.24 411.497 cv
321.24 323.233 li
321.24 322.398 321.35 321.587 321.556 320.815 cv
321.556 410.821 li
321.556 410.821 li
321.556 411.05 321.564 411.277 321.581 411.502 cv
321.704 416.39 325.718 420.328 330.634 420.328 cv
559.656 420.328 li
564.571 420.328 568.585 416.392 568.709 411.505 cv
568.726 411.279 568.734 411.051 568.734 410.821 cv
568.734 320.815 li
568.94 321.587 569.05 322.398 569.05 323.233 cv
569.05 411.497 li
569.05 416.677 564.836 420.891 559.656 420.891 cv
.729412 .729412 .729412 rgb
f
559.656 420.328 mo
330.634 420.328 li
325.718 420.328 321.704 416.39 321.581 411.502 cv
321.93 416.191 325.857 419.899 330.634 419.899 cv
559.656 419.899 li
564.432 419.899 568.358 416.193 568.709 411.505 cv
568.585 416.392 564.571 420.328 559.656 420.328 cv
.709804 .709804 .709804 rgb
f
330.634 419.899 mo
325.628 419.899 321.556 415.827 321.556 410.821 cv
321.556 320.034 li
321.556 315.028 325.628 310.956 330.634 310.956 cv
559.656 310.956 li
564.662 310.956 568.734 315.028 568.734 320.034 cv
568.734 410.821 li
568.734 415.827 564.662 419.899 559.656 419.899 cv
330.634 419.899 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 445.145 419.9 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 445.145 419.9 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
559.656 419.899 mo
330.634 419.899 li
325.857 419.899 321.93 416.191 321.581 411.502 cv
321.564 411.277 321.556 411.05 321.556 410.821 cv
321.556 410.821 li
321.556 320.034 li
321.556 315.028 325.628 310.956 330.634 310.956 cv
559.656 310.956 li
564.662 310.956 568.734 315.028 568.734 320.034 cv
568.734 320.034 li
568.734 320.815 li
568.734 410.821 li
568.734 411.051 568.726 411.279 568.709 411.505 cv
568.358 416.193 564.432 419.899 559.656 419.899 cv
330.635 311.66 mo
326.017 311.66 322.26 315.417 322.26 320.034 cv
322.26 410.821 li
322.26 415.438 326.017 419.195 330.635 419.195 cv
559.655 419.195 li
564.273 419.195 568.031 415.438 568.031 410.821 cv
568.031 320.034 li
568.031 315.417 564.273 311.66 559.655 311.66 cv
330.635 311.66 li
559.655 415.017 mo
330.635 415.017 li
328.32 415.017 326.437 413.135 326.437 410.821 cv
326.437 320.034 li
326.437 317.721 328.32 315.839 330.635 315.839 cv
559.655 315.839 li
561.97 315.839 563.852 317.721 563.852 320.034 cv
563.852 410.821 li
563.852 413.135 561.97 415.017 559.655 415.017 cv
327.143 410.821 mo
327.143 410.821 li
327.143 412.75 328.706 414.313 330.634 414.313 cv
559.656 414.313 li
561.584 414.313 563.147 412.75 563.147 410.821 cv
563.147 320.034 li
563.147 320.034 li
563.147 318.106 561.584 316.543 559.656 316.543 cv
330.634 316.543 li
328.706 316.543 327.143 318.106 327.143 320.034 cv
327.143 410.821 li
327.143 410.821 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 445.145 419.9 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 445.145 419.9 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
559.655 419.195 mo
330.635 419.195 li
326.017 419.195 322.26 415.438 322.26 410.821 cv
322.26 320.034 li
322.26 315.417 326.017 311.66 330.635 311.66 cv
559.655 311.66 li
564.273 311.66 568.031 315.417 568.031 320.034 cv
568.031 410.821 li
568.031 415.438 564.273 419.195 559.655 419.195 cv
322.964 410.821 mo
322.964 410.821 li
322.964 415.051 326.404 418.491 330.635 418.491 cv
559.655 418.491 li
563.886 418.491 567.326 415.051 567.326 410.821 cv
567.326 320.034 li
567.326 320.034 li
567.326 315.805 563.886 312.364 559.655 312.364 cv
330.635 312.364 li
326.404 312.364 322.964 315.805 322.964 320.034 cv
322.964 410.821 li
322.964 410.821 li
559.655 415.722 mo
330.635 415.722 li
327.932 415.722 325.733 413.523 325.733 410.821 cv
325.733 320.034 li
325.733 317.333 327.932 315.135 330.635 315.135 cv
559.655 315.135 li
562.357 315.135 564.556 317.333 564.556 320.034 cv
564.556 410.821 li
564.556 413.523 562.357 415.722 559.655 415.722 cv
330.635 315.839 mo
328.32 315.839 326.437 317.721 326.437 320.034 cv
326.437 410.821 li
326.437 413.135 328.32 415.017 330.635 415.017 cv
559.655 415.017 li
561.97 415.017 563.852 413.135 563.852 410.821 cv
563.852 320.034 li
563.852 317.721 561.97 315.839 559.655 315.839 cv
330.635 315.839 li
level3{
gsave
clp
[6.58466e-15 -107.536 107.536 6.58466e-15 445.145 419.196 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.58466e-15 -107.536 107.536 6.58466e-15 445.145 419.196 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
559.655 417.13 mo
330.635 417.13 li
327.155 417.13 324.324 414.3 324.324 410.821 cv
324.324 320.034 li
324.324 316.556 327.155 313.726 330.635 313.726 cv
559.655 313.726 li
563.135 313.726 565.965 316.556 565.965 320.034 cv
565.965 410.821 li
565.965 414.3 563.135 417.13 559.655 417.13 cv
330.635 315.135 mo
327.932 315.135 325.733 317.333 325.733 320.034 cv
325.733 410.821 li
325.733 413.523 327.932 415.722 330.635 415.722 cv
559.655 415.722 li
562.357 415.722 564.556 413.523 564.556 410.821 cv
564.556 320.034 li
564.556 317.333 562.357 315.135 559.655 315.135 cv
330.635 315.135 li
level3{
gsave
clp
[6.4984e-15 -106.127 106.127 6.4984e-15 445.145 418.491 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.4984e-15 -106.127 106.127 6.4984e-15 445.145 418.491 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
559.655 418.491 mo
330.635 418.491 li
326.404 418.491 322.964 415.051 322.964 410.821 cv
322.964 410.821 li
322.964 320.034 li
322.964 315.805 326.404 312.364 330.635 312.364 cv
559.655 312.364 li
563.886 312.364 567.326 315.805 567.326 320.034 cv
567.326 320.034 li
567.326 410.821 li
567.326 415.051 563.886 418.491 559.655 418.491 cv
330.635 312.647 mo
326.56 312.647 323.246 315.96 323.246 320.034 cv
323.246 410.821 li
323.246 414.895 326.56 418.209 330.635 418.209 cv
559.655 418.209 li
563.731 418.209 567.045 414.895 567.045 410.821 cv
567.045 320.034 li
567.045 315.96 563.731 312.647 559.655 312.647 cv
330.635 312.647 li
559.655 417.412 mo
330.635 417.412 li
327 417.412 324.042 414.455 324.042 410.821 cv
324.042 320.034 li
324.042 316.4 327 313.443 330.635 313.443 cv
559.655 313.443 li
563.29 313.443 566.247 316.4 566.247 320.034 cv
566.247 410.821 li
566.247 414.455 563.29 417.412 559.655 417.412 cv
330.635 313.726 mo
327.155 313.726 324.324 316.556 324.324 320.034 cv
324.324 410.821 li
324.324 414.3 327.155 417.13 330.635 417.13 cv
559.655 417.13 li
563.135 417.13 565.965 414.3 565.965 410.821 cv
565.965 320.034 li
565.965 316.556 563.135 313.726 559.655 313.726 cv
330.635 313.726 li
level3{
gsave
clp
[6.4984e-15 -106.127 106.127 6.4984e-15 445.145 418.491 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.4984e-15 -106.127 106.127 6.4984e-15 445.145 418.491 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
559.655 418.209 mo
330.635 418.209 li
326.56 418.209 323.246 414.895 323.246 410.821 cv
323.246 320.034 li
323.246 315.96 326.56 312.647 330.635 312.647 cv
559.655 312.647 li
563.731 312.647 567.045 315.96 567.045 320.034 cv
567.045 410.821 li
567.045 414.895 563.731 418.209 559.655 418.209 cv
330.635 313.443 mo
327 313.443 324.042 316.4 324.042 320.034 cv
324.042 410.821 li
324.042 414.455 327 417.412 330.635 417.412 cv
559.655 417.412 li
563.29 417.412 566.247 414.455 566.247 410.821 cv
566.247 320.034 li
566.247 316.4 563.29 313.443 559.655 313.443 cv
330.635 313.443 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[245.28 0 0 107.04 322.56 30.96 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 511 
/H 223 
/M[511 0 0 -223 0 223 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFn%+arK"Q]JK"Q]JK"Q]J
K"U?\K"Q]JK"Q]Jrk*s#K"uuRK"uuRK"uuRK"uuRK"uuRK#%&pNl6OfK#E8ZK#E8ZK#E8ZK#E8ZK#E8Z
m)573K#iPbK#m2tK#iPbK#iPbK#iPbK#iPbqoFT;K$8hjK$8hjK$8hjK$8hjK$8hjK$<f0OjJ^,K$]+r
K$]+rK$]+rK$]+rK$]+rl-P%3K%,D%K%,D%K%,D%K%,D%K%,D%K%0SFMqEX6K%P\-K%P\-K%P\-K%P\-
K%P\-n(<l[K%tt5K%tt5K%tt5K&#VGK%tt5K%tt5rnN4cK&D7=K&D7=K&D7=K&D7=K&D7=K&H=[NoYfQ
K&hOEK&hOEK&hOEK&hOEK&hOEm,XMsK'7gMK';I_K'7gMK'7gMK'7gMK'7gMqrik&K'\*UK'\*UK'\*U
K'\*UK'\*UK'`'pOmmtlK(+B]K(+B]K(+B]K(+B]K(+B]l0s;tK(X`gK(X`gK(X`gK(X`gK(X`gK(\p3
Mtqu#K)(#oK)(#oK)(#oK)(#oK)(#on+i4CK(srmK(srmK(srmK)"U*K(srmK(srmK(srmK(srmK(srm
K(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srml1fl*K(srmK(srmK(srmK)#6<
M"cMqK(jlkK(jlkK(jlkK(jlkK(jlko(S:>K(X`gK(X`gK(X`gK(X`gK(X`gK(\C$K(4H_K(4H_K(4H_
K(4H_K(4H_K(4H_q!j:-K'IsQK'IsQK'IsQK'IsQK'IsQK'MgiPhq#KK&2+9K&2+9K&2+9l/%$KK&2+9
K&6L`L!5.mK$8hjK$8hjK$8hjK$8hjK$8hjourH$K!Bp4K!Bp4K!Bp4K!Bp4K!Bp4K!F[IQ\g<NJr,)9
l%t"KJr,)9Jr,)9Jr,)9Jr0A]LfT+.Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(
Jl[J(kuNC:Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl_>@PZ<<8JlRD&
JlRD&JlRD&kuE=8JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&
JlV/;QW/Q9JlI>$ku<76JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$
JlI>$JlI>$JlI>$JlLu6JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$
mo5NMJl@8"Jl@8"Jl@8"JlCo4Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"
Jl@8"Jl@8"Jl@8"lr06KJl71uJl:i2Jl71uJl71uJl71uJl71uJl71uJl71uJl71uJl71uJl71uJl71u
Jl71uJl71uJl71uJl71uJl71uJl71uku*+2Jl71uJl71uJl71uJl71uJl71uJl;AAMc#('Jl.+sJl.+s
Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sku!%0Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+s
Jl.+sJl.+sJl.+sJl.+sJl.+sJl1l3QV`91Jl%%qktlt.Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%q
Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl(].JkptoJkptoJkptoJkptoJkptoJkptoJkpto
JkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoktcn,JkptoJkptoJkptoJkptoJkptoJkpto
JkptoJkptoJkptoJkptoJkptoJkptoJkptoJkt`/QVN--JkgnmktZh*JkgnmJkgnmJkgnmJkgnmJkgnm
JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkkQ*Jk^hkJk^hkJk^hkJk^hkJk^hk
Jk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkktQb(Jk^hkJk^hkJk^hkJk^hk
Jk^hkJk^hkJk^hkJkbo4N_G$uJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiktH\&JkUbiJkUbiJkUbi
JkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkYE&JkL\gJkL\gJkL\g
JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gkt?V$JkL\gJkQ)9
Kh?qhJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVekt6P"JkCVe
JkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkG9"Jk:Pc
Jk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:Pckt-Iu
Jk:PcJk>r5Kh-edJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1Ja
kt$CsJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk5H'O[k!nJk(D_Jk(D_Jk(D_Jk(D_
Jk(D_ksp=qJk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_
Jk(D_Jk,&qJk(D_Jk(D_r^VZ3Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]
Jjt>]Jjt>]Jk"uoJjt>]Jjt>]Jjt>]Jjt>]qaQB1Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[
Jjk8[Jjk8[Jjk8[JjnomJjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[
Jjk8[Jjk8[Jjk8[Jjk8[ks^1mJjk8[JjoZ-Kg^M\Jjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2Y
Jjb2YJjb2YJjb2YJjb2YJjb2YksU+kJjb2YJjb2YJjb2YJjfK(LdQb]JjY,WJjY,WJjY,WJjY,WJjY,W
JjY,WJjY,WJjY,WJjY,WJjY,WJjY,WksL%iJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,W
JjY,WJjY,WJj\uoPX9sgJjP&UJjP&UJjP&UksBtgJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&U
JjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjS]gJjP&UJjP&UJjP&UJjP&Uqa-*)JjFuSJjFuSJjFuS
JjFuSJjFuSJjFuSJjFuSJjFuSJjFuSJjFuSJjFuSJjJWeJjFuSJjFuSJjFuSJjFuSJjFuSJjFuSJjFuS
JjFuSJjFuSJjFuSJjFuSJjFuSmm31'Jj=oQJj=oQJj=oQJjAQcJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQ
Jj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQks0hcJj=oQJj=oQJj=oQJjB2uLd-JU
Jj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOks'baJj4iOJj4iOJj4iOJj4iO
Jj4iOJj9#pM`u_VJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMkrs\_Jj+cMJj+cMJj+cM
Jj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj/NbQT]p`Jj"]KkrjV]Jj"]KJj"]K
Jj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj&?]Jj"]KJj"]K
Jj"]KJj"]KJj"]KJj"]KpcXNtJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJir9[JinWI
JinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIlo^UrJieQGJii3Y
JieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQG
krXJYJieQGJieQGJieQGJieQGJieQGJii`hM`QGNJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KE
Ji\KEkrODWJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi`QcN]D\OJiSECJiSECJiSECJiSECJiSEC
JiSECJiSECkrF>UJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSEC
JiSECJiSECJiW'UJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AJiJ?AJiJ?Akr=8SJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiNE_N]2PKJiA9?JiA9?JiA9?
JiA9?JiA9?JiA9?JiA9?kr42QJiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?
JiA9?JiA9?JiA9?JiA9?JiDpQJi83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=
Ji83=Ji83=Ji83=Ji83=Ji83=kr+,OJi83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji<9[N\uDGJi/-;
Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;kr"&MJi/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;
Ji3*VOYhYHJi&'9Ji&'9Ji&'9Ji&'9Ji&'9kqmuKJi&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9
Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji)^KJi&'9Ji&'9r\T<bJhr!7Jhr!7Jhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7JhuXIJhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7nhZC`Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5JhlRGJhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5
Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5kq[iGJhhp5Jhm<\Ke\06Jh_j3Jh_j3
Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3kqRcEJh_j3Jh_j3Jh_j3Jh_j3
Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3JhcgNOYDA@JhVd1JhVd1JhVd1JhVd1JhVd1kqI]CJhVd1JhVd1JhVd1
JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhZFCJhVd1JhVd1r\0$Z
JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhQ@AJhM^/JhM^/
JhM^/JhM^/q_*acJiSECJiSECJiSECJiSECJiSECJiWB^Oe./rJt@RcJt@RcJt@RcJt@RcJt@Rcl(3LV
K%,D%K%,D%K%,D%K%,D%K%,D%K%0SFMs>oZK'IsQK'IsQK'IsQK'IsQK'IsQn*6/-K(4H_K(4H_K(4H_
K(8*qK(4H_K(4H_rpb^6K(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(J@#
Qgo[tK(4H_l1'AqK(4H_K(4H_K(4H_K(8a.M!]f]K'e0WK'e0WK'e0WK'e0WK'e0Wo'MS'K'7gMK'7gM
K'7gMK'7gMK'7gMK';I_K&hOEK&hOEK&hOEK&hOEK&hOEK&hOEpuI@jK&;1;K&;1;K&;1;K&;1;K&;1;
K&?%SPhL`CK%bh1K%bh1K%bh1l.UaCK%bh1K%g4XL":k,K%>P)K%>P)K%>P)K%>P)K%>P)p"#/NK$f1t
K$f1tK$f1tK$f1tK$f1tK$ir4Qd(-,K$Anll-4h)K$AnlK$AnlK$AnlK$F2;Lrb1hK#iPbK#iPbK#iPb
K#iPbK#iPbo#Qs3K#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#HolK"uuRK"uuRK"uuRK"uuRK"uuRK"uuRpqVg!
K"?QFK"?QFK"?QFK"?QFK"?QFK"CE^PdZ1PK!p9>K!p9>K!p9>l*c2PK!p9>K!tZeKs?67K!Bp4K!Bp4
K!Bp4K!Bp4K!Bp4os'OZJusX,JusX,JusX,JusX,JusX,K!"CAQ`,M7JuF:"l)934JuF:"JuF:"JuF:"
JuJRFLnoWuJu"!oJu"!oJu"!oJu"!oJu"!ont_D@JtR^gJtR^gJtR^gJtR^gJtR^gJtVA$Jt.F_Jt.F_
Jt.F_Jt.F_Jt.F_Jt.F_pmd8/JsV(UJsV(UJsV(UJsV(UJsV(UJsYqmP`p]_Js1eMJs1eMJs1eMl'$^_
Js1eMJs61tKo^hHJrbMEJrbMEJrbMEJrbMEJrbMEooG,kJr>5=Jr>5=Jr>5=Jr>5=Jr>5=JrAuRQ\U0J
Jqnr5l%akGJqnr5Jqnr5Jqnr5Jqs5YLkC;3JqJZ-JqJZ-JqJZ-JqJZ-JqJZ-nq3'SJq&B%Jq&B%Jq&B%
Jq&B%Jq&B%Jq*$7JpN#pJpN#pJpN#pJpN#pJpN#pJpN#ppj.j@JouZfJouZfJouZfJouZfJouZfJp$O)
P]D@rJoZH`JoZH`JoZH`l#MArJoZH`Jo^j2Kl2K[Jo60XJo60XJo60XJo60XJo60Xokoe(Jn]gNJn]gN
Jn]gNJn]gNJn]gNJnaRcQXk\YJn0IDl"#BVJn0IDJn0IDJn0IDJn0IDJn0IDJn0IDJn0IDJn0IDJn0ID
Jn4F_J,~>

%%EndBinary
grestore
np
559.656 414.313 mo
330.634 414.313 li
328.706 414.313 327.143 412.75 327.143 410.821 cv
327.143 410.821 li
327.143 320.034 li
327.143 318.106 328.706 316.543 330.634 316.543 cv
559.656 316.543 li
561.584 316.543 563.147 318.106 563.147 320.034 cv
563.147 320.034 li
563.147 410.821 li
563.147 412.75 561.584 414.313 559.656 414.313 cv
328.551 405.187 mo
328.551 410.821 li
328.551 411.97 329.486 412.904 330.635 412.904 cv
559.655 412.904 li
560.805 412.904 561.738 411.97 561.738 410.821 cv
561.738 405.187 li
561.738 406.335 560.805 407.269 559.655 407.269 cv
330.635 407.269 li
329.486 407.269 328.551 406.335 328.551 405.187 cv
330.634 317.543 mo
329.26 317.543 328.143 318.66 328.143 320.034 cv
328.143 355.874 li
562.147 355.874 li
562.147 320.034 li
562.147 318.66 561.03 317.543 559.656 317.543 cv
330.634 317.543 li
level3{
gsave
clp
[5.9867e-15 -97.7702 97.7702 5.9867e-15 445.145 414.313 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.9867e-15 -97.7702 97.7702 5.9867e-15 445.145 414.313 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
559.655 412.904 mo
330.635 412.904 li
329.486 412.904 328.551 411.97 328.551 410.821 cv
328.551 405.187 li
328.551 406.335 329.486 407.269 330.635 407.269 cv
559.655 407.269 li
560.805 407.269 561.738 406.335 561.738 405.187 cv
561.738 410.821 li
561.738 411.97 560.805 412.904 559.655 412.904 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[234.72 0 0 9.12 327.84 36.24 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 489 
/H 19 
/M[489 0 0 -19 0 19 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K"uuRK"uuRK"uuRK"uuRK"uuRK"uuRK"uuRK"uuRK"uuRK"uuRK"uuRK"uuRK"uuRK"uuRK"uuRS%sWk
K"uuRQ,)h(K#*&TK#*&TK#*&TK#*&TK#*&TK#,aK[DIO4K#3,VK#3,VK#3,VK#3,VK#3,VK#3,VK#4"o
K#3,VK#3,VK#3,VK#3,VK#3,VK#3,VK#3,VK#3,VK#3,VK#6K`U;MT#K#<2XK#<2XK#<2XK#<2XK#=(q
K#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#I<"O2Z^iK#N>\K#N>\K#O4u
K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\LrK82K#WD^K#X;"
K#WD^K#WD^K#WD^K#Xb/gW+odK#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#aA$
K#iPbK#iPbK#iPbK#iPbK#iPbK#kRFaN9%UK#rVdK#rVdK#rVdK#rVdK#rVdoZ<08K#iPbK#iPbK#iPb
S&g3&K#iPbQ,nI~>

%%EndBinary
grestore
np
562.147 355.874 mo
328.143 355.874 li
328.143 320.034 li
328.143 318.66 329.26 317.543 330.634 317.543 cv
559.656 317.543 li
561.03 317.543 562.147 318.66 562.147 320.034 cv
562.147 355.874 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[235.68 0 0 39.84 327.36 93.36 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 491 
/H 83 
/M[491 0 0 -83 0 83 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 491 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 491 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 491 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&MuSD/
K)^H&PQ1.OK)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$MuJ>-
K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$fD_lMK)L<"K)L<"K)L<"K)L<"K)L<"MuA8+
K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"kl%"KK)C5uK)C5uK)C5uMu82)
K)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uq>?-IK):/sMu/,'
K):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sK):K'K)1)q
K)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)1)qK)4^-S,%[3K)(#oK)(#oK)(?#K)(#o
K)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oMtqu#K)(#o
K)(#oK)(#oV"rpCK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmMthnuK(jlk
K(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(k2tK(jlkK(kK'
nFhJ-K(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiq=]^=K(X`gMtM\pK(X`g
K(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(Y&pK(OZeK(OZe
K(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(S:!S+D7'K(FTcK(FTcK(FolK(FTcK(FTc
K(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(Jg0MXlAiK(=ijK(=NaK(=Na
K(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaMt2JiK(4H_K(4H_
K(4H_K(4H_K(4H_K(4H_K(4H_K(4H_K(4H_K(4H_K(4H_kjb/3K(+B]K(+B]K(+B]Msu>fK(+B]K(+B]
K(+B]K(+B]K(+B]K(+B]K(+B]`pg\1K("<[K("<[K("<[K("<[K("<[K("<[K("<[Msl8dK("<[K("<[
K("<[V!m4/K'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'n6YMsc2bK'n6YK'n6Y
K'n6YK'n6YK'n6Y[I2?-K'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WMsZ,`K'e0WK'e0W
K'e0WK'e0WK'e0WK'e0WK'e0W`pLJ+K'\*UK'\*UK'\*UK'\*UK'\*UK'`="MX,l[K'S?\K'S$SK'S$S
K'S$SK'S$SK'S$SK'S$SK'S$SK'S$SK'S$SK'V%SXQkE&K'IsQK'IsQK'IsQK'IsQK'J9ZK'IsQK'IsQ
K'IsQK'IsQK'IsQK'IsQK'IsQK'IsQK'IsQK'IsQK'IsQK'MRbS*>OhK'@mOK'@mOK'A3XK'@mOK'@mO
K'@mOK'@mOK'@mOK'@mOK'@mOK'C;>^$((3K'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'8-VK'7gMK'7gM
K'7gMK'9#ohrfUSK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'/'TK'.aKK'.aK
K'.aKK'.aKK'.aKK'0Q)cK0Z>K&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qpPK&qUGK&qUG
K&qUGK&qUGK&qUGK&qUGK&qUGK&t#6^#Xe+K&hOEK&hOEK&hOEK&hOEK&hOEK&hOEK&hjNK&hOEK&hOE
K&hOEK&i`ghrB=KK&_ICK&_ICK&_ICK&_ICK&_ICfAislK&VCAK&VCAK&VCAK&VCAK&VCAMrK?JK&VCA
K&VCAK&VCAK&VCAK&VCAK&VCAK&VCAK&VCAK&VCAK&VCAK&VCAki/)jK&M=?K&M=?K&M=?MrB9HK&M=?
K&M=?K&M=?K&M=?K&M=?K&M=?K&M=?`o4VhK&D7=K&D7=K&D7=K&D7=K&D7=K&HI_MVj$CK&;LDK&;1;
K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;Mr0-CK&2+9
K&2+9K&2+9K&2+9K&2+9K&2+9K&2+9K&2+9K&2+9K&2+9K&2+9kh_fbK&)%7K&)%7K&)%7Mqs!@K&)%7
PML`~>

%%EndBinary
grestore
np
258.891 439.434 mo
50.8193 439.434 li
34.6464 439.434 21.4883 426.275 21.4883 410.103 cv
21.4883 340.267 li
21.4883 324.093 34.6464 310.936 50.8193 310.936 cv
258.891 310.936 li
275.064 310.936 288.222 324.093 288.222 340.267 cv
288.222 410.103 li
288.222 426.275 275.064 439.434 258.891 439.434 cv
50.8193 311.139 mo
34.8325 311.139 21.8261 324.144 21.8261 340.132 cv
21.8261 409.877 li
21.8261 425.864 34.8325 438.87 50.8193 438.87 cv
258.891 438.87 li
274.877 438.87 287.883 425.864 287.883 409.877 cv
287.883 340.132 li
287.883 324.144 274.877 311.139 258.891 311.139 cv
50.8193 311.139 li
1 1 1 rgb
f
258.891 438.87 mo
50.8193 438.87 li
34.8325 438.87 21.8261 425.864 21.8261 409.877 cv
21.8261 340.132 li
21.8261 324.144 34.8325 311.139 50.8193 311.139 cv
258.891 311.139 li
274.877 311.139 287.883 324.144 287.883 340.132 cv
287.883 409.877 li
287.883 425.864 274.877 438.87 258.891 438.87 cv
50.8193 311.341 mo
35.0191 311.341 22.1641 324.195 22.1641 339.996 cv
22.1641 409.651 li
22.1641 425.452 35.0191 438.307 50.8193 438.307 cv
258.891 438.307 li
274.691 438.307 287.545 425.452 287.545 409.651 cv
287.545 339.996 li
287.545 324.195 274.691 311.341 258.891 311.341 cv
50.8193 311.341 li
f
258.891 438.307 mo
50.8193 438.307 li
35.0191 438.307 22.1641 425.452 22.1641 409.651 cv
22.1641 339.996 li
22.1641 324.195 35.0191 311.341 50.8193 311.341 cv
258.891 311.341 li
274.691 311.341 287.545 324.195 287.545 339.996 cv
287.545 409.651 li
287.545 425.452 274.691 438.307 258.891 438.307 cv
50.8193 311.544 mo
35.2055 311.544 22.502 324.247 22.502 339.861 cv
22.502 409.427 li
22.502 425.041 35.2055 437.744 50.8193 437.744 cv
258.891 437.744 li
274.505 437.744 287.208 425.041 287.208 409.427 cv
287.208 339.861 li
287.208 324.247 274.505 311.544 258.891 311.544 cv
50.8193 311.544 li
f
258.891 437.744 mo
50.8193 437.744 li
35.2055 437.744 22.502 425.041 22.502 409.427 cv
22.502 339.861 li
22.502 324.247 35.2055 311.544 50.8193 311.544 cv
258.891 311.544 li
274.505 311.544 287.208 324.247 287.208 339.861 cv
287.208 409.427 li
287.208 425.041 274.505 437.744 258.891 437.744 cv
50.8193 311.746 mo
35.3916 311.746 22.8403 324.298 22.8403 339.726 cv
22.8403 409.201 li
22.8403 424.629 35.3916 437.181 50.8193 437.181 cv
258.891 437.181 li
274.318 437.181 286.87 424.629 286.87 409.201 cv
286.87 339.726 li
286.87 324.298 274.318 311.746 258.891 311.746 cv
50.8193 311.746 li
.996078 .996078 .996078 rgb
f
258.891 437.181 mo
50.8193 437.181 li
35.3916 437.181 22.8403 424.629 22.8403 409.201 cv
22.8403 339.726 li
22.8403 324.298 35.3916 311.746 50.8193 311.746 cv
258.891 311.746 li
274.318 311.746 286.87 324.298 286.87 339.726 cv
286.87 409.201 li
286.87 424.629 274.318 437.181 258.891 437.181 cv
50.8193 311.949 mo
35.5782 311.949 23.1782 324.349 23.1782 339.591 cv
23.1782 408.976 li
23.1782 424.218 35.5782 436.617 50.8193 436.617 cv
258.891 436.617 li
274.132 436.617 286.532 424.218 286.532 408.976 cv
286.532 339.591 li
286.532 324.349 274.132 311.949 258.891 311.949 cv
50.8193 311.949 li
f
258.891 436.617 mo
50.8193 436.617 li
35.5782 436.617 23.1782 424.218 23.1782 408.976 cv
23.1782 339.591 li
23.1782 324.349 35.5782 311.949 50.8193 311.949 cv
258.891 311.949 li
274.132 311.949 286.532 324.349 286.532 339.591 cv
286.532 408.976 li
286.532 424.218 274.132 436.617 258.891 436.617 cv
50.8193 312.152 mo
35.7641 312.152 23.516 324.4 23.516 339.455 cv
23.516 408.751 li
23.516 423.806 35.7641 436.055 50.8193 436.055 cv
258.891 436.055 li
273.946 436.055 286.194 423.806 286.194 408.751 cv
286.194 339.455 li
286.194 324.4 273.946 312.152 258.891 312.152 cv
50.8193 312.152 li
.992157 .992157 .992157 rgb
f
258.891 436.055 mo
50.8193 436.055 li
35.7641 436.055 23.516 423.806 23.516 408.751 cv
23.516 339.455 li
23.516 324.4 35.7641 312.152 50.8193 312.152 cv
258.891 312.152 li
273.946 312.152 286.194 324.4 286.194 339.455 cv
286.194 408.751 li
286.194 423.806 273.946 436.055 258.891 436.055 cv
50.8193 312.355 mo
35.9507 312.355 23.854 324.451 23.854 339.32 cv
23.854 408.525 li
23.854 423.395 35.9507 435.491 50.8193 435.491 cv
258.891 435.491 li
273.759 435.491 285.856 423.395 285.856 408.525 cv
285.856 339.32 li
285.856 324.451 273.759 312.355 258.891 312.355 cv
50.8193 312.355 li
.988235 .988235 .988235 rgb
f
258.891 435.491 mo
50.8193 435.491 li
35.9507 435.491 23.854 423.395 23.854 408.525 cv
23.854 339.32 li
23.854 324.451 35.9507 312.355 50.8193 312.355 cv
258.891 312.355 li
273.759 312.355 285.856 324.451 285.856 339.32 cv
285.856 408.525 li
285.856 423.395 273.759 435.491 258.891 435.491 cv
50.8193 312.558 mo
36.1372 312.558 24.192 324.503 24.192 339.186 cv
24.192 408.3 li
24.192 422.982 36.1372 434.928 50.8193 434.928 cv
258.891 434.928 li
273.573 434.928 285.518 422.982 285.518 408.3 cv
285.518 339.186 li
285.518 324.503 273.573 312.558 258.891 312.558 cv
50.8193 312.558 li
.984314 .984314 .984314 rgb
f
258.891 434.928 mo
50.8193 434.928 li
36.1372 434.928 24.192 422.982 24.192 408.3 cv
24.192 339.186 li
24.192 324.503 36.1372 312.558 50.8193 312.558 cv
258.891 312.558 li
273.573 312.558 285.518 324.503 285.518 339.186 cv
285.518 408.3 li
285.518 422.982 273.573 434.928 258.891 434.928 cv
50.8193 312.76 mo
36.3232 312.76 24.5298 324.554 24.5298 339.05 cv
24.5298 408.075 li
24.5298 422.571 36.3232 434.364 50.8193 434.364 cv
258.891 434.364 li
273.387 434.364 285.18 422.571 285.18 408.075 cv
285.18 339.05 li
285.18 324.554 273.387 312.76 258.891 312.76 cv
50.8193 312.76 li
.976471 .976471 .976471 rgb
f
258.891 434.364 mo
50.8193 434.364 li
36.3232 434.364 24.5298 422.571 24.5298 408.075 cv
24.5298 339.05 li
24.5298 324.554 36.3232 312.76 50.8193 312.76 cv
258.891 312.76 li
273.387 312.76 285.18 324.554 285.18 339.05 cv
285.18 408.075 li
285.18 422.571 273.387 434.364 258.891 434.364 cv
50.8193 312.963 mo
36.5097 312.963 24.8677 324.605 24.8677 338.915 cv
24.8677 407.85 li
24.8677 422.159 36.5097 433.802 50.8193 433.802 cv
258.891 433.802 li
273.2 433.802 284.842 422.159 284.842 407.85 cv
284.842 338.915 li
284.842 324.605 273.2 312.963 258.891 312.963 cv
50.8193 312.963 li
.972549 .972549 .972549 rgb
f
258.891 433.802 mo
50.8193 433.802 li
36.5097 433.802 24.8677 422.159 24.8677 407.85 cv
24.8677 338.915 li
24.8677 324.605 36.5097 312.963 50.8193 312.963 cv
258.891 312.963 li
273.2 312.963 284.842 324.605 284.842 338.915 cv
284.842 407.85 li
284.842 422.159 273.2 433.802 258.891 433.802 cv
50.8193 313.166 mo
36.6958 313.166 25.2055 324.656 25.2055 338.779 cv
25.2055 407.624 li
25.2055 421.748 36.6958 433.238 50.8193 433.238 cv
258.891 433.238 li
273.014 433.238 284.504 421.748 284.504 407.624 cv
284.504 338.779 li
284.504 324.656 273.014 313.166 258.891 313.166 cv
50.8193 313.166 li
.964706 .964706 .964706 rgb
f
258.891 433.238 mo
50.8193 433.238 li
36.6958 433.238 25.2055 421.748 25.2055 407.624 cv
25.2055 338.779 li
25.2055 324.656 36.6958 313.166 50.8193 313.166 cv
258.891 313.166 li
273.014 313.166 284.504 324.656 284.504 338.779 cv
284.504 407.624 li
284.504 421.748 273.014 433.238 258.891 433.238 cv
50.8193 313.368 mo
36.8824 313.368 25.5435 324.707 25.5435 338.645 cv
25.5435 407.399 li
25.5435 421.336 36.8824 432.675 50.8193 432.675 cv
258.891 432.675 li
272.828 432.675 284.167 421.336 284.167 407.399 cv
284.167 338.645 li
284.167 324.707 272.828 313.368 258.891 313.368 cv
50.8193 313.368 li
.956863 .956863 .956863 rgb
f
258.891 432.675 mo
50.8193 432.675 li
36.8824 432.675 25.5435 421.336 25.5435 407.399 cv
25.5435 338.645 li
25.5435 324.707 36.8824 313.368 50.8193 313.368 cv
258.891 313.368 li
272.828 313.368 284.167 324.707 284.167 338.645 cv
284.167 407.399 li
284.167 421.336 272.828 432.675 258.891 432.675 cv
50.8193 313.571 mo
37.0688 313.571 25.8813 324.759 25.8813 338.51 cv
25.8813 407.174 li
25.8813 420.925 37.0688 432.112 50.8193 432.112 cv
258.891 432.112 li
272.642 432.112 283.829 420.925 283.829 407.174 cv
283.829 338.51 li
283.829 324.759 272.642 313.571 258.891 313.571 cv
50.8193 313.571 li
.94902 .94902 .94902 rgb
f
258.891 432.112 mo
50.8193 432.112 li
37.0688 432.112 25.8813 420.925 25.8813 407.174 cv
25.8813 338.51 li
25.8813 324.759 37.0688 313.571 50.8193 313.571 cv
258.891 313.571 li
272.642 313.571 283.829 324.759 283.829 338.51 cv
283.829 407.174 li
283.829 420.925 272.642 432.112 258.891 432.112 cv
47.8818 313.949 mo
35.6965 315.405 26.2193 325.803 26.2193 338.374 cv
26.2193 406.948 li
26.2193 420.513 37.2549 431.549 50.8193 431.549 cv
258.891 431.549 li
272.455 431.549 283.491 420.513 283.491 406.948 cv
283.491 338.374 li
283.491 325.803 274.013 315.405 261.828 313.949 cv
260.87 313.804 259.889 313.729 258.891 313.729 cv
50.8193 313.729 li
49.821 313.729 48.8403 313.804 47.8818 313.949 cv
.941176 .941176 .941176 rgb
f
258.891 431.549 mo
50.8193 431.549 li
37.2549 431.549 26.2193 420.513 26.2193 406.948 cv
26.2193 338.374 li
26.2193 325.803 35.6965 315.405 47.8818 313.949 cv
46.5531 314.15 45.2681 314.485 44.0405 314.94 cv
33.9504 317.88 26.5571 327.212 26.5571 338.239 cv
26.5571 406.724 li
26.5571 420.102 37.4414 430.985 50.8193 430.985 cv
258.891 430.985 li
272.269 430.985 283.153 420.102 283.153 406.724 cv
283.153 338.239 li
283.153 327.212 275.759 317.88 265.669 314.94 cv
264.442 314.485 263.157 314.15 261.828 313.949 cv
274.013 315.405 283.491 325.803 283.491 338.374 cv
283.491 406.948 li
283.491 420.513 272.455 431.549 258.891 431.549 cv
.933333 .933333 .933333 rgb
f
258.891 430.985 mo
50.8193 430.985 li
37.4414 430.985 26.5571 420.102 26.5571 406.724 cv
26.5571 338.239 li
26.5571 327.212 33.9504 317.88 44.0405 314.94 cv
43.2426 315.236 42.4691 315.582 41.7238 315.976 cv
33.0297 319.563 26.895 328.13 26.895 338.103 cv
26.895 406.498 li
26.895 419.69 37.6274 430.422 50.8193 430.422 cv
258.891 430.422 li
272.082 430.422 282.815 419.69 282.815 406.498 cv
282.815 338.103 li
282.815 328.13 276.68 319.563 267.986 315.976 cv
267.241 315.582 266.467 315.236 265.669 314.94 cv
275.759 317.88 283.153 327.212 283.153 338.239 cv
283.153 406.724 li
283.153 420.102 272.269 430.985 258.891 430.985 cv
.921569 .921569 .921569 rgb
f
258.891 430.422 mo
50.8193 430.422 li
37.6274 430.422 26.895 419.69 26.895 406.498 cv
26.895 338.103 li
26.895 328.13 33.0297 319.563 41.7238 315.976 cv
41.104 316.303 40.5034 316.662 39.925 317.052 cv
32.3886 320.994 27.2328 328.891 27.2328 337.969 cv
27.2328 406.272 li
27.2328 419.278 37.8139 429.859 50.8193 429.859 cv
258.891 429.859 li
271.896 429.859 282.477 419.278 282.477 406.272 cv
282.477 337.969 li
282.477 328.891 277.322 320.994 269.785 317.052 cv
269.207 316.663 268.606 316.303 267.986 315.976 cv
276.68 319.563 282.815 328.13 282.815 338.103 cv
282.815 406.498 li
282.815 419.69 272.082 430.422 258.891 430.422 cv
.913725 .913725 .913725 rgb
f
258.891 429.859 mo
50.8193 429.859 li
37.8139 429.859 27.2328 419.278 27.2328 406.272 cv
27.2328 337.969 li
27.2328 328.891 32.3886 320.994 39.925 317.052 cv
39.4026 317.404 38.8978 317.78 38.4127 318.18 cv
31.9022 322.304 27.5708 329.573 27.5708 337.834 cv
27.5708 406.048 li
27.5708 418.867 38.0005 429.296 50.8193 429.296 cv
258.891 429.296 li
271.71 429.296 282.139 418.867 282.139 406.048 cv
282.139 337.834 li
282.139 329.572 277.808 322.303 271.297 318.179 cv
270.812 317.78 270.307 317.404 269.785 317.052 cv
277.322 320.994 282.477 328.891 282.477 337.969 cv
282.477 406.272 li
282.477 419.278 271.896 429.859 258.891 429.859 cv
.901961 .901961 .901961 rgb
f
258.891 429.296 mo
50.8193 429.296 li
38.0005 429.296 27.5708 418.867 27.5708 406.048 cv
27.5708 337.834 li
27.5708 329.573 31.9022 322.304 38.4127 318.18 cv
37.9602 318.552 37.5246 318.944 37.1073 319.355 cv
31.5269 323.538 27.9088 330.204 27.9088 337.698 cv
27.9088 405.822 li
27.9088 418.455 38.1866 428.732 50.8193 428.732 cv
258.891 428.732 li
271.523 428.732 281.801 418.455 281.801 405.822 cv
281.801 337.698 li
281.801 330.203 278.184 323.537 272.602 319.355 cv
272.185 318.944 271.75 318.552 271.297 318.179 cv
277.808 322.303 282.139 329.572 282.139 337.834 cv
282.139 406.048 li
282.139 418.867 271.71 429.296 258.891 429.296 cv
.890196 .890196 .890196 rgb
f
258.891 428.732 mo
50.8193 428.732 li
38.1866 428.732 27.9088 418.455 27.9088 405.822 cv
27.9088 337.698 li
27.9088 330.204 31.5269 323.538 37.1073 319.355 cv
36.7093 319.747 36.3276 320.156 35.964 320.581 cv
31.2364 324.722 28.2466 330.8 28.2466 337.564 cv
28.2466 405.597 li
28.2466 418.044 38.373 428.17 50.8193 428.17 cv
258.891 428.17 li
271.337 428.17 281.463 418.044 281.463 405.597 cv
281.463 337.564 li
281.463 330.8 278.474 324.722 273.746 320.581 cv
273.383 320.157 273.001 319.747 272.602 319.355 cv
278.184 323.537 281.801 330.203 281.801 337.698 cv
281.801 405.822 li
281.801 418.455 271.523 428.732 258.891 428.732 cv
.878431 .878431 .878431 rgb
f
258.891 428.17 mo
50.8193 428.17 li
38.373 428.17 28.2466 418.044 28.2466 405.597 cv
28.2466 337.564 li
28.2466 330.8 31.2364 324.722 35.964 320.581 cv
35.61 320.994 35.2726 321.423 34.9535 321.865 cv
31.0161 325.879 28.5845 331.375 28.5845 337.428 cv
28.5845 405.371 li
28.5845 417.632 38.5591 427.606 50.8193 427.606 cv
258.891 427.606 li
271.151 427.606 281.125 417.632 281.125 405.371 cv
281.125 337.428 li
281.125 331.375 278.694 325.88 274.757 321.866 cv
274.438 321.423 274.101 320.995 273.746 320.581 cv
278.474 324.722 281.463 330.8 281.463 337.564 cv
281.463 405.597 li
281.463 418.044 271.337 428.17 258.891 428.17 cv
.858823 .858823 .858823 rgb
f
258.891 427.606 mo
50.8193 427.606 li
38.5591 427.606 28.5845 417.632 28.5845 405.371 cv
28.5845 337.428 li
28.5845 331.375 31.0161 325.879 34.9535 321.865 cv
34.6398 322.3 34.3444 322.747 34.0665 323.207 cv
30.8575 327.018 28.9223 331.933 28.9223 337.293 cv
28.9223 405.146 li
28.9223 417.221 38.7457 427.043 50.8193 427.043 cv
258.891 427.043 li
270.964 427.043 280.787 417.221 280.787 405.146 cv
280.787 337.293 li
280.787 331.934 278.852 327.019 275.644 323.209 cv
275.367 322.749 275.07 322.3 274.757 321.866 cv
278.694 325.88 281.125 331.375 281.125 337.428 cv
281.125 405.371 li
281.125 417.632 271.151 427.606 258.891 427.606 cv
.847059 .847059 .847059 rgb
f
258.891 427.043 mo
50.8193 427.043 li
38.7457 427.043 28.9223 417.221 28.9223 405.146 cv
28.9223 337.293 li
28.9223 331.933 30.8575 327.018 34.0665 323.207 cv
33.7905 323.664 33.532 324.135 33.2934 324.616 cv
30.7554 328.152 29.2603 332.483 29.2603 337.157 cv
29.2603 404.921 li
29.2603 416.809 38.9321 426.48 50.8193 426.48 cv
258.891 426.48 li
270.778 426.48 280.449 416.809 280.449 404.921 cv
280.449 337.157 li
280.449 332.484 278.954 328.153 276.418 324.618 cv
276.178 324.136 275.921 323.667 275.644 323.209 cv
278.852 327.019 280.787 331.934 280.787 337.293 cv
280.787 405.146 li
280.787 417.221 270.964 427.043 258.891 427.043 cv
.831372 .831372 .831372 rgb
f
258.891 426.48 mo
50.8193 426.48 li
38.9321 426.48 29.2603 416.809 29.2603 404.921 cv
29.2603 337.157 li
29.2603 332.483 30.7554 328.152 33.2934 324.616 cv
33.0539 325.098 32.8339 325.591 32.6341 326.095 cv
30.708 329.289 29.5987 333.029 29.5987 337.022 cv
29.5987 404.695 li
29.5987 416.397 39.1182 425.917 50.8193 425.917 cv
258.891 425.917 li
270.592 425.917 280.111 416.397 280.111 404.695 cv
280.111 337.022 li
280.111 333.029 279.002 329.289 277.076 326.095 cv
276.876 325.592 276.657 325.099 276.418 324.618 cv
278.954 328.153 280.449 332.484 280.449 337.157 cv
280.449 404.921 li
280.449 416.809 270.778 426.48 258.891 426.48 cv
.815686 .815686 .815686 rgb
f
258.891 425.917 mo
50.8193 425.917 li
39.1182 425.917 29.5987 416.397 29.5987 404.695 cv
29.5987 337.022 li
29.5987 333.029 30.708 329.289 32.6341 326.095 cv
32.4323 326.604 32.2515 327.122 32.0922 327.651 cv
30.7126 330.437 29.9365 333.574 29.9365 336.888 cv
29.9365 404.471 li
29.9365 415.985 39.3047 425.354 50.8193 425.354 cv
258.891 425.354 li
270.405 425.354 279.773 415.985 279.773 404.471 cv
279.773 336.888 li
279.773 333.574 278.998 330.438 277.618 327.651 cv
277.459 327.123 277.277 326.603 277.076 326.095 cv
279.002 329.289 280.111 333.029 280.111 337.022 cv
280.111 404.695 li
280.111 416.397 270.592 425.917 258.891 425.917 cv
.803922 .803922 .803922 rgb
f
258.891 425.354 mo
50.8193 425.354 li
39.3047 425.354 29.9365 415.985 29.9365 404.471 cv
29.9365 336.888 li
29.9365 333.574 30.7126 330.437 32.0922 327.651 cv
31.9297 328.19 31.7899 328.739 31.674 329.297 cv
30.7706 331.609 30.2745 334.124 30.2745 336.752 cv
30.2745 404.245 li
30.2745 415.574 39.4907 424.79 50.8193 424.79 cv
258.891 424.79 li
270.219 424.79 279.436 415.574 279.436 404.245 cv
279.436 336.752 li
279.436 334.124 278.939 331.609 278.036 329.297 cv
277.92 328.739 277.78 328.191 277.618 327.651 cv
278.998 330.438 279.773 333.574 279.773 336.888 cv
279.773 404.471 li
279.773 415.985 270.405 425.354 258.891 425.354 cv
.780392 .780392 .780392 rgb
f
258.891 424.79 mo
50.8193 424.79 li
39.4907 424.79 30.2745 415.574 30.2745 404.245 cv
30.2745 336.752 li
30.2745 334.124 30.7706 331.609 31.674 329.297 cv
31.5544 329.872 31.4603 330.456 31.3926 331.048 cv
30.8846 332.818 30.6123 334.686 30.6123 336.617 cv
30.6123 404.02 li
30.6123 415.162 39.6772 424.227 50.8193 424.227 cv
258.891 424.227 li
270.033 424.227 279.098 415.162 279.098 404.02 cv
279.098 336.617 li
279.098 334.686 278.826 332.818 278.318 331.049 cv
278.25 330.457 278.156 329.872 278.036 329.297 cv
278.939 331.609 279.436 334.124 279.436 336.752 cv
279.436 404.245 li
279.436 415.574 270.219 424.79 258.891 424.79 cv
.764706 .764706 .764706 rgb
f
258.891 424.227 mo
50.8193 424.227 li
39.6772 424.227 30.6123 415.162 30.6123 404.02 cv
30.6123 336.617 li
30.6123 334.686 30.8846 332.818 31.3926 331.048 cv
31.322 331.666 31.2803 332.292 31.2689 332.926 cv
31.0597 334.08 30.9502 335.269 30.9502 336.481 cv
30.9502 403.795 li
30.9502 414.751 39.8638 423.664 50.8193 423.664 cv
258.891 423.664 li
269.846 423.664 278.76 414.751 278.76 403.795 cv
278.76 336.481 li
278.76 335.269 278.65 334.08 278.441 332.926 cv
278.43 332.292 278.388 331.667 278.318 331.049 cv
278.826 332.818 279.098 334.686 279.098 336.617 cv
279.098 404.02 li
279.098 415.162 270.033 424.227 258.891 424.227 cv
.74902 .74902 .74902 rgb
f
258.891 423.664 mo
50.8193 423.664 li
39.8638 423.664 30.9502 414.751 30.9502 403.795 cv
30.9502 336.481 li
30.9502 335.269 31.0597 334.08 31.2689 332.926 cv
31.2667 333.045 31.2657 333.164 31.2657 333.283 cv
31.2657 403.119 li
31.2657 403.119 li
31.2657 403.525 31.2781 403.928 31.3025 404.327 cv
31.702 414.747 40.3036 423.101 50.8193 423.101 cv
258.891 423.101 li
269.404 423.101 278.005 414.751 278.407 404.334 cv
278.432 403.932 278.444 403.527 278.444 403.119 cv
278.444 333.283 li
278.444 333.283 li
278.444 333.164 278.443 333.045 278.441 332.926 cv
278.65 334.08 278.76 335.269 278.76 336.481 cv
278.76 403.795 li
278.76 414.751 269.846 423.664 258.891 423.664 cv
.729412 .729412 .729412 rgb
f
258.891 423.101 mo
50.8193 423.101 li
40.3036 423.101 31.702 414.747 31.3025 404.327 cv
31.9281 414.549 40.4425 422.673 50.8193 422.673 cv
258.89 422.673 li
258.89 422.673 li
258.891 422.673 li
268.567 422.673 276.624 415.608 278.175 406.365 cv
278.287 405.699 278.365 405.021 278.407 404.334 cv
278.005 414.751 269.404 423.101 258.891 423.101 cv
.709804 .709804 .709804 rgb
f
258.891 422.673 mo
258.891 422.673 li
268.567 422.673 276.624 415.608 278.175 406.365 cv
276.624 415.608 268.567 422.673 258.891 422.673 cv
31.2657 403.119 mo
31.2657 403.119 li
31.2657 333.283 li
31.2657 333.164 31.2667 333.045 31.2689 332.926 cv
31.2803 332.292 31.322 331.666 31.3926 331.048 cv
31.4603 330.456 31.5544 329.872 31.674 329.297 cv
31.7899 328.739 31.9297 328.19 32.0922 327.651 cv
32.2515 327.122 32.4323 326.604 32.6341 326.095 cv
32.8339 325.591 33.0539 325.098 33.2934 324.616 cv
33.532 324.135 33.7905 323.664 34.0665 323.207 cv
34.3444 322.747 34.6398 322.3 34.9535 321.865 cv
35.2726 321.423 35.61 320.994 35.964 320.581 cv
36.3276 320.156 36.7093 319.747 37.1073 319.355 cv
37.5246 318.944 37.9602 318.552 38.4127 318.18 cv
38.8978 317.78 39.4026 317.404 39.925 317.052 cv
40.5034 316.662 41.104 316.303 41.7238 315.976 cv
42.4691 315.582 43.2426 315.236 44.0405 314.94 cv
45.2681 314.485 46.5531 314.15 47.8818 313.949 cv
48.8403 313.804 49.821 313.729 50.8193 313.729 cv
258.891 313.729 li
259.889 313.729 260.87 313.804 261.828 313.949 cv
263.157 314.15 264.442 314.485 265.669 314.94 cv
266.467 315.236 267.241 315.582 267.986 315.976 cv
268.606 316.303 269.207 316.663 269.785 317.052 cv
270.307 317.404 270.812 317.78 271.297 318.179 cv
271.75 318.552 272.185 318.944 272.602 319.355 cv
273.001 319.747 273.383 320.157 273.746 320.581 cv
274.101 320.995 274.438 321.423 274.757 321.866 cv
275.07 322.3 275.367 322.749 275.644 323.209 cv
275.921 323.667 276.178 324.136 276.418 324.618 cv
276.657 325.099 276.876 325.592 277.076 326.095 cv
277.277 326.603 277.459 327.123 277.618 327.651 cv
277.78 328.191 277.92 328.739 278.036 329.297 cv
278.156 329.872 278.25 330.457 278.318 331.049 cv
278.388 331.667 278.43 332.292 278.441 332.926 cv
278.443 333.045 278.444 333.164 278.444 333.283 cv
278.444 333.283 li
278.444 322.501 269.673 313.729 258.89 313.729 cv
50.8193 313.729 li
40.0371 313.729 31.2657 322.501 31.2657 333.283 cv
31.2657 403.119 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 154.855 422.673 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 154.855 422.673 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
258.89 422.673 mo
50.8193 422.673 li
40.4425 422.673 31.9281 414.549 31.3025 404.327 cv
31.2781 403.928 31.2657 403.525 31.2657 403.119 cv
31.2657 403.119 li
31.2657 333.283 li
31.2657 322.501 40.0371 313.729 50.8193 313.729 cv
258.89 313.729 li
269.673 313.729 278.444 322.501 278.444 333.283 cv
278.444 333.283 li
278.444 403.119 li
278.444 403.527 278.432 403.932 278.407 404.334 cv
278.365 405.021 278.287 405.699 278.175 406.365 cv
276.624 415.608 268.567 422.673 258.89 422.673 cv
258.89 422.673 li
50.8193 314.433 mo
40.4258 314.433 31.9703 322.889 31.9703 333.283 cv
31.9703 403.119 li
31.9703 413.513 40.4258 421.969 50.8193 421.969 cv
258.891 421.969 li
269.285 421.969 277.74 413.513 277.74 403.119 cv
277.74 333.283 li
277.74 322.889 269.285 314.433 258.891 314.433 cv
50.8193 314.433 li
258.891 417.79 mo
50.8193 417.79 li
42.7295 417.79 36.1479 411.209 36.1479 403.119 cv
36.1479 333.283 li
36.1479 325.193 42.7295 318.611 50.8193 318.611 cv
258.891 318.611 li
266.98 318.611 273.562 325.193 273.562 333.283 cv
273.562 403.119 li
273.562 411.209 266.98 417.79 258.891 417.79 cv
36.8525 403.119 mo
36.8525 403.119 li
36.8525 410.833 43.1055 417.086 50.8193 417.086 cv
258.891 417.086 li
266.604 417.086 272.857 410.833 272.857 403.119 cv
272.857 333.283 li
272.857 333.283 li
272.857 333.238 272.857 333.193 272.857 333.148 cv
272.784 325.496 266.559 319.315 258.891 319.315 cv
258.891 319.315 li
258.89 319.315 258.89 319.315 258.89 319.315 cv
50.8193 319.315 li
43.1055 319.315 36.8525 325.569 36.8525 333.283 cv
36.8525 403.119 li
36.8525 403.119 li
level3{
gsave
clp
[6.67089e-15 -108.944 108.944 6.67089e-15 154.855 422.673 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.67089e-15 -108.944 108.944 6.67089e-15 154.855 422.673 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
258.891 421.969 mo
50.8193 421.969 li
40.4258 421.969 31.9703 413.513 31.9703 403.119 cv
31.9703 333.283 li
31.9703 322.889 40.4258 314.433 50.8193 314.433 cv
258.891 314.433 li
269.285 314.433 277.74 322.889 277.74 333.283 cv
277.74 403.119 li
277.74 413.513 269.285 421.969 258.891 421.969 cv
32.6743 403.119 mo
32.6743 403.119 li
32.6743 413.124 40.8144 421.265 50.8193 421.265 cv
258.891 421.265 li
268.896 421.265 277.036 413.124 277.036 403.119 cv
277.036 333.283 li
277.036 333.283 li
277.036 323.277 268.896 315.138 258.891 315.138 cv
50.8193 315.138 li
40.8144 315.138 32.6743 323.277 32.6743 333.283 cv
32.6743 403.119 li
32.6743 403.119 li
258.891 418.494 mo
50.8193 418.494 li
42.3414 418.494 35.4439 411.597 35.4439 403.119 cv
35.4439 333.283 li
35.4439 324.805 42.3414 317.907 50.8193 317.907 cv
258.891 317.907 li
267.369 317.907 274.267 324.805 274.267 333.283 cv
274.267 403.119 li
274.267 411.597 267.369 418.494 258.891 418.494 cv
50.8193 318.611 mo
42.7295 318.611 36.1479 325.193 36.1479 333.283 cv
36.1479 403.119 li
36.1479 411.209 42.7295 417.79 50.8193 417.79 cv
258.891 417.79 li
266.98 417.79 273.562 411.209 273.562 403.119 cv
273.562 333.283 li
273.562 325.193 266.98 318.611 258.891 318.611 cv
50.8193 318.611 li
level3{
gsave
clp
[6.58466e-15 -107.536 107.536 6.58466e-15 154.855 421.969 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.58466e-15 -107.536 107.536 6.58466e-15 154.855 421.969 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
258.891 419.903 mo
50.8193 419.903 li
41.5645 419.903 34.0351 412.374 34.0351 403.119 cv
34.0351 333.283 li
34.0351 324.027 41.5645 316.499 50.8193 316.499 cv
258.891 316.499 li
268.146 316.499 275.675 324.027 275.675 333.283 cv
275.675 403.119 li
275.675 412.374 268.146 419.903 258.891 419.903 cv
50.8193 317.907 mo
42.3414 317.907 35.4439 324.805 35.4439 333.283 cv
35.4439 403.119 li
35.4439 411.597 42.3414 418.494 50.8193 418.494 cv
258.891 418.494 li
267.369 418.494 274.267 411.597 274.267 403.119 cv
274.267 333.283 li
274.267 324.805 267.369 317.907 258.891 317.907 cv
50.8193 317.907 li
level3{
gsave
clp
[6.4984e-15 -106.127 106.127 6.4984e-15 154.855 421.264 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.4984e-15 -106.127 106.127 6.4984e-15 154.855 421.264 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
258.891 421.265 mo
50.8193 421.265 li
40.8144 421.265 32.6743 413.124 32.6743 403.119 cv
32.6743 403.119 li
32.6743 333.283 li
32.6743 323.277 40.8144 315.138 50.8193 315.138 cv
258.891 315.138 li
268.896 315.138 277.036 323.277 277.036 333.283 cv
277.036 333.283 li
277.036 403.119 li
277.036 413.124 268.896 421.265 258.891 421.265 cv
50.8193 315.419 mo
40.9693 315.419 32.9565 323.433 32.9565 333.283 cv
32.9565 403.119 li
32.9565 412.969 40.9693 420.982 50.8193 420.982 cv
258.891 420.982 li
268.74 420.982 276.754 412.969 276.754 403.119 cv
276.754 333.283 li
276.754 323.433 268.74 315.419 258.891 315.419 cv
50.8193 315.419 li
258.891 420.185 mo
50.8193 420.185 li
41.4086 420.185 33.7529 412.529 33.7529 403.119 cv
33.7529 333.283 li
33.7529 323.872 41.4086 316.217 50.8193 316.217 cv
258.891 316.217 li
268.301 316.217 275.957 323.872 275.957 333.283 cv
275.957 403.119 li
275.957 412.529 268.301 420.185 258.891 420.185 cv
50.8193 316.499 mo
41.5645 316.499 34.0351 324.027 34.0351 333.283 cv
34.0351 403.119 li
34.0351 412.374 41.5645 419.903 50.8193 419.903 cv
258.891 419.903 li
268.146 419.903 275.675 412.374 275.675 403.119 cv
275.675 333.283 li
275.675 324.027 268.146 316.499 258.891 316.499 cv
50.8193 316.499 li
level3{
gsave
clp
[6.4984e-15 -106.127 106.127 6.4984e-15 154.855 421.264 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.4984e-15 -106.127 106.127 6.4984e-15 154.855 421.264 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
258.891 420.982 mo
50.8193 420.982 li
40.9693 420.982 32.9565 412.969 32.9565 403.119 cv
32.9565 333.283 li
32.9565 323.433 40.9693 315.419 50.8193 315.419 cv
258.891 315.419 li
268.74 315.419 276.754 323.433 276.754 333.283 cv
276.754 403.119 li
276.754 412.969 268.74 420.982 258.891 420.982 cv
50.8193 316.217 mo
41.4086 316.217 33.7529 323.872 33.7529 333.283 cv
33.7529 403.119 li
33.7529 412.529 41.4086 420.185 50.8193 420.185 cv
258.891 420.185 li
268.301 420.185 275.957 412.529 275.957 403.119 cv
275.957 333.283 li
275.957 323.872 268.301 316.217 258.891 316.217 cv
50.8193 316.217 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[245.28 0 0 107.04 32.16 28.08 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 511 
/H 223 
/M[511 0 0 -223 0 223 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 511 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFK"?QFn%+asK"ZcLK"ZcLK"ZcL
K"^E^K"ZcLK"ZcLrk4$%K#*&TK#*&TK#*&TK#*&TK#*&TK#.,rNl?UhK#N>\K#N>\K#N>\K#N>\K#N>\
m)>=5K#rVdK$!9!K#rVdK#rVdK#rVdK#rVdqoOZ=K$AnlK$AnlK$AnlK$AnlK$AnlK$El2OjJ^,K$]+r
K$]+rK$]+rK$]+rK$]+rl-P%4K%5J'K%5J'K%5J'K%5J'K%5J'K%9YHMqN^8K%Yb/K%Yb/K%Yb/K%Yb/
K%Yb/n(Er]K&)%7K&)%7K&)%7K&,\IK&)%7K&)%7rnW:eK&M=?K&M=?K&M=?K&M=?K&M=?K&QC]NoblS
K&qUGK&qUGK&qUGK&qUGK&qUGm,aSuK'@mOK'DOaK'@mOK'@mOK'@mOK'@mOqrrq(K'e0WK'e0WK'e0W
K'e0WK'e0WK'i-rOn"%nK(4H_K(4H_K(4H_K(4H_K(4H_l1'AuK(X`gK(X`gK(X`gK(X`gK(X`gK(\p3
Mtqu#K)(#oK)(#oK)(#oK)(#oK)(#on+i4CK(srmK(srmK(srmK)"U*K(srmK(srmK(srmK(srmK(srm
K(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srmK(srml1fl*K(srmK(srmK(srmK)#6<
M"ZGoK(afiK(afiK(afiK(afiK(afio(J4=K(X`gK(X`gK(X`gK(X`gK(X`gK(\C$K(+B]K(+B]K(+B]
K(+B]K(+B]K(+B]q!a4)K'.aKK'.aKK'.aKK'.aKK'.aKK'2UcPhUfEK%kn3K%kn3K%kn3l.^gEK%kn3
K%p:ZKuS_aK#WD^K#WD^K#WD^K#WD^K#WD^ou<#lJuXF&JuXF&JuXF&JuXF&JuXF&Ju\1;Q[aU:Jq&B%
l$n;7Jq&B%Jq&B%Jq&B%Jq*ZILfT+.Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(
Jl[J(kuNC:Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl_>@PZ<<8JlRD&
JlRD&JlRD&kuE=8JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&JlRD&
JlV/;QW/Q9JlI>$ku<76JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$
JlI>$JlI>$JlI>$JlLu6JlI>$JlI>$JlI>$JlI>$JlI>$JlI>$pf*/MJl@8"Jl@8"Jl@8"Jl@8"Jl@8"
Jl@8"Jl@8"Jl@8"Jl@8"JlCo4Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"Jl@8"
Jl@8"Jl@8"Jl@8"lr06KJl71uJl:i2Jl71uJl71uJl71uJl71uJl71uJl71uJl71uJl71uJl71uJl71u
Jl71uJl71uJl71uJl71uJl71uJl71uku*+1Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+s
Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl1c0Jl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+sJl.+s
Jl.+sJl.+sJl.+sJl.+sJl.+slqs*GJl%%qJl(].Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%q
Jl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%qJl%%qktlt-JkptoJkptoJkptoJkptoJkptoJkptoJkpto
JkptoJkptoJkptoJkptoJkptoJkptoJkptoJkptoJktW,JkptoJkptoJkptoJkptoJkptoJkptoJkpto
JkptoohUTCJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkkQ*JkgnmJkgnmJkgnmJkgnmJkgnmJkgnm
JkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmJkgnmktZh)Jk^hkJk^hkJk^hkJk^hkJk^hk
Jk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJk^hkJkbK(Jk^hkJk^hkr_8)?JkUbiJkUbi
JkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkYE&JkUbiJkUbiJkUbiJkUbi
JkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiJkUbiktH\%JkL\gJkL\gJkL\g
JkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkL\gJkP?$JkL\gJkL\gr_%r;
JkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkG9"JkCVeJkCVe
JkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVeJkCVekt6P!Jk:Pc
Jk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk:PcJk>2uJk:Pc
Jk:Pcr^hf7Jk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk1JaJk5,s
Jk1JaJk1JaJk1JaJk1JaqacN5Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_
Jk,&qJk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_
Jk(D_ksp=qJk(D_Jk,f1KgpY`Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]
Jjt>]Jjt>]ksg7oJjt>]Jjt>]Jjt>]Jk#W,LdcnaJjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[
Jjk8[Jjk8[Jjk8[ks^1mJjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[
Jjk8[Jjk8[Jjk8[JjnomJjk8[Jjk8[r^DN/Jjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2YJjb2Y
Jjb2YJjb2YJjb2YJjb2YJjeikJjb2YJjb2YJjb2YJjb2Yqa?6-JjY,WJjY,WJjY,WJjY,WJjY,WJjY,W
JjY,WJjY,WJjY,WJjY,WJjY,WJj\ciJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,WJjY,W
JjY,WJjY,WmmE=+JjP&UJjP&UJjP&UJjS]gJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&U
JjP&UJjP&UJjP&UJjP&UJjP&UJjP&UJjP&UksBtgJjP&UJjP&UJjP&UJjT?$Ld?VYJjFuSJjFuSJjFuS
JjFuSJjFuSJjFuSJjFuSJjFuSJjFuSJjFuSJjFuSks9neJjFuSJjFuSJjFuSJjFuSJjFuSJjK/tMa2kZ
Jj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQks0hcJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQ
Jj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJj=oQJjAQcJj=oQJj=oQJj=oQJj=oQq`os%Jj4iO
Jj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj4iOJj8KaJj4iOJj4iOJj4iOJj4iOJj4iO
Jj4iOpcj[#Jj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj/E_Jj+cMJj+cMJj+cMJj+cM
Jj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMJj+cMlopb!Jj"]KJj&?]Jj"]KJj"]KJj"]K
Jj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KJj"]KkrjV]Jj"]KJj"]K
Jj"]KJj"]KJj"]KJj&llM`cSRJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIJinWIkraP[JinWI
JinWIJinWIJinWIJinWIJinWIJinWIJir]gN]VhSJieQGJieQGJieQGJieQGJieQGJieQGJieQGkrXJY
JieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJieQGJii3Y
JieQGJieQGJieQGJieQGJieQGJieQGpcFBpJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KE
Ji`-WJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEJi\KEofA*nJiSECJiSECJiSECJiSECJiSECJiSEC
JiSECJiW'UJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSECJiSEC
JiSECJiSECkrF>TJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AJiJ?AJiN!SJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AJiJ?Aof.sjJiA9?JiA9?JiA9?JiA9?
JiA9?JiA9?JiA9?JiDpQJiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?JiA9?ni)[hJi83=
Ji83=Ji83=Ji83=Ji83=Ji;jOJi83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=
Ji83=Ji83=Ji83=Ji83=Ji83=kr+,OJi83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji83=Ji<9[N\uDGJi/-;
Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;kr"&MJi/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;
Ji3*VOYhYHJi&'9Ji&'9Ji&'9Ji&'9Ji&'9kqmuKJi&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9
Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji&'9Ji)^KJi&'9Ji&'9r\T<bJhr!7Jhr!7Jhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7JhuXIJhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7Jhr!7
Jhr!7Jhr!7Jhr!7nhZC`Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5JhlRGJhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5
Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5Jhhp5kq[iGJhhp5Jhm<\Ke\06Jh_j3Jh_j3
Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3kqRcEJh_j3Jh_j3Jh_j3Jh_j3
Jh_j3Jh_j3Jh_j3Jh_j3Jh_j3JhcgNOYDA@JhVd1JhVd1JhVd1JhVd1JhVd1kqI]CJhVd1JhVd1JhVd1
JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhVd1JhZXIPV7VAJhM^/JhM^/JhM^/kq@WAJhM^/JhM^/
JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhM^/JhQ@AJhM^/JhM^/
JhM^/JhM^/q_*b*JlRD&JlRD&JlRD&JlRD&JlRD&JlVAAOg'GAK!9j2K!9j2K!9j2K!9j2K!9j2l*,cn
K%bh1K%bh1K%bh1K%bh1K%bh1K%g"RMsQ&^K'\*UK'\*UK'\*UK'\*UK'\*Un*H;/K(4H_K(4H_K(4H_
K(8*qK(4H_K(4H_rpb^6K(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(FTcK(J@#
QgfUrK(+B]l0s;oK(+B]K(+B]K(+B]K(/[,M!KZYK'S$SK'S$SK'S$SK'S$SK'S$So';G$K'.aKK'.aK
K'.aKK'.aKK'.aKK'2C]K&_ICK&_ICK&_ICK&_ICK&_ICK&_ICpu@:hK&2+9K&2+9K&2+9K&2+9K&2+9
K&5tQPhL`CK%bh1K%bh1K%bh1l.UaCK%bh1K%g4XL"1e*K%5J'K%5J'K%5J'K%5J'K%5J'p!o)LK$]+r
K$]+rK$]+rK$]+rK$]+rK$`l2Qct'*K$8hjl-+b'K$8hjK$8hjK$8hjK$=,9LrY+fK#`J`K#`J`K#`J`
K#`J`K#`J`o#Hm1K#<2XK#<2XK#<2XK#<2XK#<2XK#?ijK"ciNK"ciNK"ciNK"ciNK"ciNK"ciNpqDZs
K"6KDK"6KDK"6KDK"6KDK"6KDK":?\PdQ+NK!g3<K!g3<K!g3<l*Z,NK!g3<K!kTcKs605K!9j2K!9j2
K!9j2K!9j2K!9j2orsIXJujR*JujR*JujR*JujR*JujR*Jun=?Q`#G5Ju=3ul)0-2Ju=3uJu=3uJu=3u
JuALDLnfQsJtmpmJtmpmJtmpmJtmpmJtmpmntV>>JtIXeJtIXeJtIXeJtIXeJtIXeJtM;"Jt%@]Jt%@]
Jt%@]Jt%@]Jt%@]Jt%@]pm[2-JsM"SJsM"SJsM"SJsM"SJsM"SJsPkkP`p]_Js1eMJs1eMJs1eMl'$^_
Js1eMJs61tKoUbFJrYGCJrYGCJrYGCJrYGCJrYGCoo>&iJr5/;Jr5/;Jr5/;Jr5/;Jr5/;Jr8oPQ\C$F
Jq\f1l%O_CJq\f1Jq\f1Jq\f1Jqa)ULk:51JqAT+JqAT+JqAT+JqAT+JqAT+nq*!QJpr<#Jpr<#Jpr<#
Jpr<#Jpr<#Jpus5JpDrnJpDrnJpDrnJpDrnJpDrnJpDrnpj%d?JouZfJouZfJouZfJouZfJouZfJp$O)
P];:pJoQB^JoQB^JoQB^l#D;pJoQB^JoUd0Kl)EYJo-*VJo-*VJo-*VJo-*VJo-*Vokf_&JnTaLJnTaL
JnTaLJnTaLJnTaLJnXLaQXk\YJn0IDl"#BVJn0IDJn0IDJn0IDJn0IDJn0IDJn0IDJn0IDJn0IDJn0ID
Jn4F_J,~>

%%EndBinary
grestore
np
258.891 417.086 mo
50.8193 417.086 li
43.1055 417.086 36.8525 410.833 36.8525 403.119 cv
36.8525 403.119 li
36.8525 333.283 li
36.8525 325.569 43.1055 319.315 50.8193 319.315 cv
258.891 319.315 li
266.559 319.315 272.784 325.496 272.857 333.148 cv
272.857 333.193 272.857 333.238 272.857 333.283 cv
272.857 333.283 li
272.857 403.119 li
272.857 410.833 266.604 417.086 258.891 417.086 cv
38.2612 397.484 mo
38.2612 403.119 li
38.2612 410.044 43.8945 415.677 50.8193 415.677 cv
258.891 415.677 li
265.816 415.677 271.449 410.044 271.449 403.119 cv
271.449 397.484 li
271.449 404.409 265.816 410.042 258.891 410.042 cv
50.8193 410.042 li
43.8945 410.042 38.2612 404.409 38.2612 397.484 cv
50.8193 320.315 mo
43.6695 320.315 37.8525 326.133 37.8525 333.283 cv
37.8525 355.874 li
271.857 355.874 li
271.857 333.283 li
271.857 326.133 266.041 320.315 258.891 320.315 cv
50.8193 320.315 li
level3{
gsave
clp
[5.9867e-15 -97.7702 97.7702 5.9867e-15 154.855 417.086 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.9867e-15 -97.7702 97.7702 5.9867e-15 154.855 417.086 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
258.891 415.677 mo
50.8193 415.677 li
43.8945 415.677 38.2612 410.044 38.2612 403.119 cv
38.2612 397.484 li
38.2612 404.409 43.8945 410.042 50.8193 410.042 cv
258.891 410.042 li
265.816 410.042 271.449 404.409 271.449 397.484 cv
271.449 403.119 li
271.449 410.044 265.816 415.677 258.891 415.677 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[234.72 0 0 19.2 37.44 33.84 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 489 
/H 40 
/M[489 0 0 -40 0 40 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 489 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#I<"O2HReK#<2XK#<2XK#=(q
K#<2XK#<2XK#<2XK#<2XK#<2XK#<2XK#<2XK#>mO[D[[8K#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#F.s
K#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#HWdU;_`'K#N>\K#N>\K#N>\K#N>\K#O4u
K#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZS&Bos
K#E8ZQ,N+0K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\S&Kuu
K#N>\K#N>\K#N>\W5[N2K#WD^K#WD^K#WD^K#WD^K#WD^K#ZchU;_`'K#N>\K#N>\K#N>\K#N>\K#O4u
K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#N>\K#RB$O2cdkK#WD^K#WD^K#X;"
K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#Z*U[Dda:K#N>\K#N>\K#N>\K#N>\K#NPbqo46-K#WD^
S&U'"K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#WD^K#X;"
K#WD^K#WD^K#WD^K#WD^K#WD^K#YFBaN&nQK#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#aA$
K#`J`K#a.sm`'juK#WD^K#WD^K#WD^K#WD^K#WD^cGm94K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`
S&^-$K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`iQ%\6K#iPbK#iPbK#iPbK#iPbK#iPb
S&g3&K#iPbK#iPbK#iPbK#iPbK#iPb]?&(6K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`K#`J`
S&^-$K#`J`Q,i=6K#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPbK#iPb
S&g3&K#iPbK#iPbK#iPbW6!`8K#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVdK#rVd
S&p0~>

%%EndBinary
grestore
np
271.857 355.874 mo
37.8525 355.874 li
37.8525 333.283 li
37.8525 326.133 43.6695 320.315 50.8193 320.315 cv
258.891 320.315 li
266.041 320.315 271.857 326.133 271.857 333.283 cv
271.857 355.874 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 450 ]ct
[235.68 0 0 36.96 36.96 93.36 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 491 
/H 77 
/M[491 0 0 -77 0 77 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 491 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 491 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 491 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&MuSD/
K)^H&PQ1.OK)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$K)UB$MuJ>-
K)UB$K)UB$K)UB$V#K9MK)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"K)L<"MuA8+
K)L<"K)L<"K)L<"K)L<"K)L<"[JeDKK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5uMu82)
K)C5uK)C5uK)C5uK)C5uK)C5uK)C5uK)C5u`r*OIK):/sK):/sK):/sK):/sK):/sK):/sK):/sMu/,'
K):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sK):/sfDDZGK)1)qK)1)qK)1)qK)1)qK)1)qMu&&%
K)1)qK)1)qK)1)qK)1)qK)1)q[JJ2EK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#oMtqu#
K)(#oK)(#oK)(#oK)(#oK)(#oK)(#oK)(#o`qd=CK(srmK(srmK(srmK(srmK(srmK(srmK(srmMtho!
K(srmK(srmK(srmV"ijAK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkK(jlkMt_ht
K(jlkK(jlkK(jlkK(jlkK(jlk[J.u?K(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiK(afiMtVbr
K(afiPP4M=K(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gK(X`gMtM\p
K(X`gK(X`gK(X`gV"NX;K(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeK(OZeMtDVn
K(OZeK(OZeK(OZeK(OZeK(OZe[Ihc9K(FTcK(FTcK(FTcK(FTcK(FTcK(J3tS+;1%K(=NaK(=NaK(=ij
K(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(=NaK(Aa.MXc;gK(4ch
K(4H_K(4H_K(4H_K(4H_K(4H_K(4H_K(4H_K(4H_K(4H_K(7I_XRLi2K(+B]K(+B]K(+B]K(+B]K(+]f
K(+B]K(+B]K(+B]K(+B]K(+B]K(-2;cL6ARK("<[K("<[K("<[K("<[K("<[K("<[K("<[K("<[K("Wd
K("<[K("<[K("<[K("<[K("<[K("<[K("<[K($_J^$^L?K'n6YK'n6YK'n6YK'n6YK'n6YK'n6YK'nQb
K'n6YK'n6YK'n6YK'oH&hsH$_K'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'e0WK'eK`
K'\*UK'\*UK'\*UK'\*UK'\*UK'\*UK'\*UK'\*UK'\*UK'\*UK'\*UK'_^fS*P[lK'S$SK'S$SK'S?\
K'S$SK'S$SK'S$SK'S$SK'S$SK'S$SK'S$SK'UGB^$:47K'IsQK'IsQK'IsQK'IsQK'IsQK'IsQK'J9Z
K'IsQK'IsQK'IsQK'K/shs#aWK'@mOK'@mOK'@mOK'@mOK'@mOK'@mOK'@mOK'@mOK'@mOK'@mOK'A3X
K'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK'7gMK';F^S*,CdK'.aKK'.aKK'/'T
K'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'.aKK'1/:^#jq/K'%[IK'%[IK'%[IK'%[IK'%[IK'%[IK'&!R
K'%[IK'%[IK'%[IK'&lkhrTIOK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qUGK&qpP
K&hOEK&hOEK&hOEK&hOEK&hOEK&j?#cJsN:K&_ICK&_ICK&_ICK&_ICK&_ICK&_ICK&_ICK&_ICK&_dL
K&_ICK&_ICK&_ICK&_ICK&_ICK&_ICK&_ICK&al2^#FY'K&VCAK&VCAK&VCAK&VCAK&VCAK&VCAK&V^J
K&VCAK&VCAK&VCAK&WTchr01GK&M=?K&M=?K&M=?K&M=?K&M=?fAWghK&D7=K&D7=K&D7=K&D7=K&D7=
Mr93FK&D7=K&D7=K&D7=K&D7=K&D7=[G]?fK&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;K&;1;
Mr0-DK&;1;PMbldK&2+9K&2+9K&2+9K&2+9K&2+9K&2+9K&2+9K&2+9K&2+9K&2+9K&2+9K&6=[J,~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.0.0
%%For: (Max) ()
%%Title: (1812.m40.i030.n009.S.c12.644232490 White buttons chrome frame. 3d realistic web glass elements oval rectangle square circle chrome white button, interface vector set.eps)
%%CreationDate: 12/26/2018 2:05 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9jnoCqkQ>hAc]i!LZqIDLnr&4KGnE*i\MM#ou/R5slus4O%0c9g1D=`2#`1*0rRl0di>qK5e\Fnb1$Cj,(iU])a4s25":
%Sde(*Q3a]/)^)kE>?sBK0(d_J1l>H&eF\&KgGFh7X-GNBB!W3_,_'M#^kqalDm[<^?EKZG#NVmcI"uX92#F?m<F%JO26@nW@K_-N
%5N@eX>OWA<JF;rKr]+8:7le9=L2'!1\D2uEfio^a`E2:&JZ$QoT&h#<L4\:kr+7$qT!WsQk_DFtO("94Pif&VF*^2hC2Lki6UC5B
%$!.C="r+bPFfK;Z5(RT$\8@!'.#UXSXFZtMn5gT/K#AI6?e/S[i')+_.#Irl-6'TbpJcYQ0NL3eXFeTfX99LT?s%YJfcQ:X"e[4d
%>Y3GVH+he-C2Fu8,XnsmkXt0-pCAW+oT.P_Ur^OY4qM9S.`MWOL5h%!J>ZibALHkcJGtn/ruDUil<6btg)Vb&gH";$kYR:)od/tF
%(S.S_]W<&hBJg8a'<Q^C0hZg-W9eu9<]/[u*[:-hG)Er`I+?ueW+NGi\fi++#j:#XVj>_Zk_LBR]9'@R?I,*B\=uiXVdh!qL]J-+
%Gb0K3MhqL*P%6fhq1-8;W8CEc4T(qdrTP#InjBrJjm]4LZG<YV:#jd&a.i_.1.RHb.j$U-;O<Sm.Nhjn@#AEFk=9WCm#".d[+fo_
%TnK55P:%E>+CZ]Y<-5-H8t%We+"d,_X@":!:o`ZYrO2S.IKs"t)E'2B_=OW4*uK-bnb6t"eiVhN>OB5LK;R=9V!DU`qmVYd1(/CN
%A(:1%oeM'TL'++SRNrqfQF;6emXaLkpn?UNSholR_(uWiRceYpn4gKiCL'bmBgs=0U#b"@hC_iXWGF)CT.9e30=K+PE-<[L<d96]
%E7pJb*7F[LAYE`:8Mi[Fbu3bR^j<idp'\2'+bTc+iAp4''_6Fjo2@[-Q)<"\n1FXgq<d?l!'P"OD?^V.6!<kHp#:gGh,k:%_Uq8l
%DpE'B-=Gr#WrJnsbm#ZTb19>lZ;n$02*IN,oAqXAa3_=Y4idrF!EK^b%a,F?/m<ji;+:-NNNYBqr&::8N5#Q"@U]Db.pk_Zm0X9"
%HG.i)p!t:3lU0GWkVqh'7h(Q2.Tn(nWE<'!<fP_.eu0G)JDBLu.Y56H<e!I_.8MTW4[j^NNNiZ3+bk)bdI(W=#>9/aJB-/bl\hg%
%C?l7TIae^:eS*LEOMgcI(oDoL8ht&2#"*r1[ZqT_@Lrfi&:h,k"+S4_(M'0H-9,)L8qG]JZ(J9(iZtYZ2MtKtpS69irQ,rr=.8fg
%]#@[aZ-t,4$ZMWb3CL>*`cMWJqc8D7eLP!_'_eZc.n95/_c&I';H?M3L'ob+MgH%W<^.1l_\!s#a+*\]?-o6S&`e`uj%-dVZ)n]/
%NbD?,Oc[1\jB&F[/Z+(uaT.lD`*bS`:$up/'Xs#uQnU"`N\28n0Ll2TNmZE0-&q8.%`TCZmA@*!QgkJ>p-?OE0%o'>F57b=c_+Wl
%p#g#\q_sZDaE=\<IF-J9#3b5iW!cDRFt$f,%qT6tQ03!GQ*m5MfC2TISjS5_qI(?gek3l3#tPD"LYnUFfHaE]/q*bCs8C]tpMUJ]
%*(/(&SY?i[8^"J3$d^4?LaPR=T_k`gMGbjjP2Hs%T&M/a@OPo.MP(5Q-'drVp2Ecg*e-J>J-4A(8c5,M$2?US($0n2+r)k)b&BqJ
%8.$V<Ec+Wil#'g&*CQD:lfLW^nk+)s_Dr2f1Kfi=ZC3&s4dDh,9Ti+j8NnRK`MA`_PK@>bW@EQf.[37MN5@'7_CL3^.Ztu+8OZKS
%::4[d-RQ(o/2qQE&i#P[$&SrAOq;kO4EMg2*7%bG-r7(!0][rqY[IB\'b<;J;tKgO1Qkt@2AAXoaJBKD#aT+#-58/+^uJ+5L*TWF
%"#i1QDd@f@)cRJRkmF[?UOQTfg#"?hCqnI08g3>H=-?+/"OR8?+JDG-L[>9lNb!-%S.;A@;K+'QP)p!lrG"U/g_)$5KYFW@aW';E
%7>:Z='V/]2Cl1mU.3U"7Um.BAVHau6T7,674htAh)rc!p&.$MP^e6NXn&59K(m5eX1IQP<0dB>;84FkMoU7$SO?n7=E%GLU+>$L4
%,<9^!+?dK(c.&PEidS*'5^n.0,;]+(m>HUTa-V<0dCgh&ZMmMV96%/"F$Yg9\f>=H(q<\X3.18k'(@4,bP=s%\WT<4"^R4brS,U>
%&&o6!?]83\;e!48^8H(NHuC$u(6BcDJX\k/mq!nE"gFYnKm78=),Uf0('VSj)Q__f$4g+]0Jt81A;^Bcbn<>jruS;84-k6$!XEF%
%puFj]63Q9,$'&CZbTMB<K#g7U"nM,5-(Y]o4T9?58;[hi+lF5)%YA4nhY*TQ!MWA>C-`B+iC2h%jqrte&9r/e8!>nWQK!.J,+QGG
%r/dBK"Ss.L9aupBhhsiYJg&tQ6bi['0S0Ss+9PiD#SdPPJ8.2g1GHc<^d96LP)P0'KiHH-%u`s[b<bFpqhZ-rA5J:b'Yk5RJBCQ<
%d`-kGc%@2nJjQYkC9KBH$A!ZO0J(*r4<ji8a@qaoQkZ=$"A?"-*jR??Yl\/CTV;MY$4P%=*6!Kb`,VFN$ChCC,'-=NiDQ2g!s,&&
%^sKqSNbADSZbY.^9q,\BVI7@EdH@?fm@dCs1o=M-.7>NhRmj<,BpHN1!*XqKd\`608f_(]TJl&.QPuM6kQM:Ydd0fT"4\Tm)cUfF
%40*CT&"9"0UHJ2@pR4M_ktjdQ=FCje.HC%@oU\^<ds%Q8@f%T`T]^kMddG(?MA1giNc]"3c2[a9*(eIFfb\L4%.4qq)2BQ(<>h'&
%.?t%3<E#l]!kOs33hH\h*tLCT$c<MbND0HaX"ZXb0MKSB>_t.NnM#3m0Sn+aF-2"$C(`KPWPAK]_a#T$D8sJta26b)6+7I\go"OF
%9Z""^_;H`W&BVaRahVje!@nhH.]$MQ9u8S6_-eb.&Bm]s<Xi^R=V=1(<D87,QioQ>&k,Y/H'&bCOV'ke'?LDPF$u3JAFJ0.?j`7"
%\E->mCsalmWWA#X:fIg%&#b=h(TTGL<m=%2M1?=#W"iA)XBLar<iB>^>;$$/MoG@`5eg.S;M6</[#tD91L(oM4!6"<$c%fgJd.t?
%$D2u$8\><8Gb3qu)!>SJF:t9/VZP-oJG1hW^'OM[_`5F3hu\GFa?Ta*-nM<V=SG3.#KNS=(r.:%M'eu!3^IDp8;#!K!4*ep5VE7=
%$j(A.I)>;!b5m<%:e;RG"RHdV#4f2YMRD85a=0M#nY]@<0n`e!Q@hf8h,MHm`FJQL.;19P>Qu]n1cCdobAamB:tnrc6<dO>F34,%
%iCgO2!F9(M>GeW9%QbJ:?hBG<nm(&OCk+lj7GA7F?E(Xh3H3)-0*rNVGdJC%`1O^ca2+[jY?[1LYikr1?WaZ2Xk21Gd5CA,)eGP_
%0gIJQfI1DV%Z:pS`a\&K_P@EZ+C>X'&f>ml*omoLjIn<r32hIK#GFm/GAPbpQihX^66-GX,TCr0)gOu54=\>lUoha89bFUba6:EK
%XcC9NK?sk^%j2C5["-PZ_oRJ7LN9Z?5otPd+P+@L%UVm?mZ:`8!CTehM`YXJO6)fGH>pp@*6N8%pL$`'?S:Jkr6%G>7rXU15oCGF
%_iU`#?Q_k%,l4^,aC710]%7LP!A8H@A^'6P,KB7*pTk[s3;Aa:Pm_UPp71sS$X4@\p%fRe\esPeOb62VlcQNg>E1W&`?s-dL^%uZ
%a;8V\j:H^E1a<Lg_87Q4n-RT@X;AtqT*1*K82Hte@$H:A[&kEQ.&@><.8*/t6EJmE'$(j^j9_uD`7cX$9[KUUr<T0_Ki8IZH1`E1
%_(!0uP^P!P8NbD>W_kb;C.PdNjPZ7(LsiIIFcf;c+B>UW`"#3e>R9CM9IoDK.Wp;>$]LO6*$'t>99fO_:r,>\!HpG!,)Bb:/5Z^i
%:^5QL!K3!B!Drj?3"W_:?kNuZRf^!S#JihG_h6f5!g8?ZE#Ap:$#"m+.DQ2("U3oe_>s^25E^<CSX*''1a@F$5uR$[T"@pJ1mY93
%e6^Rh$.7>-*M,Vt3F3G%60VAerii#-OlIY+7?5,;7us:/!pSi4i[$G%!,,cb/I4%B-cm'Y3X,:eq4j'*g@@TUYIZfB!:XClSU!]?
%3XYF=4!&KZc9T<sB$85RjpP9R?XV+o=E=Ys495hY'G(&)"I`='Cqu882$Kh-!_%hE)j(5N9E_Ik#45(bS5`p!-:(e.6&/r9QfCB0
%'1'*k6,un(:K;p$d[geWnFS(]5oo>!:>)4(9h?h5"%ZRg^r3RVI]Z1K_4KesVK].6>noll=Ksk73epH3iZgf(.=6U3<h,2+9kP>>
%JL6Qf>U^ApKB%+\X=@YD$Q58O!N'6^&B4tiVZ>?CDi0&m91:sO.cErt),HcsWD`srT3@S=/mJ"R9h&?dU[8GY\b7;LF`HiggR$i)
%U3fJ'9D2U^l[g+Y4/M-*s%i$s<+>%pC?5,-.QR-q-=$2A$Z[57b5BBc3=^D]rqqI5hS8a[&ils"N*9W=!i$MJ28_F,0PZ/9$]J7s
%e1Bd]p;A(5JUcn/MYsgK;!9"4ZXWrRLpluk-[9(<7.O,\s7mW>Vs8csJfL?Y@8h?EXqCG[0$$nt_srIe_uHJ90$hJrpMWD#*Z35B
%GqSOgJ`'k/Hf6CWaAMM%LaN!O-X=R+4eh,FWb2K^0_f[?5]GckStZte!'KG]OZ7Te_;TWhQ'Oq)_I7^jW$.(Oo/I_SJckXaTSdOj
%kp^ik;=.1C/)6;-_tC*]4Y,mI$G:Jt&=q`PX9*eLL''-c&53eFf+W`r-4&(#$cK2W^oOnQi2?i2T(!A33-_WI5[ic)`QEa^K>`su
%>X]m-V&iI!H2rg'CIaa"FsOWRV^+6:6<@#lm3m=t'3jq*$hfa^PW+L!f>:.-#FbR7Er>0pT919^j!WK,?Zqgb-q#)9MTW`r_*5q[
%/0=XQ^-7eI_`%hNS;GKsAEuZ@CP#ORa"k:K9>LYGW<!\Xm=8Wf`@q]7/p[hA!3q5_8B4bM8;\-U9]-IrdRGn0%@$"$Jr?c#ihV33
%2JuAEEcI`nn2PC,#rPKN"](0cT>h=L+W&lB+92<LA!`0]Y!I]EMoSc`4kKpSlSWGP@:ft?g@lLD?.5\&\FH"H?1\bV<oRM&"Rs[B
%p1AkFIjE)7*ZD"&&SShCeZ3Cm&I%Ob@S]5bo]oQ;&0)V8V!pE@)i8kpaMFQV,dR%j#DKf]jCh@=*.25[;-bHA>qO4HT`c@X,5#VH
%Wk7'&=n$ra-lg/QFdG7!Hd]Om@EcRnN'n-kNCTaP\s/0D-m]G78Pulu*&N<kb<[E7'`dV)1S\$Dl?B]sR+.$d9](.^hH@#eB]Q<3
%S?q;rM]<NnrjQq7<@:9h=i-*=#*tJ+$NN_A3E^PTR=\_g,Xu.:r?7.RAM4og/nW;CN,26!0G<_F^dX^RYVc_H#l$mlk/j+p#Y,!"
%,lu2&^b.l(J6s@:.0W8\!QLci^F\#M$4L]DOp=D]Xmm\P7c=?Y!.bhQ;.6,*]'FX^3#[82qQK'AkR.="lh`X8r\OR'UG'\c_996@
%?h2Q:)S!A]Eu<a&DkZ@R4W!:l=O4sr([YO2nUMT.f>17o0r(as3M]dW-1/mE1pBr.CGJ2kQSZb!iJYZJcPX=mN5eN;.,,2"i2(*:
%D?_W7,[QW\@tR+d$e#5@l%.=n(/KT+7hCY-8!"WYfSe:]j_@BR)j,k+)P`k"CV:+qYa-DTQa#.92nI0j`[kTb$],Y$,obaV\KT?'
%%Z0U+'Q]RsfqHc9&9N,AQkfIV_OaWO1CACsiQbi1Z%TG+"&Ol]".ZL?7^VauNu)%tG_lS2<u11OK.)V-Y!i/V#^D1@71qSM;8W#0
%#H17;6_<F3dcVdo"WAu>BRrV\1n'CD(ML0@UBMS7'H27/qF<+%GF.rKQLcp#EnZbkOC.Q0UpYE-r;OrISCY/rUq7<$R/J9,p6N&Z
%Y&fo3&GEsU#>[i@ohB_cY$3ibDf8:jXWQ`m<XCW2m5@\!g=L&gI[0Wp:4<$&6+]4j4Q3+pDU!qh!:2?<lWO'CWpZJ0Kpl6CA+oAO
%a\CV6ZY/_k\"-%>I)N=`hs3;uV>pC5FD<u`aNY06o7XS5_/7b^2=$")8bO,]hQRZtak<u+GJd0ens5j?DJ4H&&cs93RhEU%U8j-?
%:TNV!FEA<<F7*`#?#&.828%+lh<bd?D-.X%,8Lp:$1s0"hX+EIHQ;:1,X++sEEg"Y'(&iWCmARsk)<Gp]u\kVcX,i%Q=uNim:%_m
%mOK*uN7])c36Rj]5FXF<osC#kPP-J1X+mUf)Y3;_lsY$Yg'+kmi0%;7Vj<P33Hei>;bt((dM\MXB4T$*0U&)*RIlH\!_-\4kh9@+
%.GKb9=UN.aN5,=<!Y3t-[0LnG/^AJ'fsc5Gl.NeQGP93ApXM&-h\/3Woc+u8,l!aXn""ss##-c9q&AYQZS*S'N^A*8`b:qg$+,U7
%%9u9[m:If)U!X(&XL"I,s36YM,(EC;eddiG`A9@):R3,K)X$5;TWKS%Jesdt2`MJ5M@#B@G<=Vfcck7tde@pP5deDH6qHuL]4lRT
%s(ofU)>X7Ipo2U,SmWtnlqs6\-.R'h5'Aj/m_>Fs!ZrPQR".qEnFXZ&B4f[$nf_/[@\E+OL^l[H;IE@^KI@sp@\!=Jal6e]7F8E.
%@=LHSWtoBV"l9l['k$OH2a#!^*+jVM+OCQ$%4i"$);+-EGN:ZqI87oA][81]^YuK1PDepW<%CcoBP0OG=5is$jU*-"(q\\]VbQ3n
%7k8u<3!PRk?u't1<sOlODCLN''t1ObmP0G![hXCNiWsCuGZs_uW/b72O5J@Ndq6=T@jsTUkZa8C7*ep07!D"2cD.[B?8L:%"fp`j
%oAE^#@d!tc1%t=V0.=ie$Y/o^qRk"ga,qF8FB\=HLOPs6TIj]]k6b&c>EjS5oc:H4Yr;db7C=6+6SiU]Q="fur;(n-S"m$/4$+=<
%^IJIJrG!e?A!]UY=2M5TNa"14Bt&hXdpG<'f_GG_n:V1mZ%5sZdWj:_1^X3k<#dL56jk/$k0Kb<(;6s9KjGG)kFC^$Mg>)5gU,lA
%#$Ymp%*18bXTA]13.T3gSn=(05WQk4p"p1H(;D$%l'W=:D`02GIa`oD\`4>-%Sq&(:&n;5H[(-do6o6jp63N9$lj0C*,P\uKBI1U
%4(@&Q[kkJ:ai=o#*'W:#4b+7_fs>#+F8URO%&]`OV1$E+mEQ4/hnSjNd8#%4Bm2okrX3<2\FY1.R'U*`hCiJO]8^J@1IUU+@t7cG
%2qY;Y'%F_c!S$uA4Jmm6^\QA;HJm;]?ZH>ZR4#Jq,l2Nb\7[>kMCCYu`nOhSjN@\tS.tejL>\0(CV6,71NfotLAVe"A'!.DkT7IG
%%eh6i7325#iZf9WVQ_//Ufc&dK9/D2.%2/s1[HC$?d$MS`tFc%7'B0ZKR8ZZ83*mTe\\NHhh-\drcB41_a=>]@j0`jKqFe-p>_IX
%nMRabeogP2B$T+cdh/cJFPXQ=b8<G#m),ZSB-ZeAg_2Y35?Btu@H;Rc3+[JP?IFT8Lc:C#NPI2I7LrV;0Et!.P%]lrC).Xm'S0#l
%_t.u%207K$1Bae.0d@(-O9'kZ"rWjRY[QbP&0SPH[Na+`e$,;Bf_QW!9b5%Xh[EoP^`fGBH[mMSTB/Jqk;cE-:(N!uMQ5[g?K^)Y
%\`\&:HVOtdc,ZoQHTjdj*/&3Ek6q/+pIk^&/hMp(?9to3@fK][pMYLmK00C/%[P^NU/bh"X;Ij7B+D+X%KoDu0am"+.kJ%`$#PRn
%<>V><(oRH9,pr0]lKA@%!cgik?.RE61B\37(%&]ceUHC?T'r'1rHAePFNsNA7XNa<d!L4Kms0SpT+;LPLSsT*?[<7LE[6_+:M<59
%#fT]'.C(j?^a:d^dS>`ns32,Ar>iH%TcPI*#WUlFBX*U]V*nkmncX!F+s#%8^&)^PcVFH3bbbTZ^KGt)clP]rU5uad?/'F"/GMc:
%f_ohi/G;V=en]&]#]Lf$H+@V_^](N/dR]K$<?*_/a9$PKOFWe4I>#--1IS6,qkYT)1]bJr&j:uVR%IiL2.2hENfMM:1E\`nP)CEM
%Gs4+OfqqVb)thhOhbG-c*D'?dF&rUH;/PXGKNmkm+:`nWS7GC>P)euGUY%KK]%6d6iRN)ooM;SmLR1l?h/4-b:0VXj".PBKC,WL!
%1rY>L/N*2^:-f&lde.eX-2OP<US6_7+g^[8(Yc7KWL&,Fg&*3;fZHJdp"/%RrmIeeqi`c^k-Am3>9ad4[@3?rlI;#DF%TC5Dllb]
%lu/ZKY4s-]:,gqG<-70.de5tdPAj^dp`X5`=*j-+B=:D,iIce*dj%.N5<mKtnGkr0!s%rqc+soX4HksX1J0i%6]!`"&MRu3g$U[)
%SZ6!LlBBu>qJ'JT\=$-HTXpP,)suW5W:Q,"_WgV\<VHUg4fP>+M_TgS9NXSrl"X/skWlWROj(Q3dio:,iah&;HE1!;"8u!3BotbW
%VPW.KSJBo5?bRB(S(K+@N2eitY2YXF,X"?u1d(FPhu$F;)5BC+CWqOieCnN`8&o_8:5dYCAuAe]6'#q`N1u@fD%uq3@p4<3OhdoV
%'!Yb(W2[s5d]>=MQI5CR/q9f8fMn8DJLs;D#IYG7h86I%=EY(qDI+nVAmsAXRi85`ePjq1/Sr&0YjHhJ,8R04/=:TEct-Y>/PNd1
%C%nr)YV>JD];?TA"B`OE3HsEi?Ti,$`V9BAK@Nl?.AVQJ.ZW#!_RaA_pmZl%/8m[^+V@5]9@hPIEC/O]OL*CeAn\DL<&=RFTtpg5
%<;l>YFa=Ij<WCX!N+1sV<NrS_IHlDbb,OXm50,1GYR*PZ\s7/:UpM%?U[EcbMH[E4!fq_*e4htUU<!>F9b@DhKn"pZr+s86r8'mN
%>:7mWDuB[?PAkifZ(J2JMT&>m;q:do/3SifepW#.X46[7c/VdPU19A#ip@tgjAT=ZakbI9ITdF(oo`W>lD&L\*dhni>$LOID4\,`
%+q:PKebk(kBVgm>2F\2.4h]u)SZ3!keW$"N1mgRETD.@O/1LF&L5,!Rb7j)65$apjW\u?\(GPXmeWF<)O3Tt>jSWnrjA5S)%^]!3
%AS?431f^lA!FO.4kEEYm?0XZA\GV<+D^lG9*EV-$B,",>,+d&?,BMF4^k\QGSbCGK.+-Na#sN#>2=o<b"#J[gN9[Gb)TX@2S3CWU
%"'4kh`%%m'Zn"#Im0@t#C39@n#g^U@l!)W/X"i%X*;sLTaa'D4pgi927eW_4V^Hf^<C`$/bo'ce(5k36`>nGX%f(=p+o>AtZ^=+'
%fjumn]U2(c'iNBeZKB&U2-4k?GW\9ua:toHF)5"')_^?5Ig7!PH/llVnRC@"0lO^l2u\4XU_tLl0lK09?@IfBEhImX_<%9<dpfU)
%HF7Me4diZ,>!*0!U.)ERbOaWk_:1;]+4/hXQ=8/5gMadIVl$Wn:f`Qr\^SujAf[u'\f]!4pgV7JDq7E(]03pUT]DT:Knml0`tf`%
%KnjL'+WIG+CqhlN]tOqpYA]%rDnMOnIi2iuDf7T-d^IiYl6@[e(9Y!sELj@A_fb*7a^+\f(B1Y4X87=tImsc/-:"qfNEXBS``-iu
%BsAQ=K,hQ3J,/^@HI>RA9qrQXo#pg_<,;)$<Wj?[)&nb%P3kPjq8/^<nuK?&^52BSe^05I(cMEHl@[dO3h,]i57LH!I<iO25FEF@
%5/nA9[\%O+%=YU%]IY$UIt4>Kj(5Y>0=I@hEkL%2)!l`T3*mA\Q\FI2iHSKb?He,`jZi!SR3)'MSN*70E?O@ZK4h>M87-8@MGH5Y
%B&:MteQ1`0EL5'0O_MNgXRNPn_ICE?R>AJEq$ekPoYY.UMQ)Ub?Y9Ibrt0mi5<`,-G#gCgqV)g=is^S2@W7hH)J4D:>jUT0_h4_6
%!1s"+nWT:.gl.5N?(AX[/l&&&f>S4pM]J=b`MWZp]oGYW.in-EMjV%8i&+,UJKnM"&MY)W]M]7sbLmh_ERs8ZBLabBK9m!VD&%eK
%!b3YE2qf..[C6V*7p1cMTbWSO%]u8]9eX5@K5Im\`GZ=%5GdGcrO*M+:nZl^3%.L@4Rb^jT5hCu`I[iC/4qV>jd+amda6K:4t"Y=
%#.cAF^(,CYNMC-p@B3Wjc&rf:)D>'tiqmo7H=Sq@U=&rP-Xsg^RihX\/Qq>8`HOM@B'2XDI*sf(@\b3fRnG4,EoCY[3U81*UN8,E
%n>3OF<^eO,Ij_uH[XIt]JN;N7n*c.;'de"6nGK>i4'ugg2[:Sr@S=HhlgQ68+3:`i/2d+>;H#QIj\MjO1UC9M.r;]$d!OnRn+e/r
%_&(pGk7cUtbiaF:ros;5DRZrKMWR8T>3JAh]cr@LjKn'e?`YBBAIncL"o6@d_.!TDCb1`RX<:k$P5?>[.:4I<Fg6OG0f[G[-nbeF
%fq;d)#KOdjneiJg(G!QCA)mKINUu@"rjc-"s0=T.Nr@a*nlb:H5D+[]diX(H(3@S0?gBuHE`4Ks[Ha`*potmBmj8\.Aj<,OluR$=
%>oY`Pf!BN'V99fX?Q8Y3Un/?A0uCt9@mOnpC/b/rkk1[BKnk*@VaXh(dk#U@:^8)4pn`QElCHWH8E!pif[-+4b!X:h%\%;\-Nf$M
%%D-\R9^][+3TK-U&iT>K=&">6I-b8t(PC9>I,,\SOuCpX?.Eb_N9dRuL5E+Iai@I[AH2Rb\7s+4h!^@;oqAh>r$E</YHU[>TCXg4
%Kq,LLd<aGZ9)flL1@aI8lTV#@I7`+[K1Q\4Q%4ZWf$;kLK/jGdM"t2J1QUhnkI>ElZ,'(nO4ApT-:N!Z:k,<]#k?VC=`:<0F,KsX
%=mKKGi59]med>FUb-1iM-hXim)cu%n]BuJP->KGb]U2>/M=CTjY[Fg5@C(U^A2A6,B(NrPnl16/Y_e!u4Qi2;]iFcI!lGH;r0MJQ
%HqmD*H*-\eCI%%!nR59P>toY(qA@dF393f6<YlOscgpBG`:D6-=T5!4/.PIE]>Kj%YqRGA*s]^9VnSfK@=5$B?[_OXibq$<D%Z9L
%#l'r]*8tPIA535UMgoDLiCaCOc>4#>FkA'N]FUYlrP53hj#BqSRPd=0$;NK28t((Nr6*.5"U`d.>H:QgW_STlXnoO#@h]jR_I-S`
%qSYZMjg7RY)Kf?WZ!1d:WtnK)5=Ue`l1B(V\dt+UMT&>m;q:ej.!cM%M_*Eal]qClOB\]]7>;o_a4j<`l)0o!aZ\1DITf\hoo`W>
%lFqH2D<_R9CFd-1cBEEtR,4cVITE:YV394a7`'XNYIR5Q.NX)Z%AMC4RP-r$F,lW5?`<YZAl=#Ue[+[8pk/H!cHdcR_K@o-;6Wu]
%6:XVB+5V#ho(3%/;:]a8%#YUjVQBt@D4NJBIMh(ta-)@aDLh]s(8+B#i'&0=\WF?d/9=#Q*FE+7Ho/Z+jq]^2>3:npnUr3(*+;R;
%Z)fI&UGbaB%uH[7->7-?UZ9BrmNe<g/mL0O3.9r>9)4+/jA%Qn_e_4\B%;;%0iPMG^>Frug]I;!1r07h(<EsM^=c"?Os*jR1W\HC
%ak+p9G.MCm]g#sU]"_a1gk=-#-VF1Xa3T2T;r"On*t`sRI\mtGA*F5k(U0,=>0)'`!nPd=GlHB::H1"Pk1NPKh%s-.(>DX0_dnS<
%"$5U^_8Y35P4u:ke#`"!obBBUqBG+SG5#_NHEo`TRnWLH4rsBCaE=Q^_qtdI<k<#8gu:ljR>(id_T:^rCHl(536lh6$kBL$iP3KO
%oWO<Fq0.^N1[BsV=Z?@PJ">QU!AI4g,AS3U;l^^#OhWl=cFcpA'i1o;S5qdo#d?:MdmM%45gDU>98`m4^YX))Cl]rb0K(OYjIA1h
%cD)!L),K_VKRYOJigf'.pnP6!_uhU"M>D<Va!+KXY??7Sl<K!W9O7O#KPJ`lpq@$a=G1Ge&I!W'0%a5`ci2-cG4T2ZbZ`>?eYNoe
%>A[fLc)%Q9[8s6Q?Yb?&and,mk!N,G&2=tO<-g\GMnMpbXAiJM1o>0V/3Fh,W<s#?^n]kDL4r--Ao6CMPPKo&A)Yh&[@UNG1_q-l
%Kh#X=4;u.>nn@eBAo9^L?XUp60=0O?AT-plp=^XkH^=)G3&o4;PDeT?]+KK"[3ogRmQKn?Il4Jggru[<@`=Zt'oVjua'p2mr%k5+
%XL\slj]nm$lHkH1'kV6TKKmSHGu)cGA;,`N\$5TBp>3[CRhZRMR(_ZMGQ-n$hVoO9H*d9n"BR5b^0*/bI!!lTi*.%G$\NA+n1>'_
%Ku#]=,tWP3KC=_8WrEeXQ@3nt>hFG*[@]Xgo?_E1Z(mZ5hhr6&+Yr1)LjO-mcLa%SqC82kIjcXb<b_Bcq!k7=d8-?][",CbN;Wcc
%R<A#q8kpd!DLht9rGT(10<brK.sRHh4q*&=Oma`$2h+H8kP46U?emF%K!C[NS@?$o+6r?cc35!]B_q<%dQZY!IUsjFAij[4#+diI
%cLeAXU#l#BX=56GobE3Y?]m/@4*h]jYgqMOYTI=<K3$HhlL6N2PH8Hj\mEYG<P@VBB/KD*[-5-k0r+Gfq?B0Pnn=d8X[Z;@l8?93
%51(9i3TL_Pk6_XQP!-:<q\7ra;1"gd1CYP75!%4NaNd;g`*A[R"Woq9q&,rT&2PsXFV:61HSUW3AfKY*S;fOi)h.VBYuujdJe*3S
%I\_Ft#f2ROUi#rGN6LPZUCY9k2pIe`fL)0F>'-!u])JlDpM\``<rE2"<i8HH<rH8"0hSk?7>nV*oEc=7b%Zu+p`QK-^\S"O45I87
%W>]nbo<BTI;6(I.9KtTqH'1p\W4H.++['#6fVs#5`.*#gng9qD=f`.B/,@kkdRlAK141KehHk405K3;fgekcLVaY,pa8Q5aoT`$<
%g\Ar.Bl;@u=r(;tW;.'pbs,3\0<cU8oIK:Lq@t2OMI.eF`=F]pikCf?8/,Fe0^F=qLd[Z?8<bd?%pAEQKqaYm-=l6k(<'&[c-+Hi
%kHQF!<6I:Y7JRPuW@uA\rE,<D=,KH:6d-_iAJ'jk^DLh%A1S)`+,EAU"X:9:3dmu0Pi>c%7I`ah]P,fQ=Hij2H7!)uI.>jj6Wik/
%`M3,NAmV;4GL"X\@n_lc^ANY+9sZM9qqs#4&RLBeR(plpk,0I'BJ$)aK.jX5+l:A#B!&29nMY"Wib5&^/T[GO]mo\:B[NC&Xae(M
%!Kj#/G%Lbs^BSdDN`uJJ5j+mK(-o>/\cpF]d&foSP'BaP9.o/]B.SB$Htq6=O@pNJMFR!r15^AO^A7cq["7*@f"5b+"94tO*MsEL
%Q-=h$OIMeA-#fU/[9%n.ZXsO/39b"iHCNEa<TDV=(-?6e1ojjMDl6\Tnp2f+LtNLE,'p<]#=oe25=E>d)PVFhAqa[q,XL?1FA^U_
%bO;XKBYBUum9KNY<H!FF*7rHMlhE+Y&u#1-T&^u<Q4#hE*"=h8q?)3)Sq@gf!V\/C^i,fk"TC_2g/tLu7]fP<h5lFJ)>_CA1IB]Q
%L7VYc5;>nI."VuF%F6^JK5P@R,?VJ7Bp#+:/!B$D(-NfiP3#)Z__P]Z7RGdiG1JT:csK:^pBJtCL.2TA"R[@g5j:AC]KgK?-'t9V
%=Ugf%n[b(O7F[9f#+=8P=fn^5gU]gY[Xb=8)3Lgf9T;T#Ql;QHB5f(.,fB1r>uC2kUt)1JA[O,mXiZdXDl7.a(0VK9Gk8,h-[n;V
%r[h=of'8q6SoBi[:\(Gs8LO27FbZ/C`ETlo2LkYm&sBlRXmgB>5KCAY.!F0E\_C\5a*^Vh1.J>C':_;.4]Y$:.@L7Npgrk`X^G1,
%<r^JRb'd&UQ!ffQR)KQ(M,puA1u@NhQLb(_-Mk&]J;4B$d=97'd=WknG)+QH<AqUkPYo?dlLS,SAbA'j<c:/$V);K3'3,f=N*]3-
%0AY?hHN0N4VXh-N$dr&"ik%D%)Sn:NP&APJJHZ.JS2#;(&^ga,jRfmQ,uD*@hW2G8.=Ss-`bMBOci0BMcjDr<ZV`UXo^pWNiU`]R
%s3!VXTX;&An;,A!Vq!\@1B;oSPXXUa%4SYt$jAZ`c`-pP\]IQP<:dl-cdrfk<r)2%i9rZknlF9hIN99g^]NE)d'`-UMLD$/L$R)K
%.;J^D1$iGnr#H]0/)`KHCAP;+H$1BK'1:?Pnn3Y#5M\3E]ne3.@n&ujW0'eq*'FJ3%;J=$0=T8rL6%<QE+K5<RMcP96_ic'`[C,t
%L'dr+gJ$+lVRNrGkZ5Hl1?'rgB";G68:9rt-abgHYUn&QFcb$\5\me9VUd:%MC;pl5R*[[_9,Xa-&bSk"Ua'h9hbH<eD3#**:]3?
%,T1PN(bf,?g@#0MeZkh5Ld8`Me!pM!%B\\jQE^gQns]NrBN;s4-f1!`;T"=`97*^J[emhABs%,ICJ*iAe7kD'$a%t1S&W5>G`(AD
%B(=^D["3P0e*u*kh&_s9=e6](<'^pL["dEGZjaU"N"b^8Q%ZudqJ[#mBK*>FX._Du6<kYK-p`;7_%UVHm;K;.Fg=`TV)SG&"*sj;
%Fs'd?g02=k)Jo`W8WFR"2f$GQR+1DNBrtXL#,1o-]ju5"JI<LnVLtgpoLK*;b&o"^cJN==<+q6!?AFi_F_D"B%L]R(L`q(>oN&ru
%A__s1EpQS8U?@`H::gO44lIWkg\$16b\6\$NqTIXZ=_#9(UjsdWp:rfH<b/Ih<oQX2]JN!?6D,HqqBRg%]X,,X'Y"L::8WSlEG9[
%p"%!\XjfQEZe7f+Q.1EJC`Vh+L@dG;.(em'E;JGh95c_M5M-^p/iWHNdDX9Ir<k9L$:$1#]Lm?`.E/=7!(K?lnNS-jY<YIUgEO.l
%"#NMS67jkN5rk%1FD?Lp\mBtade1CAf$SBVJM3[Y7jd[s(eHmR!)K\M#\Icf;K/3gC\>+J!2.bD6i50/V76%#m?(^T+fABP[5RYY
%`[kk)`9AkD@(9\)VM<gjc*Yo_f)%Xl\f2AIKH>%R!:$8[^&i-_E^sS1-:Yqd$aSWc[+_K[*N$ErRu%%$m=Ysm12jRik.@ZE0ciH_
%73.Y6hU)nG">]g\HI^u%_/8$['\WQT1B,]4!9B`VPbe:mGDFBsM30XgV"N<+&*,b\`:9tFFiAl^mEB!b[p:03U=h*^V'17*fK(nE
%^$d!0b(*;Z2WCU!+VI0H@&1)iB^<eR*P"[^]\S;UT@lr-p[jd_KM?$!j'gJrFsul`^Ynhr%Oam]M/UfXhhrQG-2X`+->fr^Tog:N
%R"Rl/X'A>q&Jm6S`9tEF2nREP0^9L/lsmhd-jmIM"ri#A8gd?9LYp4frZ5b,hA/A1%;Q"uhcNksa#J_-28!sY=a@&`nnc"-Kbu.%
%X&f,e\j'=2KXoda9cSB)Y<)D*G*EY:BO:?<)2%qJDRqbf<U8IS'VJUc-^NRRnKFKE-dh>2e`2+b[3igh7qNoM0:MtQ!<5_[\(]A7
%8M=kMC)`N*[UJD!JL46!*Z''o3HU?<dlh60K,4r)*O:V+pGf@TGk4FbW8h',jCEL5<#*"TF^Ji%V&G;iebUE.Ga"HZm9$>kl]/T[
%c/;=HGce["C0L5BAX:NEVT2D!%Sbf;TeWJULd$PX+;H"e?UAKu_LEK/Q9@M2NQ)400d]smCc4nVETJBR$:n<='#c8B,h:9?88>hU
%^L<NGCGA=l1YWYX3Msn]8W0tumh6tfiqHKiB\0V2FLu83Z;Gak]W6>Pe=]s%i=/1aJ,)h&d*@MbN1bp6<hgNgC*:JYr.+o5`i!^d
%h<BRb5*`Vb9#mS2da*L[%A6Rj^o16G%8^5T''$C>!?t991rkJ+V?$IuD7$A(KcI"tB'h]D5"pEUi=KmKor1dRi]n!L;b;u`3A*qC
%aAM_c=Oiq']ut[)gEAJ@7n\0OGcc=Pm?*oO2IB_o*Liu_/l@ta4T$<UA5!\,-1>i,&'rbEOFBIeOh<gm^jt0s-AZYi*%Tu92%5=)
%%69C1ON"$gW\VJ"#uVsoE"[,u:fPr?7!]kV5GdlmkS\JsEuueS/XsYu+YW+8m"62!._&h[Hg=#=WZTFn3""uFj'*6EK41HN0q82h
%J8lj_Gt3p(Xb"pQHA6o-o!%`,NketuK%?FlDfu"YF#U<DRAsX;j_4c(R<;=cgQoZ9ShKK,*lE3/O@-mbf'n4pG/DC4`mX-pF0$.0
%;`V:.CGL,4h8<N.\?HKLL2rX61r*5E-LkNP)0=%Nd'JYjZjB]TO#2hs*j&tG6;HMnj>;J&SlAKYbA9#YArk=s4ATJo(neN'6hcBK
%g#JpeLP[d*=J=W:+'PpMVpKH%JK;S.YK_M$,r,KLdTWNcJ>UXHQH#!Sfms$QYh&8&M0Sp,@iF9ui1\s,AU7="XM51E=*($@UH#8j
%<4`7JBY\;mK@<ZL`X6.ZhAXGLQJclM`CXciLP[aKjakb*(8Rk=6=??-@uTmD*o-=nV[$%Z+QJFi=:(KMA"d6Ib"CkK_d]#G4b[Y7
%.=7;L3lor-a,5Dt_Mr=#a+X@Q_ri;oeWo1bC6,2;=d-$&ZoH5K);r3%@p@9PeS49*=i@IHV\OSmo)3^"1c4p%n+@)[c8T(e5gQ6\
%jWq]\CuiRdl6UeCA*gj_oi22VGbh50'qVlPSCm$SbAn&?\hNG+5G`dS)TCaHb%Z@i-bqu:UT-Cne<X(AGA)%$QR8-'9,ZI"/L>2c
%%KXmle<Xo1*Z->m9W&%pd>KE)!PJpHK;jlu4d)Fi[sNJ/Z?:==DQDK+F'$YP:R3g/p1Z55]I&5Gbi(u7I[4Z*L3iF[YAe[>WMjS;
%RE!#ArYl9#?^+r;@sodC$lpoc[K;piSc.=A%uLZkM<9)PKU\5RqD0epO0;Qn=ZqOiQ@o?#Tc[Ao>-";!CuXaM,7HNslhJfU9/1jJ
%rnPMCb-\CdO8_8J''J_@EV*lUs!\9;F9?DI9.9BP8]\W2i@_d$rld_a#O=*Y'E6WLWKo.H<o6\e\D',7T;RiA/&-f;`)UB6fL<.N
%2c14&<Khb#"9!M%rf!^\p-(h,7Y?1Y<i.@#-N;Jg7YJ?mCos0l9pQlFs5i[Y7O;'U'2.VNdZJ!\Aq,H!\"["Ss3Y"M;t:+rm2^LH
%'is>g8pUAS<B9Ko:UnqoHd\!=mX^2$*3;t/RQdF0Q2<Q2E^a=4qsR]uV4$8O,NG'47rRjp<%oe?<GHjmVbc5loF#k"lGC`Mh1Zg:
%GLf.-gQa+mcLMT_lc:l2Ld$UW7mQA9nIn$72k7fZER[EicgW90dB,*`R79Bdm0iR(BoG09Dso<SMphTnSD%.YE/d2hf8lhcZM2)&
%=u1(T%cdl_7=L;a2A71AL@!ltDRO26hb_Ui-7H"0In2Hg[A3/gkqe>]/m]i`h8=I_Fcmm]+8\JjP00`$*50cLrql08qpBC;ZIa!b
%Ft;+(i_jYM;,8+6-+"GAY<D6k'YUp#Vs_^-S;<fO]l+pX,7Iqk-SPA^F0_?S*M0)7`+DM#^0N?YJ%eA4W-EcpUeBrpaA/lbWjH#B
%<sq.*eLK$GZ^<'an)>Q)Pbmsr-p(p2\PB@AO],6T5U)]F80YTNOG%:`8L[.OBLP*Fg$A*/]1;n?bkuBu3D;npb@(&JQV*$O_4Yhn
%!:r+4_;P;i)qB&Pm]c3#j&.RYHLha(Ll34>fra+b,e!?"*mn?<C<.*FJ%=lY23MX,?Np'OMO6N9(0k$iN!G\.Q.+Xu'e'8eH'%$n
%h(og<_0VV2#_r&RpVCeuB*L;T[q!7qq2u`Q]R%-r7NYNH_,qj!%W8ru]0W0W4V*]-?4YK-m?JgM\`AA/g<NQWgK]17o&OjJ-mVRO
%TVsW$_>%U2.C`[%X8.@ZCY*rQDsum@\::p`)GJZ&85P=b.)G!CnoHLmem&N]foJPjE4,3I9V42.K?)B"'[16kcb\*/82uuBj3kd8
%Jn,"*kn>Cg8_dPTY<$Sp_&IGO'tenMXe9,EDD(bCds:U0pl]8KK8$@a>d/>!=:(9dH^S9\eCqb52<$;lMr/sdc*Q%gn=t7,&SuA`
%LJ,Ijelc0oa<sVro((L4W,csi'M7^+9@;>Ub7\fhD(j;t8I^P[@c-089>]q>BPBP7IotE/f63Gmc.e;UAE>#EUcoeT9BjK=FXcp$
%Gd_]p3an=,Wos&ObP"qbl'?jY*i/)LdW7&9]MtgqdH0aP[:EN/#.<R4j&.*PUerl6oh01J.G%g-?=W[Zb@./b]c>::LW^rk.kJ#B
%FC\OQBs$KfQgO?aio9?C=ZJW+><^7Cl>l%`I<R^KE6^#thfbd<\'*b'j[ZS\[&diHk-FuTX"D(`a)=euEr@1b=`1?5Y:E7YqrO+9
%c/e1_jQW>C6>RaYXg#Xbg5>[pr3<POg^(&.'ln`aOHuUk-]r1fj^PR(]5epM+07S@?"I*Eq""AUq;f&ko)@)&X>JW9Z.7cUB,?G.
%?+W,AX@>8:&$+cj<aXtB;Ijq5FDYqr-H`mLK?AINp#L?V]UIkjM:L@Wp<Dl$p&/C.oO`'CDpL)ieOI)O>76`RAo7L[FM8MpX#8HF
%IVF-\SgEjW&r%*P@b)%!X5gUOS+lb_IVj.MmI'nFYbi!:ZhCE*pM4p53k!UrL9K4\>1_0pW4mD\c<NNPf!iu7+4fO`P?C\Rj\"jl
%LV<ZZCEq>2J*L!.f#uicAA+:#5HhQR'Di%EfCsH@TibI1$#q.*&+.(;m8-F2^'U>17Y^L,gfiq#5q@[^7u^3@.MH'c/KZX"f4DW4
%hF^8C@6Tn.$h$<f@c;qMV%q:qhFlgsUZ?Rm`=*fCNP.G(-N$^UfSrnm,I.nc]3jFQ*gMeGrBo^qj,dTp2pU#KD<'3sT/OLAIFrd'
%*q)&Ak4=!H*.E<p:kJK_ffiXj7$JL^*')hSWfcV2Rq>&mC99t^:4u`F]l_(X0q4m"AU0J;e#/Zs;=f5meP_COZXR]qoCan3D\c^D
%e7PiPIN;^okMN&^e\+M<O%6%FFS]tt4g(*qkS4p>d?fXSPN[A[U(Zk+h@[#KI")dhedBr0U=)<G`/_#ff<MC#c:Ubl^-%?SO6Y8t
%V'C;!.sc24fFgg"lrLE5pp>/ZDpqp7QUahU^lId48+roIKL4)s6!l7Z'Dnl.&kD?U13)ue>SDg4YTE+,0Y*V^AY9m'4:Q4k]=Dm7
%9P_QQH"lg`=WinT=[1,:;6(dn6rCS^&SfWc<N5$>dk,^K&NcXXHB+me1<]!*=NT*-NX<JI8bV8/cLUN<r@"fokdSd:^arc`&PrnB
%eP8T$h&Us(3P(2$0fL%%D+;9GBe_2cV8Yp\2qk?XbqH=,alFpu\TJ["MpYUXrRfo`\W%&DT+f;46V`oUEa8SfpWOAPTdod[hQHAf
%%h-L:iKB'f\:^^>)uaT5HKRpqF+\CrcsUp8FtN&#*]A]3Us'*gHeYHMEL_7eQd6;/8En/t;-pkLM!(b[Nqf?PJE.)"S+-sJp,jBt
%Q\#3EqZlXq^!_]Uq-=/]fj6\ARbLO,5i#J*p"":mH-C)kY)h/CgDY(F6\LcYSOE%nfZ@0OkoEKC#k*/*mp:14qmX]']o>p7pJe1-
%GFu'>NcuF4/A8N<E897'<=4e6VoKb@^$!!@_ub8pUTq6LN@*QWpJ.3=qe(m^G$e0,Q2P;^',+S_#?qLkVq2TmctY73WkC?ei7$_u
%6u2OOPUbM'9%U8uAa+&;X2sTgmr,LVhPnW;%AG:9aTp"0UKNO@1!/)4#+_!Wb[*'VDBC1JKnCmejebsSpp8G8Ec`(T.?E'q8SPi-
%jAK2tHU^UC2SuH:LS0ke2JT_dqXn&ch;5/flDac3W><e5Xb1"D]R.F`Kr9QFp_4Han@2Xa3V\D`RtlZAS30cVc1f,F8o!h![S_HI
%Ds!,TdS`(&QG1!b-IZnm61ZM[Th^[Bo]=.k/mildWa+e8a.]j:f(&1ae($2*1a7IJdE[Duk&"`)R6o)H1V%XB,?).aIldt#_5ib_
%6Va660+I4-:#6AO7ekTXWPkY$:TrI5e'm$rK5q_h;7Fl9-\=Ck?g;I!IAG`OZW'@tcDL=X3n`]i;u8]P=RM[eWk!5#-AGQpR.G?O
%$X\RqZGa^GrPi2L$![9C[F<<ogm5ZtR60'4.--uF_Mrq^kol3+o(tNECclg*Ir1M[QQ*oEj\,FK3.?.>9:T?Io@r_8m*dS4F]-mS
%\LOeZhQFb:Ne(ZBV:Y;"opr=uFPSM:V/Ef\a1%PE88.n_p&1\2)gPTFDjAAd_X6AH-/8Y]UO3l]AG5K_RrS&&Q3q9ma`;1Wrg8._
%\h?2]p)_)_`Sa+(e[TsN-oCW=K9*8p.->OH1gYF>4O7R[c$Ye+@Phuukq%'\IPU\XbNIO>Aa28r,5LE]9dT?CB%!6:A=\*tH+Io1
%[?Yjm6/,1??#+Y@Cej;lZfd&0Meoh@<P$<gRN$s=U2\i#JmsVJ(3s7DO4.9hgO+E"SJR,pWHND+esRb7e[)l3Z<g7C?^0fmO(.qO
%qPI2?0.5sbR\J97B=YG5=0UtB(&GSW?-.!7Xt%urB%(-/_V<*+Ac1D`T4X0oqSm*)l*oG8V"WAa:%,fSCXpl1Pp5beXga$ch+=.F
%e_:S5f9U;hHaUdeY#]nDe>)kd86i?rf#`\nEJrI,2u-S14?B:Abt;D_Va1o-bDg?+q5%LhJk&Y]L[_UiIU&eYV.PgLl-2W_nZ)Dt
%_&p&$X(Ci$p:;l0+dT6^K:RG0(LV_9M@Mm86cp&c^feAu(B"eqFLBi=*`]NaYWQ$;,0"#XUBXS_<RbY34qkoEe_<!Qkf^&12-d'/
%:ljoi+qf\.1Qd_"e_nBIS&J"KXQbW<GMQH.2sAp3PCXB.lY0$,57;=le/D@%XYG"Af?)*oB?GQfI)g_j>O\qp@qS`slZ+"IhZMA9
%>$K%pP',$JH@04t5AFptP2/^FA"u4:TY^FZh_]'q>4_^H3tj?=H[;)(C">r6\Zt\^J;jn1Y'kop4C@`bgUO]0JYQL7nMJ/Yg0IfZ
%(I(#^)sW9%b-?si;h6HqB)?MQq4?ir^Q"upf.VuO^TDsrR%_t<?8:XVQ:B_6WF1aWV<\HgNYFgNSG+Sd@>F\SrPijWi>I\?R=k67
%$t4&ZNTYrQnh?ebI"jruT+gcfi>@gU*(sT8X?<@W^pR#t`WdKDC+276f*Uu?7UZ*)EX-iPnV-8#lD5OeQ\nMDTX?T0&)Ef**adki
%GSmCLk;k$[cAq_bSq/WG#@,o\e+Fmn>s<7IEle"-_5DJsl/dZG237*pG8W%mIJkp=^7udNHnHQ;Uk7Ra7#IN@2!@V!ca:]r8a:2>
%'KKdtXPFcA1(tE-9^9Tj`/nJ/X^%cS]$ROf02O`jYMRoS(ulPE<NiUN`_g4tiA'WXiYc!;!/XHpirqoVN@3W]f_?t@(]sEBedGQ6
%rjRs<TM;)qG&3C6:F3YM+0pKTnOt_NYY51qk]<h<8t,,f8$.G<GJ4tkD"lZp$tZ?Rfb'MZJ\Jo8#]&nGQOVtY-u-Q?)jelpN=DJa
%a)lFL=WaCq4<LdX7We#9GJ9ShD448R0el3f:8e;Rb6m!@LNO,^nRQ1Vlf/eFlaIb9BDV!r`&1"2),GT?K-BX%EKhHoBgoWg(alT/
%W+1WKYJ.pd:9@CH*7`<?qhb"$b-.^qSITf%)Xo,]LIW2nK39iHCtcSfP/c/iFA'YR=S3#G)P-+*k=pgaL?YE!:A%U9NXk[c<Ohk9
%S`"UTRhan]"f+]@(#>l:MBTspL?W]ZC%Rm9pn>Gi^&6sY;r#LT\DGsp/t;FLV9^BaDF^Ha(ojbk0o*b<CVl)l<,<H^T7`RgL;R-[
%)hiSClnN6HY-$5I>'!q6=MK"C*t'H#;@IFQ4)i,n"V(``UG4Y,e^\+)es]=_=laHWj`VaLO"Dk.l+1$/)7^-*=HDXdpd_N"ok%>[
%p(uDsBMQFRfrA*I'g9D"T<6p>G-6&@\$_^M,C8`..OUYi[7^A)*^!>QS"]MNTuC1cguVt%>E1'`&,&bcrHRI5r?TeW'R;Q)SHu8A
%_^lHh96jHB2i3g<p/>cPZ*W+s-!J@=()2tbc30V3Wh[$#H?c#QlnE`<C$b7&Puql$FeGg0knXWe'm2CZh]9(h[mujsMf)-E1XhN8
%\TT:)a";L7KitsPhl?"o:lJ:!NXA-p>N*OVIs$5?+Q\flX3mbie&<CB47DHE,2S4-,0K%_7h$K'b"rLa0D,J_G,>+]c(iDMRs8)=
%[$)7(NpLJBQSkU1Aj-hhqs2j77Sr>Mo',hhKY+W&1nbtTUVbcCP`%0GX\.A^V%+1a^4dcM<09<S,qI42p5ZLPY=7O$bni4#I]4[e
%cGn_kd;ig1=Oc3TSInGY1DQs(P1\4XVQo\)2kH%%EclMS4kbiWFJMTJm/mq3:2D"P:]q!3IJ&thlG`F"AG9V]Mm#;1)EkG'ERN+;
%W#W4JT]PrkS\M%Y;VXf\C!au_a_iN<WQS:*>I/"Qc)`7Tl(-r%e>C<]a`o+[cRnVU8b4C:F&ff4;ha='SF9d4'hI'=2O74LgiM*&
%Go\cmT)9YlU,IX1PqiL<\9t#eBfg*F0QPc5`Gk%['@$b/JRXGP;OYFO7/#+NqekRXF_mmMDPgaAgo+F,%30a_7/$=PS!:5Y\nbr#
%]t:UVH96Pl^$4)bniN%<V\hrN+1YBrlrJZGm9ZGb3eO'06!8KQc&I<.)"*E2.nY*K/Y\K=N^$F1[_<r,L!0(Y6fiShb#aI;.D&J?
%On'3G=?tjfDjTFXdTu/#A\[96P/Y'sh"p["btY.VRYOY9h3pqrQR^r@Km^:IA8cbjg?KuK1DH%!-6lSIF*"-(Ra&u$'0j%aa1Wb&
%7[&HGgt7S,VYJZuR_>MDS).j/X)h-=B^RFWgBjiOQ'@+M2@fa,&;HIt*`k$/g\LQ+PWro,#$\F;2a'n(o_qQ@Ln:<U.-;ad8Gu95
%\I`m@[+5L1/)8*LW^,oe.!i518a+j`D7:imMn%#o3KThn8Bc-:d2*OSlu>]j^[[bP!`lK3\W>ILFS6uPW6+Um5`j$?P+!rPDD@:a
%l%]AOb3`MZ1[!J[h)kEd^V&<&#o%-lgurCn_>C5BAY&;Ja;^in^GZ>_gRkVSGFRuP`_o):,MUFV?^kl0>@om0Zj[F3BCnA\KpU8D
%?+RK;pf\,;qBClclm/l`FEcf1qYC2Z7`4!2bf2sG\Q"c501X0NYo?TC%*ImkS<Q5m?P?N:[&0^Ro,B)i-UOUMg_OV"2U,/m?/sp'
%d.&,2<IFgKF%X6";Um=c?FsRj!*8Nj9,H-uL,[r!FpLpScL;X8NL4g8S#`<0bq>_P$(_fUIdJ\Sq8ea_6cd99;O5n+HA7(\<IG>^
%/!pkJi49Dm`>8=,3\5do]_@@IT$K?'=?S?:S,)%r2!"HiM"o4eA8dg0nQS(Eb;_-uidrRM?9(25N2erg2N6O&C0ija<r2_c@TBQP
%&M_dBpK^)@53-U)R)E!5MpEI$?D)d#JZF"hkdB?+K^SO?]qFfbCc%WZ_CKO3IZ+6blE:F/:^hZ?`.,QmK\HBf/3IXPQ(,-**cM2&
%B&QN`7/q)@Z`)%.1/o%fEt5`C--:dM7Y8r=ATBSk6q,-n/sd3>W6ZNVjO*")S>CRF'n\#M<@aEh41AO4L<^D[h`Y3eb&%[PL9et\
%'&9rX3!kI[J->`Tf(Y_Y+:bJ"J@<Rp@WI9dF'K.HI(ugNV/NI+;1T?PS3SBjF^)t)a957i`Z+O[kD%`GrHR3^F'EP..8)\/#_<U6
%>[Y$g<-5-E!j3pM_Yn9UMXaht$!#uhVnI9J]%r-75l]b\ZeZl:$hVh*OuUt?)>r(F,ucUhAX@M/!B^`3pMsUN'ncLi8926PBB7Rt
%athok@ssAQM=\OI*#@>cG;Dd5Bn^"mIBtnI\#c1I/_92b1PF5Zl?Bd\Y:Ecd24/;Eie2Wrl5#^t5:%O[!U2MKblVWu,O]-2?'_n>
%m-B'1^Y!\7)n5PLWt?>+[b;?KPfncURpZs/(PopKQPgDgm-NIX?r^VP=1Q2Vf7RUelCe7O^@R'7_PjbCgkN=mXhMn&n2oq2Y+]6<
%]#AbOaQ84@>TLV>QI9Wf;+tl4V1iVa,Nl[dDK2o(6'ETSe]XFg4?t=UM!$`S[QhXbLYE4"gF$"r:Bq'?a#nP\/&UTA7cSJ+'gmjV
%?+MH!*eOfIguo^)V#8b_*HE=\%os44JKreYk>@m5kGp]0F$%.!fI!o?8F#L&cl$Sn.p\DF)'0jTV;JNK-H0SUV.5(>&FnD9U^6\E
%Z-9>&MAj2NB)P"M\6Ah(>t1+CpQZt>\+Ggt_$5m,*YEcL\liX0j8BM.>E&K]9,I9VV3GbnCT0j:/(FI)$H8qMEOFb-5o8L__.]*q
%^<_:"B1Y,L.Y5"![K3EH.>tmHH5%QP]6JUP/V8bQ$g"=tnM2X+M*65[9?5ZIGBVdp=5ONlB6r$-;)=^NR`.Y<[<,lq/01P>\/N"e
%9*aRuo9YO7Yu3c(jgL-74`G-#,AGg81pqG_B=qXVWlKS[A\:$^C(Y+S"`C+l<I)3*:)\'+eonU4q?i\d"po.PpO^>I^F5MKK$g_F
%BC"?`lJl8i5@Xpa0n)ij?a56&htT!]*'8u2E;^W#b%iiHDj>9:n%F68H+'<G6uJ2m`nkUgmOr6$A/'3VWlK@1#6BX[?2M=5jg'ZO
%$_UIF)*'i8(?=-XlD]VO!^SPn<m]Ql`UR52a<"Bc]%0KWWT*/?nQe@S!_K5EqXV9H.L3G1=agmZ."l<a!HZ\]ms-Vb0[-P;8pr^$
%b*N^!g+XG0;O/_?lPbb;U4luN4)=<[$RD<r,0$ZZNuQ8WWnr#p<lLMX=^Yl`Aa<[\MjYgc4IZ=cDJQ/Y?_VVR.\33oY#H]PEaEj5
%hHWE&[JYBLO<l[&Kgs\&mrt*pGON_sb!Rj(ffOG-G51AX#(7=MQJYI^@#&:9?/^bf-de.U:@/8U$\tE](BtI)eZ&`jC/.Wqhi7?Z
%I&:T3N9W'ECse7G2e(s4r@@9Q.3["b[Z>?n^uDI!Hg*klVj'7k]g:QB2Q=W+;!dnnDQ#qeM"/X=Mu?8KK6pca#CM57@)/nIk$+hJ
%#$FK5?`qF35!Fk+/o?q:ff(@0WSO;"?mc\m''_i9L)M(%?**I<^5,e>/<@YZdS8n^Yr=1DYksVp\iVB:&7^T]es$62kIP,]_.KVk
%HRaXnq=S&'B<0de_VS.P^"^Se_(<Vd-]kO\p.or(c$1L:c9,0u-9^WBZ&;Ko04AnAX?<tfes!O`'3HsBpb3.glXi6;2!I%^%qr#<
%5J<^jD:oXd:j-\8^#!>Ji(qJ&ZTY`e(HH'fZOVBgD10f(75hZ]a8afR5/^1Nb4:=<gthMd%qE5!=EmQYDq%c_DUsnW3??$>*l<+Z
%Dn/6*\S!V*dh/9QO_ko.&+?qA]lB@S$3mu0_/b/L;p'+ZA>rc:ri2F/_r/#=P'SJ?O%MF9PZ+(68Om5'dXA-_XbQ_[.,2</](up#
%.PC7nXj\dLT1L/6'_,m("4c98-(7]9,@rO:*ok8(:kk"FhXIO-f&3pI"\b-5!1i61;LRE)D"X,em=!KWRpUfHd6@8^HM8HFZAp1E
%)Qtmdn7pF$#!FR!=$E?na:uO?0??I,9m&72a'2O'e#6NR&S9`VVseib?Ms.JZ/#u56/q7,3#sZBRiCCO`(QrD7pcm%DXO5++l9?%
%8Y(3pnqooZ<FK#QW6Ght&O/@\g)OXUblBEUad1cBbrl>nE["fM'-DW2@MQ6)8fG;hX[HE"e[U%qjrer<]\7Qe8"2)RN8hO6/m`("
%k*g#qo`!<[&4R;l>R__@B>h[m[;B^"Y.K$>#4-NWD',rPA`\(1Ol>>[=;(6O@q-XjZ>Ll+]AEpuX?IjUhanQkmM`d&/QTiDr7Xb<
%I9p5IQ8B-jGt:*3[>W\"3nWp,m8QC.#fTR`oY$L8Y6B:JAO#SES$@BX2K*+Wn8PA;.Qr_uPf%&i.6W:ZQq6,5b%@5f]q/8Q`HNbr
%Q[&&[<FfFs)NZB]_ieD-*E&T)5sr([3*P4`]5$(Q%;+,hHX^WkE@k8X`7g;8FSU?uI3^VX9:(FG&'Xl(>&A##aL1]USr?"@#J']&
%4pB[dAU4NA9:0C?4MpE*6&b&>0H]`$D?b)Y#bIc!/UX%)9?4MPaj\>Ca/:5[<"h3;l4sHJ5C7nIU9OmDk"CF$Lo`ZQ@ps<:e9o0$
%-6?0P_M5<FAmUofW`6)R@BXPjhr+=Pph=d75rh-cfs2;Ol9#k_;e.na`heS>Vb=3\0G*<S\6W+gPI]3JMeAfllKS?f<O6+ITZ7EC
%X>/fr]p.jsURfY)p/Xm!m:YYXH9i!XCm&2h?D9)@$7(FV!Fab"\sa):I5XE#b5gYqr0&o[QWP70R+l@(?'E4L_s+J,A5@72C4cPW
%\^k+$[!]o9L!j"]/;ESm??g3_icE:7$%<?t44./T822O7g&^bi5<tAG4Xb$fmh-:s02nQFi=Q(tfe\P%d7(E#mr1LA&4^Y/'U-_]
%<4JI=Gmj\lqG@P:f#NqV3SV?HQ-7Of;VNS)@t_ONqqYt>HT\!QqMS7Ygqa(J4B;t6"lPmEN[K6:UHS_e,Z_.,@Sa^YM%_1Y<n[!s
%miJrPWZ0nk%TFZb'eG>4'i1N@lXKD,SlXp4/piSp*d>ReV/C3(%5IM\a72WuXG2`G6uP"oIQ`0_7PCcD\LfY\Q;'qj9<WAQ8U0hT
%:l3)E/W/BS"rD>TmqDXmq,pb@FY9XZ%>8RJl'g"O5tja@HD-X):45-*'h<$CBCVONj@Lf,4M8u\77.X2X^\;<*_-%T\T6.nRU<[U
%9PH0E-+Odo)_u$;$H`;3%<T)<#tsL*W[iLrQiV6T!)n?$^-(3G!0'*hl9Wk-k5((KenO>'duhH`!JB0;]&P'DO8s5<93()_[qnB&
%Qd4!YDWN8\;UGnkg6rD5W`fjI9W@_h3p78@<3OOT;f6F]\%,a1gp\`'D`egJ677[KdL4>jSMlVE5M-i#)5+DPoC:;-6:ZHLU2#M5
%BK&oKcHAqo]%m5mMSTpD29%-9ILj?89h6_:23tfHEI1c8Y/[n4`>DC?YL"Mr%6jb*ae9$D8:TODiAqE?!i&?2qRS,=f>ku%OG&6e
%)b!5HY*[^W'!:ZJP&bsBpn?n5:J3jAp;4V4?#BY*4D]$-_V(C8D_2.X70E_Zn5+ON5=X2A\t8A]A*g4/NmWrBd5hlA#Z0IA_82\(
%In1=Fd^AYgXr1LjlQTH'b2G[RKj&Z/Ui;CQRFPj0Icj(`ZAD'KUt%2H?&9Qq6&HIN0r_i:)obp@hk<tplE6XP+Vo$%RQ+:WA3Zud
%iC\1b?+<,'5\uM)hXUE.__"mQ89hT9*7U)CW1qk>',XU<@JP=u-Yhru4o&Mnk:>IrY*1M]_c(mP4^XB*Ye$)L`KaL8FP:[)bB>\r
%c$(UBR$eb.mj%bejULR_5qO[lmpo=cO)bdqVeY%U?//a?+?p_4ji3E\\Burpm.Lo"DP%k$(bf5M)U\2#a9WhuD!0e1+F7!mk*kIg
%qk+Vi"(34#aBj5n4Oci*[DQ9^93WOEQ^d7i)$9.#r*iSb$C6Ob`!nPLE`X>o#nI[6C5.e1b.OLPh7_C)ZM>?RNi&M1D]AL`!P+Hd
%#G"uW8NOQn$U$%kJfN??`QlnqE-=e87=+Q=>CGA@MY@hKAs?)Z"66mMQ^?cK79rD^qRDodGr3#5ao#ghTcfXWjjCSDp@O[Z"n<i)
%lD.(&O0O*CMXcP7I^#gnU@H72S%sWe?AU+$O_**JFLAfF.Map8aK!q&T@K7Y;"$Un/T.K,62nqQ[\'97.A,[n_(mTn'u#A\\WKQW
%=1]3S187.aG%1@=;Wd<04K1HW5#P:]Rb2Y$"5Lt`5S/nq+Ljp1:#TAp\rg(!i0oI23<hCJWL't,nb'I"ofY]U&]eM2#i;b_+reK3
%Kij2_nW;'$P8be"$ah97"tg8gaPFF"d_3gtO3BrK%#98>]IQ\3SXK<V"`nggJ($<_:82[9VhS5rGKcP`=ER^[UeuWF[bA!\g$rn&
%Ds]'?Y.k4g6,qbE[<RhtSs%MlPkTD8HVGC.%8u=+-SA\%d9a>[oi;$8oA0mOHhLec]78@=15ZnfT'8-pC?Fi>;:SId^RuLk%BWnR
%fPnSi;+lC-)37OZ.r(YUU>&$r_fMc%h]^@IkSS$`\_fP?;<,Vmee./BIA/e!QPT`L,m<^Wg]80RbnSMZhmiK%PV`l-&!5a8VN,p)
%RV^VZI[=aPG\5mOBDBj5#N?W8]QDJ(5h1?R#FONrhJ`B_<Ke>2%[6X8$9Utd!IUmc^^E1V%c:p#H[LGY\2V^fnjqae54BO<W#>+b
%FAlDE^K1#Pr7\JG@45F]$i8A"oPn7'$a`hf]Kg6gj)NNAG=f,Df:1>me5)B"r)@AuIk^WDZklofkd7pD'1e6*omr,=W8@Ft&QHM)
%p#h?1PlBEV\)[I(rj6m#ma1eP%c&@UCobp3>NN;3<EW\'FPT2D3hLUQFAg#P3_8JdVs=)!r()::N1],s\i]>Q<#HMQEto.ta_FPP
%k(%8d(4B>45!%3YV5iD=4c[-%9eV0n0](uQ73k2RoUG?#e`nq:n1fM>Qp?lKR2AYT,/P\63)5F[1rF[3;`#<NGl_l@i^pYT"n*[j
%M%P\3#*ScImW4PLOX)3soKFW++[uj$^0;/jYq^g,!o5=d:QcK+dkQ^mL$iH@,pNsUO_$\T=b;[=,ft<=krs.RKCe^tGNtgbHg[!L
%/]V^iDN3FAaUrBIEug+tTjplbj)1+/8U4GUY!%^%6h8;trBhCT;1W=m&e-?GMJ!bq`&Al3$E3Q+*)Eej0]WEIBS]=&;-^tZ0nC\l
%/qG>s8Pj98cRFU0;(O<9,Nr9^Uj;DR)Wel@Fusi=P@R>ik-2D7I81,Y9SD[9\cn3Y"a>>)RlHK*q8@Pr0a\Fon:KkLcA6S$!):a;
%;"p)V-S*g:F,,KDhfFS.DF&08GW<ZfeB]ShoA@D6dO.!Xq$E\45U[V^\].6;UIY"AN6utX^O"4FPkc&Q)3-C8O"WlJjVP.433rGh
%XpdgcruIsJ0nNdMUn>L58V,mW]n'Bb&1EtfEauE_8-q_iJqmjK"OSrqj*6>.=Gl`56imU1B(H/H)X2[gcnU*G"H+Y_V^)Z0/8uA#
%3)<D<0sjIVgbME\K6dQ>G^7/TeAi9s;k#:^:@s!qqN^,Uc;R4,O]r]m/aTB1`A9YQ*=BE4\F&3c$i<eABId8&!A.&E'IVgV@X3S"
%gu.$4r]bbug1*^7A;P^V@/`N@&MP^XEh"d1g%qM'RDgdtYo:#(cn7#&:g74mD5aI=k_Jg)`FH7kh*!M<12^'(G#p>//*`@+RaDUP
%:+)+!*\[Lh^;_!K>3^0V`GKS;I#TmEMMUGYBiII[hA0eS]C]9[0LeQk>#&3+Rj\HHj6(.[+Wh5Z"(MJ)(aG7_.kOeWQ7\+,?)f\i
%OEs9Q.4UqH(0%;I7PkZ,@g&>>,?,P=>7O&#887gJJ=jOBZ!R@%N:jlE(gSp55O<Yg_H?-'3YWa@A$VTS.B.G#NI%K`raNka*AOQu
%9>]=L&^6D.ZS<[1H-TVV0LjEG0g_;5e9CpD6Cp\3E^gI8DjW7K`Uhi98eoU,#/W19d*lPGQ*D$B+WEiB>_DnUr00KD](eW0$aGb$
%nQEl?3XPpuq^Ami_4`Tk%j>e0<[YhS4>c=Djq-[j&Y`0%R"Pc<Z0^+T;&b>dT$r6D+=F`#10`0)'!VqCG?;FCl3C8,.(ak25cL1h
%d-@es&Tm#h:uc83%cSqG/ar*<YVP((Hb9&?H.iL%cd3BGN1RW-'_gFY#^"oB>i3R5(/"6rNamb\PUApjHuc5mGa^#^\^NlIC`q@^
%QfHjid"s/;RAhc1[j8=s!>CT`:d@/eV?@U2D]Y.c=nrs;:DH5mQP!2sEZJq6=u#*&P5>@"N;d))`?.]P:F/67bb1Z@$!4[]d@*o8
%]5@GH9c=,=6UmnrN"jLc"@m]++)4+VJJ?$dejO*mlkKoDFin1W5STt9WfHU*<W=VESQcTLLdC;7F2b*QI9TOIT,H$!Gd\H8\r<>g
%[?&U!r@+X-'5]a2T!;au(XMcH_A&;ggN*a]0f$5L$WDD@.j7All5p'Z)tjm;;5uuQNQ:N--W:),i/BA\Ef`QiZ0!bXRfS1gXCpRE
%.=t;g&^!f7`W$j=%XF,\L-b)4'?-o[I9TOIT%_O&X?7):ie^LnWMY[O;Ah8kUd%J?KA))%d"a7Q:o_<1\Ya,S3OeO=,?2'Q4Gn*=
%Q_-Gl1PU\ITi(-C9,FlN*>'3r@MZC!8tj2gbD[S%A"e-T$cn/UJBV$MF#C1<UU7-lB>>Y_KXaoZ]Y5tr<6oAo&0+gS4^H'(aVki_
%>YGi8=.u,&Z'_/"@A>/Ur1Rq8;3@G].uq_fZ5(Ag,ufXDg`tNi<bL1a!f_Me"mR^V0cKUrUGW?^'1FTZDI[]b,Dc,$p3NBiTG([c
%11@FGs"$L.l^"%QK@CiPN)B-C[\-Me1STG&)'e@`(no+)QkRM"$_hC.P87ab>)a&R12X[prXd*5eMo\/(rlD!KT51""(NAc?E'TZ
%_Lo,@TH$FR/oq23k_N'S)s5D?'ZuFKeHQ*38j@JPJkg\*b']1F3"YTikX/t"+E`G'@T4>^/Z@/qD+G@'=VH(lMP*c\`baA.F4G\S
%oLB9XW5>,p](eXl)QSegbZ_5Z<LoDUe?VRVm6"\TAlW<s4Yj$"?Hn+A`TRTR5%\ThC8-OE>[`GF5V5"!o+j[uWYd%^)?u5ed+lYs
%DCg4\L*>gi$8b`[^+CbbcV/!`<iu]hO[Z4S'up+Noqtj216>g`C&TBdAG>rqLU)UsebT\YFgrK9@;Ai;3>D"$.8as%8i^<41MBa7
%+AM'/FG)(:d"JQY@V^8D5`QaK^uIVE67ZCGSbOCnq5RqIlVKu3Q[O'I$rV#20Lj%QgO`$4c%lS@1WIejAK6u?0b)@'7Se$!V+)PU
%E<"X%c/mpq@4Ymhs4gL^r3`p`N7D@fTr?\42=mnE`nm/:n5ngp"3/\"UP&p.4A*F@.6X%1KKS_2*Z--c`#,2l(lC$Z&Kg%^FZ'Y+
%B:(AB`UV]78e'=*L102%TG([c.UNm.%#^PI.)Pb?4\iH\Fa3k_;H:`bs1*7VG&<,>1HK^.%&IBBlV,i2*s<*cRNJ;$`TW+Q*<2X-
%2,T$H3*mZM#_KbA/K^o8kX6/Z9N;uF3AgKX("u]Z&VJRPi_!)<r3i7r75LZhn749GF;[RpCNSfu4r(:VP3J%9([bN7X,r6(Pd*+N
%`95\h"]O5&/7N7l)2NgP>\VSb5*S7"UOu%<pUt_.MpW-1%=;A>O&@A62D*D_!^;A4j5`YUM(_2`YHVreTa5ngYrO$5WAi$;UZ2)d
%6)BHN7,m.hR`NrX%$dpB'7C2oA+A56rD>>bF>_`34T6L7Pu$a-%7=jRdDAp&O#e!@h9\caFVt9NpCJ)Q3R(hW6US_Dcc\X@&P9M3
%?q/!s#-M.\\Vm-`?&TD%'q\PJLiAD=eX[/%e/;kV;/uNBTMe.bTj_'V,3VE2Tutu30.:i.bGL=!1R94hkI!eCA%?jSL[mmIlP[FV
%3k(>Zp_ldDO!<L.-JFn+:rT;b5oG$A4Gk(=68V`F?20j:`NliUZ[mXfGFNoOMkC_hKJHincg&m4#IIPgTn%GUA-jYZh`N<PZgosV
%Sh#Pe/gI<"[90E[KY5^"2ZDWo^[XcWhWE8*+%fP.0DNjj'me(je_XJN-t;"UAh)ashiRC%gNs8oe-&9`p9lj;M*T!5i>'?@+OIZQ
%I,KjS'2O9::\toj6P8Z>_K[:0WA@3_UZ2#b6)B$B7"__,7F6lB6C"W9VEGh'b8)Q:KOmrEB.a'HTkC:l,1"UlW\Aasd*jI]M[<"J
%&NZJrfJ/,Vi1X#qd1CTRY36-`abA>sJl;5Kd>T3fHctqE&O@e%#\Am6-k8Y$a"'i*2@NJrQm"r<n_8Xf%Fp2f_%Xc6dq'5ITK!-e
%HJ9HMI%tW"@4uJi,@?]hqStgb03SZGbLa2kr##llMkbsR2q>8k?NmiVd&?Z*/pH94d1N)m[Ocf#'X>j_5?B(cG\d1rVBY6B(ST()
%=BARZk.ZnM-REED+SCHp;cGlo/Z;XrN+a>7`X"U[7]8(#?EIlk.F\J`C])T6<[M=!T-#;=Ijeg7NYeg1(o+X:$Y(p?7oM_<gd98&
%<elu[%N>"8TdF3,d1N-U9+o5k9#8I/CGRa.hm#f>b@DpGb*\jGfTtd^Z_.U"Li[T+$rV#20h0.RgO`$4c%lS@1WIejAK6u?PRAM=
%)"Sq8Ol6iI6r&[MHLNZMoS5,$l0J=)N/`%Re>k8]?A!hsE<%ElqU@CBZ5RC>Y>C[WBge>?!?Yf1?470u=O)trC','/1bC>57@k)l
%_BR;3)+WLr,>19)I&f+d)[<8tbSR&@pMBr-IVM3%i7VT'kq\"9f'"3@qH'R4!IrVA>OYY,k9'_#[V-W?=gh5aMm0V0XZ.$b/nKKd
%*,Fuik<4LEN,nF.ck2sgb?a>#."u]>I6oZ?JEL7uJM)OLF:lZ;m<d_23rZl)2>,sf(o6""?]'a([fr$HRLp"Iar!Dl`X#SaarY8(
%(F*F[J(,7sP-E)qrSo!B(asann4^`'5:'`S/0:9J&b<2]U[!g4gg3++n4c%[+cOg!Kj\gcfL-=p4m_^TC`q_aYPg^'5psMTA\uHf
%89-+&5.],/N#8AI0O]otkI1WV)O_*EKBJ/dVopJ<?Xn?HF?hj^]i=i<YeWCQV>9NYpkS?-/,3b;cJZ(N=D/%K[(%tMjt[pQ@i@Em
%M5T\`S@Ch3LbM7fLhb)F7MM(r\_$ae7M,+(D9!NQTG(ae11@Fh#9r*\SuT,*O?1:,0e/4@(0#%I2Dbgm?Ncqp,1QC&F/L^P+d)aA
%e';UT.Y$Das/B6d^[$O`gK7tu<TC3Td]aiB@U3rILao]iZ/%c,`727K<&$G.;gQbVeO1"hn`qoqWf^,qLTmUtmUGBF'r+H&#W01$
%RX7MHRknN8H:(pd.\>N5<2sV$1_BWd3C?T/EE'5ih!)mm9VG1hkZfR!-"$J/IjeZ+CclcnAf(kW]eElik;J)>idISE&l)Hn3;-u]
%WZV)_Dt\pG&7n$rAgkW=a6H*Q+Q?n:L^1d&3Y=h0&N37?e-#nC`(,GrcA4dO%26a[G^`jnWM19X5cfVNF<ZZ?+Y:`CR)c4GVa"qX
%cWkT#I1I-D#\!Md+.kPcK+A+^<eR\TkeNLW0op;te+l8!/>H]I#2rgbS:NM=KIC9+]m2H])$X=G;'UmAfigTO7aQuG6CBNtM`21J
%+7"dOC`&tn0OKcrj0o2W)QF5UK;XX$VopJ<?"7`&:W?n#bcO`4.t`sE)X\X<>l::Ci@FITM[aK4iWKAT2>f!87DMQm1B9CCRqRm_
%BN2Ts&qho-7u50"ZjU4SV-$cgV,nmtGf<gFPqR_aHkFMKPnJ7qi_E14%1]\;M#'G[#q0]K4=J`9!u_<g(.1la0f6>m:>8NRVG=KR
%gfrePKtD`r5Q7?eiFVhQPm2D<n0Z(aNBs3t'[c@0q5?uI,roMc3As($T\tV9ID3EUOKKp!qALde&F#3BCb&?cSVSJSM&HJ1E[ZO1
%C(AOF60\kW`MiQ[>>V;k):9S.A.`o-Mbk_cM_D68f@I)XXhEi=g@^0-[p3"H^9%$oX(p6&e_Y=@mJ<""cZ_hF?iU,ooQo4UYg1+1
%m"'WTa8\Dpj5.qn5`@7TVDP0s/St9u[cQm@NrRZ"s2%!=bPuUg^S/YfotSS/L<KTh7H8mE-/nl<l1+[rgHPVWj8\$P>G!YVZQ[Y1
%FlT+/q>7q]m=O3pp8Nd17af!)j=qI:K$rji$4f\,GE4<B>g]\"MZPhuN\rF!B[+L6YC5ro4I4GtpNSl]af*E(F+#YhNW3]66"2&C
%WAcSZ9_?]W)<Dd*%1U39+q\o8OU)s2If/YBj<+A</@b\]jtcq>r`cMhheL9nTB#B<k5Q#/*l\<BO*quI`;bgPau4a*LIMMBjZa;r
%I9XWB[YKqD::tHRk84CZ"ijKE76@u#b3g8HY<V"!0n\F91U_N\*cC!qInZ\KT_S<\b=hj0Js)BM'T=44iT%tns1A=,c\U(8iEuUj
%$*X3tCm2oZ0j"=o<odI72hV(fU/A'feMVu;L47Mhc@eE-a*fc%<YTs43]FHfP?]',lV+4"^-@to%DtUKT/bp3KZb>EG@mk]pX=_[
%I8$LY+,Ip@kWB04WP?FCi2auHTarhLr/B0J/cOF*`k7Q#,ISG/O<7('og=S1Zp`+Aheg;&W3kTt>X/p8+\5HS8?/Ve"[\3Yf_D0$
%*639fq=OnS5JO)U^S9V8VVI6)03;B9g?\c]p3c/tPH_h1"aiG`"]sP$3`f"gaD(i:&.P'Jm'bj;dW_F%R0jje_14U!Ad"an;UfVU
%_'.BSZ9rcJ<LQ;<JnaPrL-b*`Y.(k-*5=)(eBj.f*6]@UT!"eIQWl;V>-2NXYK)nqN"<_33"ue`,bJ%V>9NCL6_45e*W<Tf34?"[
%@`>=#h1\sn-,b[]s(jRf?_cA`6BKi=OD>"0FfiGUXe?W[3&nbYHFf!nHZ]&P\Z(%"5$XH"I>iPqrg`\JB6tH_f,c$;T;FfeD.='=
%56$e?5JEq,m1IZdqgZ3BqfHS5qgR4-E@<kdheD\Y?pLDA2$tB#5,3nI5LDaZNoPcFT^TY,Tc4DB4$J;H-o9-l2$7p?G1']uGXL%g
%YNXF#'pZ@u$&uaSlNoWGH319srFk/ZI#8hMS6O[*`^8QSpk9d0XrXnCH:=0,Y@ta$'.h)O8/tn]Fe$r=:Dl1bH:B@!$-gPd).*eF
%l->$9Q<pcYdd%(e)O_7tK4g[IVlM5[b;:;*e*@7PO\Y[/83Kr?D;<Wpr,]?^G^=IYh"huu)sR&L.f8#i0:nINnbd3QmSZ8$1"L5c
%d6l6nptXWU0u,`sM]q.jTK..n6Sl,fG1B/;](3DXY9SU:VWVs[4P$%^kL]F;B=m?_)>e,68*:ag?)M_P7)pfdU"b!om%AKO@?@G@
%8)K`O%uas58<I3o`.io1!F!l^J/4@`E["g*e-LJTl+$P"c%M4s(sOIm1FoE&KgBRca=P7$.>mTBjniD7Q]DB:bB:r\US0N8o(eat
%K<R4lE-KPgIBl[_Bi'[>%8'H=V&JS*0\_,uF=_hXFpL+Qq1Nd8g?4/X6.&oGS;T13cuIcPoJ#Yg.MXcb)@#(L)1&lOiUsR=90eWc
%O,p,DDpb9BF'FqlQ2rLW7FpEsd:G:;FL](S3m]!-i7?KKh;(.baC.&>PTq/ooY8[7i'uYmCcH)G:).&h;aI73Aj`>t%Nbg:?,c;=
%7Y&en!8,t]F7EHr54A&Deto.3#Cq`1B`Qe)qK<>K@k(/hs'3sXs.aGoXZl@C?KVX)q/!qDrNnf`/5Cb\?-8-KHDYaZ=3lnn48KdQ
%T,hm(I)tEUj#n@P+'&7k)r5VLI(!)>!:1M3gZ?o>f2%#<^V]cnc$u#;c(oLRdVV*Pm9<l_DOn8Qf$,qaH$S1LM[u^+\GU="W]TRR
%/%TPW.=0\oN"6`Z@-csBhnHbU>J&O=43-mU4l3M4qdfH=rKBi$;+L]sT5sJ!__II5SG(I9SfYQu5a"Zahogm@D5pr+XW^kOBY8)I
%FEB+0j0rUEXWY$p-?<XK`pr@mkd9RkniL^R(mG)>Idl*cU&OFUd8Kb@^);L#<_^c/&0lsUJl-9K!S]f[Tc'?Yo>H:6E7"0!BIGrk
%>>V;m1EphKLuNb<bIE&-<Dm<t;eV.CY\ga7`t=Vf/?L[ol_iLOdE/`1Xn$$lIsai8)Vq5iEWkWdY+X=VGJDCtg^mC-#nK>LOohdV
%4GL++c`pLUnM$0'+YlY+@p!TL@dGPiJb&[A<C:F14jERJm*8%:hP360nEKX#_N_L"7&T8HoV>otrc.u<lIf2Fh("W.n<.gQqu9aD
%C2fK9n?:0/"5pBWqWZjP;/]]dOchln;?uPV9k>e-90N.EW#D3?(]:P:VCHEa1lip1dch;"duP4Sj2_$Za<BZ%_Q+S]`2CLt$0d_`
%0YI0;egm^q]b;0J`U/gZ>L6isT[b'<Zf>)Vf$4]-)UmmEgqIW^BrfUT0Kmu'&>L]bJ'<)%-%;e</8lOCa'Vqc:<""Z4akCsT%`<.
%ok]Ub^'I:lc5.Yg:pD1.r:=o\,P79FFpqP[Ek$@4"_o%um>GBE3D+LhrG0l?^?kf:kke`Bo.U">)g_H%qYXocs+]X-?%#EF)6B'^
%mZe%bmT:HSKPVmH<eKCVqgd/uPKY5p+G#+qV5[A!,M@114j0_o$t`rk5m`g5``8FmMO?0:]AcZWfh0_^H(IaWq&C22(jTaWkJ`P(
%3?r&`GS/uVU/K#n\dT(A)DiqWA$JJm=%VKc*%5rD@4Jn%KO7-:fC4]31[P@i/TfNj`bgT<G-bS4pV`cbZB_:%>Ji,Zbibp<q!T`Y
%ljT:?1EmSI?2Y<K@:eEW;4.]h'*jM#kABiWN^!ms,<C\"Oeat%;-k(N&a#>Z&Rc/$NE:HfgohXA,I2<ie_)Xt46'0-g5=@jGm[5_
%q&C9Ki4`sLM]i[:*of-'b9VieZE-TUX*HP/(c5tJl?G[*$<[)56[`_kb3.bP*I2(DYF;Nqn80!FCsH$1aW/11Wb:E4j;i6=G\j3j
%^"2\2MXibW(B/Z<-p'MfTo<s86S\^,()7_,d].X>6D\S4Y>FFO`Yage1neqe.WrBl?A+Knd#1^UU6QlXkB*"[9M5`KR4u^oi_XXJ
%MUQnIi0u@i3@GgDqoU*E6`,a"OHg`s.Pg!5ZGBX:A$p1#W-*fS";ATA`!B//(PoR\'eskG<0]`B'NC>_7a,>2l6_H6Z@R2o`IoGl
%'a)Ed.n_DTj)7Q1kHJXtmjE4i(_N<K"=pmC*;Wc2#rk8"Z$L(_\B)mpK#;[jNTqshW@[QPHI4QU6SFnJ#hRWj(rO@[p;MV-c4Rt4
%?S+i"[DlL:MpEQo\DL;rf^(TR@K\4.=>&NA0jW[m:E@8=UV\:67%m]\?j((66uZk70t[X\jb_U!ZTN5@nO)3fDBK!a649r@K=i99
%'o/nJXd4mY'-]W\6t:^R*TG&"a:KS$gQ\6?'L<InhLLeN`C$EOUFg#55&10D4<(t$96$sK]Yn1LL0"FED\t400d_Z"ZCu-_feCK/
%j&#:"MUT/='Ss'a3AO4CI>*BG+k7;K[2?:"(-.#'X/PIGbQ[,aK-ELl%A&sf<qdWNM*$,qP1!;3GTf<TKNA4C5St(`Bm1]nF5,2g
%&JG@o?Q:OjCM?[$++9C]5/fp!IqPV9`Jt3-,@%k$*j`uPcBgL$7>Ps&\Z)8N"U;<H'W-c%0(PkElm$Fp^kc"5En=^A$'0n&OZbc6
%#'j8i.R%'V>-g*]UA]G!MMD/Fd_F(h.K:T$\WBdBTSTYiif6<ILJF%!UXfbGZC(]Yh]:[,%-N6XV]re^"X<KK;BQUeLfrAoJ!Rf\
%m!E_1%._\'<4o[!Zu2H:'D"@W7ObjNQLA9RUjNc\\1]6S.mg]j;'%hVC)q8`N%&.#?%cj>!0Z>@G'BWF1j`:27'eg;#H4eg^K\Sm
%ZTB*1H"S*H?<_DQ\!7$Bk<2=).Cbj0YHq[&]Em+I2<>^'bc4p+Zs3=6n"@1OeSUir%Z4.lk#-h);]4C;p*.Ac`a2&X&Zj\F0>`X/
%k.^6.KL+H2LPjP]S6!nThW/k+EREFr=)HP,;R,&u#Xt;P/n0D<.kB"FmR"Pg)\d9l+uG-@/)EVQ@*0igBr[*'&0S!a.flBEMhpb)
%p<Oqc@A^:A)[:S#*%G9!EDeY9J(;k.77Eu$?hrKrNi;+b@!-6+79E\s[L@@oq.A!PEe`ina.G5*&XtV2Tt*-_\omO%R9Uh`PK?8/
%nm(R_b3h/'3$C4n_]\E,6cEgk:@#>$+Hj7ta=%5d<Q'$79Fr!p/!88,$2U#X13V0D"9_bf\Bd*3,!\P13s:qfN;kG%Q"u`]MsfsN
%J'kqu^n@%S:kWtE\2tW6H!_O@5$N#10ctn/\NP^:j*t-qgVo2/g`g9CDWV=a\?ZGm:2AjPKnDjk\'`6M!*5RXFNTj%k2K@(G%!WM
%D-$p0d2!n[BZ;bmg_!ZB#?2@oGZP:fQ`Vg@fG]2NY!%P/_uE3^>$&#OefmFj@dtl+aJ,hKXK!5*0a>TO/4()1"4#o2Ldjoki3PD.
%QsBbGqQt%R7@uJ'Q*&8KR3HR]mDE69cA"XA)2F+$<h.aca5"%8c]M)dWr#E9/qucNp+bS(9F;8XbUV(&.MFQ13[c1b@@;HPMBY0b
%d]=S1WG(WbJOn(h'Stg$@^an@*K%r#=eOD$a?/EYn_/lL\uc[&\El429#5q`AXt!.Q:9$;&&!??,0RQuKrugN%uja?aO)^GXRD&9
%Uj5OjMc1?mGHA\=AGr23du[#B1;1Gj">*o\.+-^%a?/EYn_/lL\p4WV/bU/%V;T'sZ-JGF`?Joj0C#Hk/8M5Fb09d;#)udk#S8]o
%/D5p,eF]=cV5^W`_LRHZXpg+7/4,X\g1=2Wfra2P<&,,AGZPk75$M`)1J`N-^n0S\"Pd)YFYP04Y6\:f7')a%a/n!nUGClE"V4%4
%2s\-PTGjn;5++uV.b)$@+>U,N!@%,mOG,^@W_2U`Cn<EjRkVdmi_]0u9%062"GiZ83A*q>IH=_)+]EGNaC;)SZP7CjXj^0%1DLGZ
%cqqtY#[gA,dO_0$OVF_9Ws]$(gU]-_\ufInJ_/T2TnmLjTf<tqH"S*H?<_DQ2c"ur[%8M;'\lc`FYP-CXbbYrJk$DUQ7jgLEa$)1
%7]g[]O;VGke4ti0-3LS2eP]Zi&0]Vi!>/d0a@<d5%ZMEJ<i"R)0Za(L5k3N"e!dBAM!!t_/k3Xi,Zig<5uV#/Fi('Di6]NG3]SL=
%_W7DH?/WXO;&/Ia@.IQdEcERhl@Ns&W]p2)Xbq(_i^(L>o78)D@?C6&U#NGFVD[s8.SW8&*#FV5>np<T4!L>TJF01YO\g^reO9iU
%#3H*+=d%X!`1L%'&Y*\ZIGj*alZ@uu.&F*:(St)!/F@:u.,qi2>+H+T]JC$4YH9ddgWG%[U7NU)6@a9F7!3ZH&JZJ4lk6'!/F/"U
%;8\.-[6ZcNJpf@cJ9=FRFN/YNX]2ei<A.Vp&F%Z/!KfQ7aMnU;EbO5^nb2*])!%6-W-E0uC#(lR-?FKnN&#?ZPuD>:6r"?#3-40e
%MIYBl!_N\gMF2?Y,Zc&e7;!=>R3KCDQAUeWnJ<Y'2?"e2MK@F`HR2TY294(7$%ol@%Mb><1p*()^<)\4K4<6CVeYI*7mou^YcTS<
%S;=2DH6ti#Ae9ufTO2^6=ZmIShA`;%QJtkRFG[a\PcjNmKi1=?D7qtEELkj`@R:[qMLjcmQ),4"__4?PkHJXpn"`<sH*cH]pDVn-
%X5WnM_cq"8]]D>pj_]`ZKLNWo@F:oiLor.cZ!Bbs$)N3?V%?/s9/rY^d%TR,l=&:$9i@M(9!4cpj8$KT.>VGn)ca'OV4fm3ltdNG
%[Tl8?CF`0G[Z29#&p]M]];Q(L=t=^_$=rTW?Q%WSjO3Vl__'h?&uN-N[6cN=rqM).YI-]HVE6</,jD93;0+oZ2Ic7,."*&tAsL\Z
%4KiUlRoOdEkVD<*['Xi1X=bFQWTg:$)p`:==0GD*`jbIgR8NDfbCBMuoDhes*P]YZ[G]EPA3pAX4b>U^K7)Gg%@u!=kVF1pVjHH"
%XCd=kITA79#2E;I1pPc<3t@P'(5pg!a?/EYn_/lL\m7_dl"^h?^$@*9R=\d##^f6*FRgpI"-sFfWu?c<Q&dIR4>==([QK_,$S<`=
%0e-b5`k4.lqJf!#60DFk@<9-B8f,:TTU>L'`FqsU$R1o94@d5e!L_P7q@d.Fhe30A-p#f#hMXL#oVG0A,tn[*&1q`UCK[[bko;I4
%:[bnEI"pU#$L=lWhC#uC6_#M2Wl%l'f#m`,'Cn9+j=`.HaXs,gj[$h+G*7ag8'`^<hQ<.@SQ@+dr(Mr#Q0hg[SB,lJ_iu"D6Q\)e
%mH,0g7%3u1Tr%Ji3kq.A9'4%1M8GXT9pP/W?fmNc'#s!^MQX@`ZFfZ:3qbj/`FCDmla?FROU4-?jglP&(ao/Tml<K%&P54q2<$5k
%0bdf<U8#.l0[EZgE@RLCHnsALn%Qn]UANGWrH6/ko#6?9QHgnWH>UW8h:D<k&_K39jtABl8LGWpZZJ+UKA)o>TSnT)>Ag.1CU(S9
%ME^^XMhaMMYBfOH5:mJu5'$'t=+0QoS^i&Z\aQ/;_kH0p+1^TD(]EiE*EKj;GQ2_`Slr%uRcR=<B/\_lnT/@amgacifJTG-+U&)e
%l-kDS9@O*@9<aBclq)1H;X(,8M9Eff4%igFat1$`fAd&7_d4,u#-Ca$<4o[!Zu-\BH'af]X+W1A`NFJ0KB_*Va^Ch^NPVq_'V0*a
%M*'JMD>2DN=&*k/3Li.@>au/S/OP([?EW*O,VRQ)kVT7PbhN8c>._+Ld+Z2J'sF`!Xda69->n*hbk3f-ig/duFJR[<`sh@U.ecQa
%!j,m0FS(6tdlC/P:6d4DT1$_?F^K5Ad?"".r#38NQc4]3%c)0"lEqA)FZXsWA]`)9AH(SOPuYC$\(61BV=gaELIYFjF>i&TZ1>Gg
%Y7rLJc[JKko(;8r'J#6jIS-m9nE_M;/!&!t'IuBc[9!Z8?>P-C>?buHjC1pHC?O]g7?c:S)V`FqmeGjuj3CIbp+R/WS9la/O"WCt
%N]T(3h4_*U*%B/+Hd6VVO(n%j"=UO0i(tHt-uC?nlKQ]aE4D\*k637eMEYn*>Wr#u!D5kW';2]eeHo&9"t3I3k0V.JE1W2F@E)Y6
%3WGJ>Csco(LH_riGRUrGX(.fRATIjr6f68C^m+mer4A2D\aq9,JCA3gi?'Ql\iIP_.X_[^NCpRWl)=Qlmr[j89Gk(J81DUi',$U7
%!D6p0._"\Qb%Q3['9TV40B[Vs`HsH0ccB3(S<R0a-8A1f%LstS3oF:+gChe,i:brBfIn`K307H0.reiu24=h7W="Gp`oDc^FUt2I
%o^F$q3.nh+oOWL`]$7!B/;_GQ<!VYUSfC<"@_;m;jk#Q-PaiO/B*[=*^&Co$at^ak;X^>/@.ER$mDZC@U'.Hf,q2&UmYT\VB7ErR
%b.L#kJaV*KQ#LI/rq?BaIjNlST'q,[-`e*dXf`=@opCs`'ToS0%Q`Y%MO0"o9!%5h0G:NTT%2&Djj]$S&a#/t<$Fo/[jgo1@4Dl"
%&COh)1L)h8`=j2FLbi#)_<UpbJ4hcEM?^ur;<[84G^`i?n/jk&N$/q98.YaqlQ<k<n_kS(qsCS9p$3^6s3l2,qtD1^pslSIcen`a
%:]EeC$2jN^rr0r&s60d_1%Fc.YCHT8hu.0b#CLmreZXT&nA"o#%mPL:j7>K^qY_LbpVS*8O5cL0gV1Upr$^S(j]I[O7q)DVfAHPh
%[t"CPH._[in;gne5PM3#IeT`^rpX:0Zp%r23;)h9^V;2ra5;CHJ,b#5rSnDqC*8@a:UYfRoYYVIrI=b0$c41.O(Oo%^$Rf^1JIh.
%T2#pspn*'1Vpe$5q00UPdr3"unULT1GJEskGJ=f81=!2eB?L0[nW,?mqhnWpp]<fie6jT&s3#fTp=oWA#Pt+nX'bhKGCTDUVa!eA
%9+crRh2hQaGJF%"O$ER$^O5e)&'kq@"b,iJ\8GuuOr;<Ak>[)IR^lN:4LMH,V,Yi^XJC'a1lC5IXNiWaR&1_?W\mfu_A1&A^pK*l
%e3k3tU?(_,N$*mi7c6;O1ak.\#@$V1Z!iI`1/"tofAcVnJ4gp-M?^pl1BJSp)8Y2mc/>gU8Up't9P@AooP\cA_&(ffhXk,.dC^f$
%2UOcp"$Q6/2po:Xml*rtY;,\$373+jo%Vc73cB;i\U;Tricgp92k2OM^U\g*H-<hEopa2bXOY!bBT#eN$Z)Y+n)8kMdPR0Y-KI<2
%0CB=emT?!BT8"Qc##`Ot4:&fc'AZ@?\ejG]QNfasYsArB%3k-r)@0*96F`7uLq(81Jq_.^j4f/Xe]`UL?u6GXSJhX)Em*CdU>F`>
%2Qipq(;a0/V3Vo3Z/-F*mN'KVI?a#j8EVq+0Ju^"`\Nf>%31L(H#F4*!gb)S(:c+faH7nQD_nA.Dd,0)Cn`4.jVoC]&5t&=/frmc
%<2sOG1]X*rL7U$XVbGoJs4^b0DW?uA65]#flkVG.I:g]ul3)d\6)3:H+l"GDJeleMb`aIV&]m4nRMKjl(a#doU'Nal73E7DH"2/P
%M"MH&kMcp^-^Z9I-5V/M$RulI"'U-!'15Q^d8QY).h]R"_CYecW<\Ri@M!ONB=rul.?!>]Lm'L`l`Qr.bHLLANe-62)>\5_JSs2n
%_c01JOX:-tVL>5#.L[NNo.$)kDhtp>4L'@GG^N^lWL?tOqQD`PFMUjIStp^*M*!dY#e;m#Y]O+qNXec`4tNBWC%&l*peVXeXZSu8
%#k*/Q2)*uVml!5$RXcLa%S&LE(g1!NOBI`.K+fdTCR@cb$A]A6OU.M9]/L6m[B+JP]VA#jVp!^A8b\Ji?S07!m(uYjM-'mT[BfGD
%=<6B<7Ia1_+8Rm*@45#[D*'C$"[j34S1kW'D4q*kSu'BG(DiAM+(%DU,9L9^+C[KfcD>nU`!tjcp!C\<gO`&Jb^p%,AW!,o;hQW!
%pCeqK<lXKo@htC$r1#5biga]T2el6PA^c`<j1WaW\q3IK;*u(U#YUs:>9BqkL`7Lei5-$K7tq:[L:5m$JI(hr6^R?Q&MKLpQ;&0F
%D[S&f1(.92cO`H>Qa'JDmOD_\)VSqe6INTs0H_bf?0=V008`SIE_s[e-PW7gU,]!;p0Dp3+9IB?0/J.mlW\-T;1opG,4ILSL:05_
%2T@]l:RC&M&MJqfeQ<WCD[S$P;Zg5%PpV)X1_H`Eh,j.%>H/r?.6P"3f?4:k3)`mLk:m]bL@62#EIkXkEa2F%NYcr&-Qjc"D2rki
%_ME?TC[=A$+\.t,A=>u#fF:6IVp%1<Dh'g`1pIn0pj64AWL+RMl?f*>HFf',noS5AFDhK'o$f'\SS#P&:dfWBJ2'jp3oZ5um;36J
%dKK*S\*m0rRNTILke*u6Lnb93]M)"XX>DZQ2!$ningB5i:GI#Ah[jd[H",$AG5/Lr>V@U7/+6VMkijjG_U=tYe5o;B9c5_i0h0TB
%&/:80UrPO9"mAos&!9grWP[+P$`+"9_UAWX*62eQ5F@:`Mb,e-4:uVpM*U2POiX!h[#8h6'Q8ePJ\i+#LMmPM2,aT\rKX;!dWZMT
%;kEEX[-fL\,QfI3;r6`-NM$T%;5`R#W(i#:NIr?%=/KB4Tf@5M$SV,T6m0YimEEKSFpYja4:uVpM*U2PK^,-sXJ`eEP])Af_*kO:
%]Qeg.:oTmdciA<f(j`cPT/(Or62&hAF@Lq_167t6MHK%YkB8eqF7<#EOBR5i2,RUKfXE>(9lNM+UTp0mBLpURi0beMa:s37RFQNR
%P2q)H70[)@2alG/VH>EV4MEDG<6Zt-!*5s&3\a(%13GP3G&JXeq0*1D+bFk!,nVtriYYtN8nld9(CrrL.pY]7-k\\`Z3s5;6kK*p
%5F;aT=tbZqWUiRKKr!!qkRk\#*L==9`Co`UL_n!lMTUjp[fr%cW<'-8Vhh%EbNLBDpQ]r0/WEc0/gC/9i#l]J(hlS*.H-1P>TfuD
%eTkHAd"6U1F(@!:=dm6578+([7M+<04#+%h`$!N.8omcPe5KA=M`3nk@%(2E?MqJgW)UtLB_>Gu#WhKDW:G%;+a@oSc%Dh1;h0CH
%F!r6'j'949Z(;HI6Vq"1;n0Zj&Y`CiAu't`jGlAi21`[dF:uG(7ECT>!h$"W:70gT]?&;kq1a\EbS7,-MoW:1Q)^5U%=i(@kt1,t
%paK/9eVdcdD.+s3<(_7*<`$`GQME9Q+\?!'6mmo!&2cbp'Z<!I(l3$BaA/.WLl9o"?\ouf8/-VK<1(7@r6rq@ohr@&iWHG2;YKJD
%c!sX!/R'a>1.9KG+[VHf].1sM6c6rLP7U\A+-E9(@dKZRQ]B4)a@bB`;<P4BRO`DI$bgf/`&IrFL-)gLe\h`79m^%],36fVJ]&,f
%pN6-T,!C)8V0kYK%46qnm`"5@JkFS;Jd0"(`R*(Fr04-=C<udO_g&T36)^c6Y/Ud*i+<W%8p#Wk3!@AAFXG+.&Dp^_I!JP)KPaDB
%otcNHF>rM>'bPJ^Kg;N3Kddt\^[7b=0BF,s?8*r^MD+tc(0'R1(:<Y((5AD5@jeY==e:)M1m[c>=DF'`<`+O]<nbkqPhiWj.*uCr
%-p1525aHLebQ]8S:_bf#&XU)G1)D[N1;t@l[7Bt!m^jp-;"99r(IXK[kDR6e"dPOU!Nl@D'1"";#Z[JaX'tHK@CE,IAjEpP>$VN)
%OE>7_$,cuC1$ooJQg<hCM4k*^=ZWbR"N2;ekWPDl&a\Jm^@F\5OXC3uVjo^?AF?1^0BF,sDD4p=YV.'T(0%;G(,Q#_.>FEHj/5T,
%=6b7BKMb^9MKN\E7BA9eVSuE_YX"u?A&d>YWJQds9od*?";+41_(u`qLe;0kB<'%7n!PXfiZjIn8XnOS]*Rarq1a\EbS9C4MoW:1
%Q)^5U%D^+c@#9JnpaK/9e\q20F-4*uA76t6S'us5f!Wb4*dt]dGT^Ar?P[j;ia_T2KCC_6&]Y;g$T!<t_3!DXGcIjf^$o!(PoETU
%p?$kZ7>G6m2alFDSlDk"4MEE2XI,9VQ1sI1)1&lQS[*?EiV_6SE%VJj40KP>9eBe#C7gb7l!F[L3p,b=9kn@8iL-$W![<Y<<+^`&
%CWF=$7ECT=!f8;#&e",!KR1f69DO<u)pAtrqMWD'"dQ*U"V&8i'L=+D#Z[biX0:tD+XM1AU0?p.^dP`S"#mf"\Tql<HB3.82\]>u
%;ldda"ArFB-UG.jifLjrn\iMk'8+NX#XNXKm3:gKjVoC]0MeeK0-9!d<2sOGV#Hs_M*,(_c:GO5#/@W%<k)6k&OCY/Rr:cT,0%%:
%K6YIP?D<2V%U/6g(n,.+:d!WhTa@G?a;ne<E2BJ>Znb%jOWadoTsAh@gFgYK;SF=6"u2n[!lX-RJkFS;Jd0"h`6ctEr04"hMY40-
%;Jj#W229WId"I'\o7eo!=:ek`d&;+)VC#/lc8.AkfFnh:'I1'9eHCUEa=8`/&TT.S5UIu"f\CDWU^3(Q%1tOd.*a(\*o@`4Wb*#'
%!%UnLSVSIhLq9de^GggI]97lHe=&l>l<Hmp&MKKG=:[]69f?5[ba;C/'V6Y-3+DX#/4@E2[?W++N][op4:T'2qe_Zf!`H`UiWf"m
%q$,L1gB(!db^`aOe&9V^Ab;4aq[3A,Q:@d5_Gcj@=+VXG/L9J85!M+Wi,d4FKrBhP$$1#NLmfH(s$nV*e-)nWp;>ZRaH7kPM5WP&
%%\*K8kC`q8]E7'qd3Mj$`8-mfV-6p2<dnV:TG'tO)GBfu&?oK*gKPJS.Z#/RL`:u?b`d9oXCPQ.d&;$RKpUhOAu#Kb]Z_$#0s"L#
%X+c5?Pb-G6LOljqQg9BWV3)?Xl9b4!/kHAFHpbg]-Acd[LrZt.Q)^5UWW.:jE,WdV#R6Qh4(T#6^(U;((IG=.K7<&rd*&J_?[NIX
%qASR%/qI>9!W==l^fQ_5?mVbjD"GOsB9EP>#[_4.E:hKiZ\Ok//LYX.VKl^p5]fo*Wn"t";lsnl&);gX5B%8ae&*5rqe[/2G:q_P
%EC/fC.>rUfhMb(Gb^``DD;GDdRQ$qLG7][XM$c8KIYTo_f]G*:Udc>6[@"V7GmjE<kuKQHiB*h[piP12?W+=oop<upE,8P(k)\nJ
%/jKrleFs&Zaf"jHF9:@LY56MUVd2-ZV'l&8G1BJDg@Ml60AXHee8nDHF>i"k"F2aG=?:08qm^J-VZfNW1>9[_8!(slUbT"/kla%h
%0h."d0bYkE<@0->@\c"3YmlK`nOZSB4t0#1bRHcP$hsj`X+kKnAn7H_)'i7YEr&uLJ<Xu.+/.!-H]R^XKkV"QD*7W!dB=B^i[8i<
%%uUt2-cs6-C`]G'fA$bR![i,GONJc>h%F[pfGK63<o2sHl7=!S&6_7=?td_bUL^#Mgp.%Fg<3*TIm;.lo2H-FH?5J'a%FoTRg0:k
%(Moeg"p0dUXp[LI2=`pY?B0nOFAm`L=44`dcG22%1?SNn0FgI(hGLe%o^eZ@j7E[1nPk_SM@W)Ra%\<GL]Kj_dgGr6;)"u7'J@oo
%(Bf#pMV*8tkSL*f#U.PZ\%1n]Mdq&"cBlk;cA^#7(_4(h5#psicPJ*KrA46^4RX.p6[>L8<@GF$,\UriLX8+As&_qbd*eNi>ro?C
%#q9$Hg8u^]W'nO]W;dc&aP*C,j;o?*)jpW5POSHejVtMtC&uq8Xf,4D/8,$2?XW*^14IRBm&e@,VD04^HSU]N`lc-d?:oF_d^]Nd
%Haf`r-,q)2ZTq#Lo%Lc)Ep2<mjNbHbo8W=qVKj9%J:j0e/a1X!"dHTd"f_OM`sFd"E<>$/dXGWqKb1]ga#8.[qpILMh>H9sdEs2I
%6gIV/rR5>Mqte:\dLSMrD4`l;\iR=WFmbY6^%^$uQ_(t#ch"ql*aUJqd@l7tn%.eS(L?gkf9[(W=e;6TO7NWuMP"7JGFAhP^4YLe
%]W^^!\e.["99KY+?nm3qURL+HF:bkZJf2-[oJVJb&jgbT_Kk33)gYu36/i?Y,A;f7Kq.BBOD^B4)0mqKC"4ogeEVo6`/Jpm+;#j+
%e)+mGUjPPJNMjtp]h<!f@600^\[,WgFBJE@&BT\[HIdtJX,aZj4F9p2UopE<@?-uD@?-s&mMY&PXdQsR+QStq:CqO"e>6pq:7I+^
%3#[$`^[77T@^kn;3R%",4O3JU9%D.;#%/Hi_HHOtct/5-pQ1H`pnZ2VI%o@n!huTT0bUQ9%[d2[]'+6lH@[(2&MV'5^=$cT(^3g1
%b=:KE6J>"FVd*'dV.";qs1IBDCN;<A&Q^Bf%'n&8#>)>)FK)fr+ir,4eD@%>^FUa#f_YMUp+gOS_Y'nC?Th-^I1T<f8Kg9'oU6KR
%qH5XVHlQFU6<l_oE"lt9LSPL-4:;5[f!-KS\9o&lgZ!\'$$#bhWEO694HNi3/3WkeO9Lr$4!fWkfZj9Wn#po@Iam2Tp=e?(n#po@
%If.-%<g+Q'E8&R2dZ1qB!Mpf\ZbhWDZbF30c2-tRpB&,0$`8sj8B$3G[],2)T>&sadn\QGe#hR#)_T[Ckp&AtoP#]>l=lsR"WQd"
%='-3Prl,+B'>DmZ(PTVAJ^mQ*J5otL'k).ZWYGS:ci34Qoi8Jf8?9JAjgRg^^;A5U-*8XpQSe<QX%=thZ+\(tG^!5Rh@O[PCG$D@
%V)q@F:&pKJKHZTUDr.fTd(R(B3(aRLXqI1Sp7XcGdX/jXqX,saJ&HnqLAuPZ'K9dEOC`W-6$E+5J6Y$OJ-0a&^Sd\gYm_VjIJVft
%VT;4Gp`*NK`Gql&na)Y5kT6,(=2(?Wj'(g7=c)AugMu/U,/GGej'kYHDK^ZDA0>/<Xe^dWZ*G>i1067t>29<3'I[_J/#O8Kn0KJI
%?U1jtr^l3Y4ZV-R4kP6ml5@[6d"tVWrEAfXrHe9UbIB.=@u^Ne9?[;/JoW.o5=a]NU`/#tot&&*%00PDG1I"34H<EDQra?/M&p;Y
%*Aj:hZ*Snoi>M)Io:(hs`ucUorP?^6Yd-9r,b@T;.iDFjee6:SBLE"r&]\kE7u;S2B#>1"AsTC"qL1Na;GFK,lI>+FRX!s=T!u1@
%"Sa;5ba0XZ5\d6VS"&=/HM&#0B>,o=^gB:qbV/blrot0C\=mn64;4uSf_4\$L^j5dq.jZt.ANq1:hIT<jrA=Ta%f?sG97V<qg/@3
%:rSB`))d89j>/^$0?Ii>/Tp9'1W-3=*S+[X*5^"F&f"I)D[0OIBiaTI[7rMOnsPD\^3QaS-2@rYL`[79;>qo?RTJRAGt"+7VURE*
%E;N?cbq&/Y2,5u8>N2(:2k@Fjk?Pa_I.9;DjVuJ]^Y`;2h7Vk*k5*?b)brN%<_*kLJ??iE(Dm=PASS;W>d_c.6R06TRs-Usc,^_W
%[poib++:='AjV[$/.FoYcR]Ml'$hhDME^&V#Yn<]#)DaY&N@3c9Mdmd/Z;Xn/6M&*V*RZ3R>^jrhC%iP[q(>.@YVa=nqh!'l-35Z
%-;.QZ*eJ2Nh]atCNeYc)Ns6q74<g-&R#pA`$WE45Amn:Ec_U)A9-f_G?n2,m]K=HY.j.T[/A]ilRg5cn<k;kuE@b8@R>]]H9D;.A
%j"4E^)2']f'F]T5;7"V];M#L#k\)s^LT/Eq5W*XGa18Mb6PTFYBGuuF0agL7F(XB%Em>ebH\i5#Uj"j-_8RA/4toL=T(!k@D[S&F
%ZLTU-Nap1/c<S:_=h8OoRFMqB5=,bl-a]Kg_H\dB:@U;KG'+?W8o-iA"S(,&AJ5Il&(\&*#;[K*@ht4Qj30iQA=Ppso3Rl:Li`tL
%WlX9@,&T)/',64?$Rc`G".F1A+c27$SKhb]h)"#KZf;\D+G,==0//8;\#HHl+i1l8BYN6F3G.K"/4*_)k!?oi1AbZLElL)!/DlEH
%aR[RuKX&s.G6Uu[1p1'YL56eeOau`eD*b^EB#+!)(eH@AbXM/gVYd6\=Y34f)+:`MrWPc$U=4]F%CkEu[Y%&W'*_>Y9$gFNg/,;)
%&:lC;4I?FH)m^)%.;'Ej,ioHo#^L=j&aMU#AE=aSDD4p$<0(r*.TJ84Q?-\I8lEr>`(uf4?cj7)`DXu(KK[^,7o7.79Q??f+(M0,
%!JRbXB@-iL;+TT.YVa2dj;;q'K:.hN0agX;G%P/Sd`u61W,K:@=bAu;NK5Jbq1a\EbgHXEj4f/Xe]`X,gi4lJg6mlo.8+kZ40oig
%Znp@T$^"ak"@]9D'N`+;HHoOuV%JYG<M'^hc,M.^6qn5D7#s5>Oum8!9%)!96qQ)MKX&PA4deoR_/(RX&93>Y&l:a*/Z;Xn/6Lc"
%Kd]MTEtLV_lFr*f]Hp35'Bs&e9YnO.=9:a:/BmD?q(AKTY)@/p.\S8F[Ws^\0W_N5)lWk[*OG5\H"Rna,ju/9=Ahlu,1Lt8HTnc\
%"5!ijBk$ApD*b"%<k`/$E@b8HR>]]H9D;.Bj"4Ef)$D[8q?9>#kYdeD/\$9PFj>,*_@V9#,kS2F6\Ni2\Aeb(>ggVOL+MGFA&qQn
%+G+[AA.2<V9s7ajL56L:d0/"UgOd^CC%7L+a73XGB.fo*r7j<kb\B]^cHpcn7aaGO,0XmF*:KZVoU;fd[+I_WL'Z"Jbpud2+q-,!
%8?$:A9?*?Q+\=Su0I4bPk\J-Ygln`(;ZK\<2ak;$M?Hn.D_'!'1(0CbB44B[c!81^=h8O_)/mXFbohs^Vb^?F7L1E]SS9;DAe1T"
%_J`,":0D"3j9^W5Q<kWVKVXQ0R$)PI$WE4+-:'*lpT>2uYkO5bq1a\EbgZdGj4fH3e]`X,gMoni\s\KO.9#t82mZ\NF>FLIoju9/
%1Q#:qKds-(ek/":#!r0-7`/'V@OOg8RNV<:!mOAI6;kfS9M)g`KdfSPK/hH5%7@5;0=qs;Lj6a(9i)kEXXMdp%9U'0KdTGMEtLRs
%l#+UT]FddpKD<F8*JbR,/[Abrg=*c$d$!O.'1K0'=10Lc9b8K'6[MW;OtUDj85d\`"A,U2`/ibI'cbVOK"RAOJG;D-0W*^`(6E<C
%V-BN37unsb\VQd(F5KAAX!L=oK*^U!q`CR8'&QJb$f!(h$\A\'1*fuA.f^*'K$g-eoO+LgU)6C^-(/`U=csYU0S_e1LbS9:T/oC1
%#-\V3d)=SggPX5o=lGZRBAl>nbZmP1q71Eq)/mV0bTMLa#h>W)EiG&[1J?Tq!l9k$KqaDj4h^P9*)-u1`&kJsO<cOg8WmIn+\<<j
%+HA0n_*Gq"mNe^OjVoC]0MN3[O)HPk<AP#K@E1*6$"bgLVbGo*_9?Xc'$MJW<PBakLf!j!a:^Ahk+UF?-9`bkUA1IMEttDrLh!2V
%crUU<,\H",o#iRH8U_OFEQb="30p[ff[Jgh&MJqf!S-/`JkF;3K&tTeG`jm>(XZ0Qm[@b-)mV:V#\%^43A_r[`)O8h1JGc\lQEcM
%STuM6k_Kf<k=qNNUuT/@"&oqs.V9hrd`a718Xc(;.PiF+RLMZd9<54C6c9E\C4ba@D*b"5B#4')32.tKbXMGoW&LTAnO6ZNR>;H`
%DB;5c9:q];j*b<Q\gfNdRPXCB/"1I6.qbPfK(s3q.[G0c6INh(e4?U-Kc3N?K>?k3"9T7lR!Z:4%1tOdRL-"7[fr%sR0Cd?j/B4^
%1DfQpC@7U,B!in`Ae;te-LD:3X?0e]0%e)28F.UP/jrDjj.]qB6IZ,M8GWI`(*m1E,K_dd32.tQ%)SANhhWY!]WYgdW*&kML`8aH
%JElZA6+LT>^bY:.4@uQ@Ms)TcpJ!O*/Qo(k7'Yee*?&pQK9J_h\<Stn'ggo4hKWO$cqNm6P:+2.:bg<e>-T4'@MYO\e',[mA=>e$
%@rF!u$pm*hmbQ#EKY:c^-Dpe!(/ubq"t\5`j2hqY>XVA5\o4=2eWM2H5nn,$*_!#OOd=a`+iY(Li)_4]YQVAu.4o%3R\P_)/pUnA
%N[2Zh_NEoH5mYO.LBA.O0k=66h]_=iP;GRFpU5TM.l1QnFr$)``QUd3Pb\,QR.9?X/]A-m38QC$6P4#FpEQqo^!J\HKkA-#cns/?
%7n[m\5sZLOMXeMV8>;K*-qQ2#&1'n[;Qa,b\_lDZ%t.I0nf>Sb4O&LK'3($2$S#.4$^P;CSRAl_1DfR[VXBpcB!imuAn&cXl51P!
%P?Ho\P*m5,)nUkZr5<lnc;;%-kC#r--8]9bn\g*VMHQ=01c#M<P%Fo<SG@L77'K>KY'c#/)pHe7e`5D99%D.;jk3e(Ou+s2nPc=Q
%RqBZEdPNb9icoZd8QFtFAWYqrd,8laW:\Z=G,_1f@c""<OolBI3;3Y6+IQ[Y9pTA1d:?Bl&4Cp>1ltI3`b<=1^eQRTKW2RB%s"eR
%E)!Rs#gri3kGT7]pI[."D-2B-6n[*H*/a7Z+p[OV`+_eq`gXErF=`V3d=em&ZV`_:iB(n)0GBTpAg'YWbUhgGJf2LFe@-AfkN5sV
%iXK9CT(qLjM=QJ72\/NgXE;Xgj63c/1)I2oK'o(4Ai1jUAIu\+Q[LGPEB#+b4`;,j1)Vo`^#tfs_GI>uAnD1$V>9B0/4b5WKd4\k
%ZZ%2#AIui-2YSI@?1K&<I"tBKR&#S<^UFB3MO=LgXg?A"WF[]V-T'X<[>[%TWFZXZQK9E_:dfV*8^DI3kTQc!Lch"RMD$ethU6T*
%La14#W<Gj(Zd9tsAJU^[[1"Z7Fh1R*+<ASX>1DOP^eQRX'3'I"$RulI".!*1d:B4f/u#7#h)DacC.V=Hi$-j?B%d_al)[YiEpSO@
%F;omml->q$'u`QZk@lj[joJq:W$WcQbX.PiQ<B$,e1uhigY>Tp<HX67abk9JHgrpWmnQ\"^+H;59FY*9SV8F_/oqUfj6</WA_)cY
%S6Q7AN,]40cLW9O0,<'l4G'auFm`WVMGtd0P*d4<R&?sM)3FbMbC)_!/[O4ZPh\#"i?!VuEZQ?[fueLE]C@00=CQFph\MGlAd1*"
%c>ni)hnIBu;hj_)>3>\0k?G*:?=*F)ip32&QT`+YWos%DcaR0N]Y<J&97!#0-G@VqOJJ5:!B`th.mds7cZ3cuQ;B`O1iPb$:O?e:
%QSZ/AS"uL7Zm3aqD94H;I+=P\1,O[)/K%+>I#lOpG6kf(P6?HW#0s/Hbq)tGSY^m1erPaah;1L3k&^Chk:A<.j(/k3AqYteR<O'4
%T5Jql+kuRE">^i_Isai8Y=LA=P0;_Kf\cC6mllr?rG>m7raZC=/pk>W9L".>hMX%6^V]@s?1r`$ST!f!pLSLs*m)<PcRs@1I<[hd
%SYZ0?BG9'=^0;pM5LH"`d/Dp<VEI^(:YoeMd9Oppa4Y9Y\<uuUaj<c3(DH%AZIPAi`UCq@lVkgBSDBV0B`[bk(J99=jcLc0[[N)b
%Y(i6Kb"'@t91>AgkhSHB1F5+scA78R!_(IIJYF8YH"."1-6u*G>Cg"-.J)9TQa5<OW"G-N%<0LS;s`@P/b/,e;K#i5K]eOl]ko4g
%WT6s4<tA%Y7IO5bCC[2-YEG?ehk]J0a[FZ\2aWA-H!\@=j2[S"oJ@_JF4M!uc$q9>%b+Rhi-n=;?`gm0*Pu^8WuHWTnSLRgC1b;f
%CT/[FdF:V_DC/BPqLU#^MGQeLalQDe//h[/B2j70EJSmYT_I<<UG!Bf-;Y)=0kq^O,i+]gPGOa@,T@m.c@dA_gM@F1`'_PYToOO+
%ErF48B%p3b>hZ/ur8+3L^H1`rI9\8D[uR;_LNN@]kiaul\FjJJ:L+\4nHB*20_LZK"."6?mAK[/*/[+!WAHf#fk]G-[.JK,QbKUF
%mTB/8^8D:ZUp5:jQ/jR#YIijTBKPit>a+4+]Pbp3b'/[-lO#7mh,()>=g6[cY$Y:OS;[/*f@M>A'RF5GV&>(kN0Z[m:;sLTO0!bX
%K#bSX-r,iNVe`O[l(bn\RX3-.85i<X(QOcAq^l8S6]'*=LXpo<d6g-2OR$Ko2"d1'kE:/V*4pE_dU/VmMBiY@-`l!7>_ft:\ttEc
%'moaE2O]Q0c^k$ol-H9!3d7BBl#+3#U1[g)hI@p?HN)V^0*[I.n8dqeLDFX<l`tS<FQ$/*?UfRBNLiY$o*BDrhm.?BFK<O:qIr7#
%e=KlQ"^c`S)u3NT?,dV6%c[nkZIYTc"+nt[XjF((ih0jf(3CF\'cbEap0\)D8/QVFQL@V&XJ7P'\%)^8FVE+'0M?Wim`4Bem,"S6
%^HV&72qQG1dS?qC.]D\AY$gDU:qGbN2t!OpoE@;"mh7k.mgS3[`14W?"j&F(Sgia%;bO<WXA`e'ND<^a8=)FsqBRtWGJH8O:[g?U
%1Fa+q"."(F)/6rjq;igbe9W)<#Mss!>r;3g$q)2\:fft:8D##-L`\b`>XqRYl&ugpFbp8o*JOO'NYVa<7ScK6\iI7`:cbemQ0sSj
%BGir:>t.Tn\UJ-W@^$7XKKNPZmp/!RX4'klnVOp>,Wk\rX/DrSQ_GQ%0%*O$'`DkE.JN1AdndMe5F[,E5Pr"`;tfQjdneYlL\+N;
%%bg6t:\i=.Q@A+.\*M'Nm<7Tlc*$N=2S4Eca_"U6D0F07<qa)WdSClB]>=q6]=u&6m/$7Z;4'SQ:Zs%trR[0X$3uf_Jj\fPgW[6T
%\fhO?Ng]Fje5I/PTD$C0T)L&/eD7mL+Y._\<c%c=qMX)Y1/GS-8mb0LWE4?BVJg=TYk'GqCV*2#jjnC8R#,a0gLMZ[J(eU8o0H4>
%"SFkj0h",:\No,kGfemiDMJ#<VkJ5[1A"$q[?:4';GVSa/bN(p<:M#X67PZ.El!EgGf['P%;!k(/':la7Q:qqEI@WYdn`tKZ/'i&
%.!e\39.I+)>4_%<L9/*$WBk'oq1=3Zl`oc23O6i8`s[[ni,_^Lm4R3/\%s)rW!]7.Pse-PES%^FJ6jFqq+]'ZS&.YR=9I)d5lUG6
%9bV1RTf)$%\H_Lgs/Y`e+n09\O3=,qB5od:mf;b.r);d!O)(>fB7J5);fq\jP)V-ZVsl.1iMFY8UrQ*50sO#nc&`BQ-,eo4"9kp&
%2=0oC^I)up2U?:fdsq_)X!^QsWN]k[bWeV:KsBKneNFn7r%6>SfP/,$nUnt?=Id)G@&]]ccj6!lCX/o#$u^(/"7f+-WUZ`MfD/a`
%:^pjGh:D*?ph_Z`?]fBo2.??M;GOpFml.@M?Xr;h>-NJK.Apum>V]%t60Z,(k&>.eDhV)M=569u%2n2F$Ct*U.9]<"JJ1$m$7,`.
%:GWB!K0W^FE_Y5K^>t^iA%Kf'"mY3'NSa$%R4q$6R1kOriqI;D[=W!YUYoaO-.UL*Nc1LtI`XE8,?q'-d!qN`bUZRc]d?K];m*+O
%q#.WaO]NCrCRenK[VSm/mknJM<cdq/o4;hsQgZ_;pbm3h0(XfVREP>lD`GS_;BO"6Ku:E)V28=$_;rnQ9)(\p^kRWB3/iHAJXE<D
%V.-*skP/G]96r#D#UHb+dKh,)'Nj';Z&WFm)H>iO9anu[,#3)5R%V$;>>VJf):4hUm6D:WS`=m?T=e(IOJS4/#cE'0J:/Ynpo3sE
%?<dok!]"B7dSR.[R#Rr>"Nn)qR3&_G8I4FgO^(cl2j-gK/E7kQkWjfFKI9peL565]bllSKgO`%_b^rmMP@OEac7r7<m[Hto)7"'V
%#[u##DcY4[Y7/&U?(jH#aJe^7&X]0sehg'u^][Aj%\i@P_2=S,:nAk&-+-PpWMC*@$E7'!6PZ7h5VeF+]HQ8;;'_gGHWs=GQ<DSG
%H\sABe2_PAd=$(-/Va$o&OJHl<XnE*_&mn,3jn16;<,;`3>_p8P$C]gi>aonVlXi/"m,QB/5cj?P!o`*.rjGU7#5o\]Gt1h+m]<[
%1GO%G[\-MI1E[E>g#98*VjJ>\pIlcBAm>fpKQ"k9^`Li(=I?!RP0T.dh,(#rKRtF$HY7@%6hG>T;bNGk:r\K+O)j#Xp*bSHjir@4
%DkQ`G;S"%2"-YN,p%Ghe;Cf)H<Hmf>oMOe].6mRO*jliJjA@'C(J.@3m5XYadRaU457H5l771O=-9._u9&5o/M:!KZ#:j%W5C%i+
%CXb\4A;rqN6:p"K(^ag:G:D>H>oXu5"B8H@$S#/^o!R=)4d%Vd*&XSUIOV%^&^)#FkQT6[_WZgEY(B4Gl4\ngS)fZ.X?ng[hG[9&
%='B&s=Qu"<a`A];U)%Vl=4CndO@7b27"Fl(HUV2P+lWX21I:R)[X_7)1S?W"jB/F\F53"M]4Qq(lq!j!6nm0V^`K2C,6tt,-YWj(
%gMBgV7DTS)f]M?i`=P9cR^@0.oAo.u$rIBqOs(1[X"?:B+V'`E<D#2<Hsh7IW8?AH<,,t[[-B/+Os0*12s'5:$)3q5b7B:<P5:`C
%*JrhY+4O">HXt%.n%<S=?q'LH\OWY:`4`T98%2X6A9dYZ8TLb`,"W8u!1'4gJME+[<hl0(>eD6>"ApG;\pIXXWKp]6\pK;c4k)K4
%9$r'n6TIN"*""F%R3mDL8";([,U#(@>8jeaRdWSZ$IQ9($r%!N`"`G+>uEd&6^A_70kAD"&APlch*;*'kAI+H^`G0m"KA:X%n_PW
%E36Mqa)XP<@j^9l3Ao;q82<OUHp-j,*.DBp193/7Li*J^8AmXBeUl>V4DRlA:pCVGLbmdh\>4<=e4<W=Kc8&?L$1r<Xji;-,Jo[A
%>RFOt4CE%4'2NNVe,!2*>3V:j8I0I!Qr8"_Hr/+MV1T+o4@YqQC,eCXTNmhcNIIN+:5AT.[ULI:Pna]B6hi@JCZ1H#a`A\PTGDDj
%%hul>#-VoP%&=kYV&LO0&30fLY;Zu,Q)oA8\#79P5b4[Io\;A3e7(sh5Tt_nCH_t;VT_$cP+e&Q)`"EEMYr?kf^*#nY>G]u/YQQc
%V+V:Gc];Ud>546H:SB#lGi&ruOE2o!MDmqn@"K^RhVLAnPqiGFo9CFis)a9j&p1VL:X4\@ImWeu9^Bm[GSSkSAd5Hfo'`?N89I>5
%0N=eor"Fkr_"R]!j\"5R:Pr\1>"Fd7:Pd\!a^m;5'OI;U9iehKiW><!6#lS[6)fp1Y>t:d=O*gc]TeWWVL2PU8]E+\E,WRj5/KC'
%QZJu4\P*^R)8\A`6PUQ68U5'`.Q.?qOjqTIQ`Np$O!T0or)gf``%P&P1JJW"O9N:0/)ChWK(opS]Y/Se.qJpljsr`\o][>S-0W''
%T:@&tq1K<f^&!shfH<k0B7&,SkL^1\<>L"%`C=\'gji6-!MmDT/R/oHH%%$je&%1,H:%DH)o6D7@[ppV<kKUB"4K%\nb)$1XcesQ
%p%J#[VPeLbPb.b!H<L_KSgRdCg.Dhb`V5F^l`A9q`\/%j\?.WD@`<)PW=NkVUUL:U:pkC:eE$Ff*)?r,P2cl=)l'rj&jbAXg9#Te
%`!Ic(K&Z1BK3B][TJ^'_Oq^^T\1'^fc1'f\=Fqp3oS1RuL5m\F5W>M`VV9E='H&cgo-:(u($WEp#*`SQ+#]amE(SC:l&j1b$U'[+
%.J-IiOsO73W.9!Y`>*<I3'm0BaNiX)VH'qm[GIJqbNj81R^2P)Zqdc7bNabBj[_=8"W_$RARjo`BS6_O)N&@9@NuSM#?.l>YT7qf
%X`2D(jS=mZ:(&/,c3a$@&:Clb:]]GSC:3%1&LWs,$&Z2N%n`CoI''m@_id$NUF(BD3LA3(85_GkJifn$B!gTIkM0XhiGr0b&-UUT
%HC\hb_+&,3I4hc=6NE7KbY"4$9ZE-)EH:tZ(+7&(5W?b>5`HVA=gqQ(L56MecNM5ARg6?!AjC.G&gUVMc>cd7m[M/:)6t5W#\!,-
%O:cSfGr5@[l]PFp84RjD.FYD$KmM*NALa#/NKOMs?#hWEJg>cn6BJ!]$M541FTZ,=,*:0RGXKCU,"Ouhp?"ZCPSqi:H\*esdlD;<
%d!`5Z/VYNr'1+ZZ2:\BFb]The4V;ETU\u\uWgrWbAh#]JPGZ?S63n]^bgO?Ss,uP8;E$3*8EqOT04;QNdQWX--XKPHkmFX"9FaAJ
%kfmO>*@k@[]M]tWS'DUEC@7RuadltMS4s#+$usG@csA"Wd&9STUV%cFK28Kq<fu!]DRq5SU=YKrbY"4d9:d*Ef!KB@fpY7J+dUqI
%M&:/bhfPiB6c9;.B7f.1c%B1K1S?W"B7MR:dlD;<d!]sm/VYNN'1/)/<9dk5e19^AlS;e&]-/2eN9:gHYn<H:B<tJe;f\5o@&6Mn
%,u9UJBj(e*,Ya*P(`0f8A))j(N[rrtE<67l.,NfCW0K+?>4\"%ajG3jRhBi#'MZl7AnXL699th-!9p46r]Q2iV3Vf4eYR)$P8o0(
%g)poB$rIKhS<20N-+f=;@u6Tn23sU9OW/'CT@@S.2mk5@nV2i19[*^Zf:*#Q7V4n8m?uA_9W*+Q0DEW6j@iZj-A68q_82fc3V<#J
%Kg^9'$t-fqo<>tp(&N:Jl\e#a)Rc-:ABCk48We["$Rq7##r0WpW2V%`g5lk*-7dpanUX9"T_Nj)T[q0mBWXEJQBUPQ1Zd`$.@Cr5
%P*$%_*%taRTm3K,-QkaN,ioATatlq_S;C5_Sf_nd_ae!k/loJ-<:]ZP/uF=Dai/qsNVD"9i-7[.lPhn'`l/l@:(TPiMRPMT8tE&2
%XnTtuUgcAT:"[!p-73BG&i&@"9\:W,&"t"VnEAq45UT;:))%JM&)Ja9YmZ\^SI*[kG?hE#_Bk8+B1GiR/aQ"8-:Dd)Y)oJu)A+$#
%7^:q^@3:l,M2ADp%r.B2I''kja"f?>USdD52Z_B:8FeF]"f=I>q_3m:pIO2D"1%0FAdJ)3YQYD\"<4%soZE&Rr*4ZS_BjVnVah@Q
%/bDTn-/>D5HZMt,`cM8g8iK"?@!X.J^>:uN<O22'hCCaPGj-2*UZ\4oQ^1iaS9>5/b>g=p!#uTroCNU^`*j!QACS)-!dVaS@'CTq
%ge8.(X8#/WKhL,FJ#c="/hM;4,i]Mh2p[Y%[\g1$rDbB)&93<S&Q$-RGu-#&#,L8EANJ,HFGcJaF/O[aQWG6Cpql(AFiQ/Jm!*g+
%nV]%]?=%]#b9b3P.uqC*=o)n(/1pcjRO+]=f&BL7kSpZ(cml:S;IjXr',te>:0ZKnQLSeqbBY[Fo'Z:6aHBqFq1pR.Q>!@k=nj7&
%'*e(qa'uQ'6c9;!$j^+l[=DF01S?U4gU3ij361F[Fei*5I?Nk9A'G\RN77INX,#HnR3+1Z+?uK(l!3f"(R4hjDPd5;DpC>PRf>hl
%1gZ;Lkr!JWR^+HW`pYilDgm\>DsDZ?AU^KIPk("WaSdqOB.0)KE)'k[Q;M$b1,esm'U*A(>@n^(gLci%>dDS'IYPD#T.X`\j(t(5
%.?IhAAjDoW:G_>tC/62$*]N;-d[(]WoTKOE4OQ.EG8i<7CnfIOf!"*dX-*jE,uqgbD2Qk.$D!*gdkMCgTnobUJQ?F$n:It)Vcpg5
%P1i6lJT[[2+RpTi;ghiO]G,:?[?YgghIZNPP)N!oa_.0Q_e3$]bHmgD4C"5"]lmML]j*TLBc!-aIHQ^0O*GXoh4])($8K[B$neXf
%igPd7PGfn5AV<?l414ciV9^D@q8']T7%6iK#3pP<$jP.l<N`KP6c9@X0?Z4*mDV>mPo7rKRj/8'>t46og?\H>.16]Zm-2%P(DR<^
%qTq=mqi@Tk*9(3^d(+$:qJY9]JP=8M*(W8t$8%B?PX::Mo\KO0%O5ENhM=J@a=*_Ah*A*5>*&`_,7H\?7.*57oukc2<L:7p=)%]O
%p=c]'T,mkKq_@+q0%lFP?1,bZQRcqQ1WbhCqio$M%qK(jU2qQ2dRC;mpKYb#;*D3Y"p-iS%AY6@(%"g+b\Rj@pMWOPrllS[mkMQ[
%"60T^%rC5rq1^I!>JR(b$`NaHnu_Jc2_alG)8#(CpJtI_r`sL'>![8YfLk0+g)0&g3HX`s*]j'!EJB&tP"G1"o203ppL`X9]c#r"
%?0[qG(e"sPQ-Moq'*]F;pB2"tH\,EW/RN;^HT*+gmS2WObhFdBRoFeCPMW)?#i4\CI=?E_n/YjgnrcW,1BjC4q"\?4rL]If:Yk1]
%+'md%cMd:gB2;f[l0h9W4H1'l"3S1K*#b^IWJ`BSm^MBI^%D,sAKJmMo9aQYh6J4X",k27\U\d:L;)l[2I!m@4"AEM_U)^>@?ap2
%;*4Mf.&"j+W\tPpL1(+L@9>e9jl3@n)M$%+nRF9Oq`4cl6tAib-=le8@LZI0hdameV,tDW8('?NX"Ub'XkdYI'V3$LfW%='U3rS?
%j`"];[u;%_bhs-sbhs/Y335WJpr1*DIr^pm#s$;h"EFn8\N(3a1?"sZQ>aiQ#+sg^#+qPg9FY+sQ[sj`dhGR@jV0nbqfE/35-JTR
%Lji?MRJeVq\t^Fl:at<X<!ioo,MgJ*ni=6XH!!QAJdt-oUE&$o2?38=$%d1Q)hon2V1?`c.A56d%;>_=(dZ6l<UAS=]>#IEdZV"n
%c8;oanU9]i(CsG_YN%!'>,:lVJmDD&gap!^P`d5U,q%+sL!GoRh5*LhcTFboOG_A>'Z9%-1EB@rdNS"E:X3cIkraE#4=`SkjiNT:
%2Q?V?U!JGbr$Ks.O30XQIBVC&p9j0ULV7/PlMIV&WZOI16PWBY<:7BSpUWfT54JO7_:NPkIK+F86@tBWAE8gWagRlq*ZeSq&kna6
%n3mMQp9uXqrZqm!rKVm(]S?*gphB(P=ccr%VQV9TdOSROS*'/i%"4$U`NBgs\HU_]i)A5$ECK,59RqLVFst%5CioK%CEH*?^`Y\S
%`LGio0'c400siVqL3@3]dd&0nckL/!BF;mhAN3U;K5nePc0fEcZn+$;'X)Er[+^oO$,JWR:Hs=9U]cMW*6usm6Wd!#F<qdEA`_I[
%%JbcuUmQ5]]VO?C)XOb7%dPn3nU_o;$'6LmFL9C-+OLq&NV;9J`'Sd*N[Ij`H\5(L,',WZYDr[qCe#UkR*Es-o(*#a/#*85@)j6I
%<T61:ImjjC8iIou&\D*A\E(2H[ZRk*XVWFJSh'NEi441-B2*r14#cf&I7\uX3jPmV%Y$%o6^]km7b=bajAI/f-m>;,p[hsLa)CiE
%=koi5Pm8,;!miU@.r(aN,A>?3+dT5U"W!#RWbYe$aaTjsqXhca&qePZQK]a4J,\uYhu5ii4KXCIb@gh9[m0f^msa<[mu,[SqQsV#
%?C1EPhuDq&\G4JbQdsBeo!3!Mem4WaEt4K7DkF*&s7*#UrpZi)8[f2X#Hq2p03Jg)&UtHsB!b\o=_8`>dS'.$NuoNeOll!oVWs._
%U]bF@/m;lm<d7;V@o10c6Aj5jem_^2n+in]C<[d*hX^t53?n^L^G#9`<55dW4#_Sfk,3Rp\!jkdC,g[[@/QignWs^'?T\aHbBXkN
%I3d,?_H(X*a&"H%WbBqYJmBgZ)D4$f72VL:[So^+64;8L$B?hB^f^EZEK<Mm6,oM$b:D[&i2eB):2)_S-fJ%BVg$:>@"p3W!p[[\
%mL3!I;ILFVdSM]teIN+i;2V0"oZ&l?nO:6Ak!3m:,[^gs?CDN98OoH>V8Xk@N%(VfBfVL.i)DoMjINUnQm'XZJGOqeSR#(A-u7Pj
%6A((:%Hk2GN"[+ZN#KqpcB:"]JVt`R1QFQQe.E+'#G@W\jX?e1'G5i%&Bd+RWga4_cM7XV+jMb13-n0BoHArT<$i<j,!T<BJVV;Q
%NI']NX$grZW')GPOJ4S$J.!P%1Pe'`?l8P!;5=o$s6a\PVClR;RN:<g3=FhP'*5$LQO!RKYJhjj_!5;KH@bM/Q6"Brj#XpU.#+ac
%H68KKP5cFc#%djFMXDXD>iV!SPbS3G/1IIqBJHCBJ#\rlnBP59hN2FDU[Fu,YUCp:P8bOI(gb7SU4^I$GfLmG`X.Y2m!,)0_Gm#^
%7?W0=ajCTU@It#0FXor_B2(+'9$8rsrDO._P]tX-2^>3#O.+P[KqScJa?,<`ZkdfiNJ^`cL;Pu:<1d&)CLJ]fn%qTq_?b!GSDP"h
%b,R0u1%OeYQ9a_t(1O$5Vs7t)mjinVm>1]=,OOT8#<lU9hASnH`[_)D5)'"bL&tg9f]aRoQ_[OR/qaAO&<8KF)$V,%Q@]jHJ2=&>
%H_dL*E;cbR)T+X0e=.VFW(5CI5kdbP7=9.3=JKT"M][L>e^E$3`,UA75\W$7ZS3,iGC_#I"u<Yk%"k9]k(Ni$UO]\JQo_)*R)&X!
%L)S2r9?EYHPELD8o3R?5JiZ4TRQl44m\>E]$m6+iW@a8H6NdH:]oo[#3*miO^l2gX]U1gghWSRDPbWaH;b13B@S@40<'L]M]k-*7
%+d%1Cj`cbK@^><qdP-'/;_2+F<^*lGf.@29p"6\ja*e//C:q/,&hp(?K%CHaW"cDXCFKTM>DfCQ>)iouT5(94]X(#<))@%le30-t
%*JsjYZLc2"_9MD@;7Sj/,(Z7,6BGp7,DE*B]*fnc#j#/o``<M#`XnB@ZlB7>29"&o/]U91:GpWuhH<V0)\P/Re3<:.M@^5H=b$TE
%FUT.1bNNCTaU'-moN=f0;XniF8HNKLCZZ<5KL+>q+0Msj"e7Hh`$[.V`6_<Qdm2bcp=sJOloF@Ed4;q]pg-nR-5n3jm:+G@<G5en
%H5%?A:HRfFEEOc6mQsI[$t1TT$%T7;PssB.(^6Ea`RH7ea2H.sp!Xc7=f0sn&t/=2Z)/NT<-9T5Pke97/o\2[TU,-!=XB4E6jP"$
%l:>?`9!4ju@"pH(]bn2%I#"n+NWRLp@d92D@l!)B)JU\h/1>Cj9MkYLhR&_AkJ8Ye`Z\PcCNNC*BR%T2apAh7nL06m'W(rk/sHL_
%:kk:1@=+VRA@3B\S2J:8.4rRc_+ur<:u5@QgD^dqDq)M>kf(<7QmOg&nP5Bk-DY4$2,OeTchi[]/4kQ0>o[EaS]<6eB1[Kf7Yi1K
%A`Y>uN%(VVBfW'GIB&mYn\,ptB#ca>;>E&X)$M;mq:PME0:faPUg`##CD+Yo+oimuXC\@V[gOG^1QX2mG!08\K4nArEYNKD'GI+G
%(t7,$ePG6#<]+_Eg!mB+gG/VPPd69k>1l4nQ<pp5)O23/Ud[U/60ss*D2)pDVWuheF9Kh7m?(uA#oca(<>-)ls6a\0U`O4n-AHrK
%ScnK<ZIdrpaBh*j(rsA3?;ic666?ttf-P:Y5qQMpHG7EJL]Bj>MBIVPb-f6OJJlLuC,]sa%T3[8NWRLp@d92DA$XX_)JU\h/5U2<
%9V<<3+$XQOV=X2ME%")H9<82Sb3f*i7PT;hkhD'W/5,*'>pK`DOc9(JU"E\loY*aE7fbECOLh7,R(W'jIN$9h$V>\4+s`/jQbI_Z
%&_a*_"-UuIeO'eF$[\.0:(S!coH?L-;rMC+8HNKL\%OcWBH/1i"O^2.!m[6DlBITEEmU^&C+/O%r+o`D:&#U6c[7+#;-]]lM3__j
%le$E:1o1,o]]'M7&X[j9V(@mWG*+$MOi6oI(.0Hc"=[fh6H`6A=]8"AdUGnYq,BQfjIHIC]cdu$7ce-QcWGd^:;AdLAeRZ%m%?6P
%)R2ehj9/-Ncm`3tQHCqo5S>aQ\bETQ[c7SPT!]F6G@sQ'F\.KGH0&!'1luns;DpllUl;m'oC\_A&j4i]ir]%i.OjBae<"/pFU@(2
%$fqM:YbG)X=i8=r%-(G"3p#ECgU6[uH5<:UmVF>L/nm$iKm]tl"n?K1a(E1fNupahcuSZVa,bHuNUqmK_Y9#ITS?]ID/P%XLp('S
%FOI!>'fpL],[c?\770O`,%W^!;A=)Y'N:@.'N6SIeP7?6?[ZC%8+_X8nK"*8L*A[2!/b7HbB4.L9T^bq'IS_5QTCm$$WB2t(I\C;
%'_/lmYeAEWPa/"oZ_j*NV<+)]n>V-TaZF8ERiTrj7cj6cJ066aZt9)71RsK47T68EHq+PWaU'-mJ\L29@B(@7,"VbYM/U8]8I(;!
%Ppg!];2t_'RUYQHQ=F[FV]':qn#ZEP%>jL+C*23uFanC'Xp.'b2a7l[dZB;5o#i.c2uuOA`j@!+q/p[&@)fJJB6NX"mELMc^tDUZ
%4d'8J[.dN[MrJ%(H-MAlo:kAOmnT\p_&6&=dD$YLbEtPi@Kch#*5i/XqO,'R8Qi(5.i&;U;(RsC9X$[@0su-S7fd6s0m-+3;0gu-
%oe_R#;UY4BjB1Ra%X!6bOj5U?d.sNY3I_XRrH\Tb4[1-89-[MV?LX7M[kti)+sTtn%QZG]$''1m_EL'N/5.A^gm8*EGSmO(WToHd
%N_\hP3=>Nc.%!&ljd;RrWJ42ULG\CG\][1Zo.CC<O%c0!T5M%3K&\W4Mpl!srUD1F^I"OcmO*/glBK=YZF!7*0:LXn>G\aaEuR?Q
%']1SZ4?'iI2GJ2XeAAE#J]QD%=6u[[,;^S+,gYCY_X8Fmmm3\%Je*#3q>)Ut4!!np24(-uk]KY))tXHke&C..04Tt^YqhPQ'QD&+
%;kLE:VZh%@htMV?_8gJp;m,[g'[D@!j.,j&Y=:Ge#Fd=i(2-UUgEL*j70K1IQbl_a;/?R^M[7J#`#)M\Em0`i;8?=59V'UP9XaIj
%_^DA],6-'O):?1m%D2UuTaN\\c&]:pVUF9D^?,cS_=?O9*ipbg@Pi!?6#UK45jf@'G:^2e6^O%6Lp+O#ig:LWb*$Q5hIHP2]nR_J
%"f8&@XZ[t9527RNo2oNfYG-8=o#DQ2r)+P(j3D0LdC]kChGBG9=*R(;+2hjE<hQ:m#Y=jkF1j`[15.XN.L_uXFF44612_H-8R8/0
%rHI-u"B1Yo(ao?.XPYfs7?e;0^,m@o'(Bn*>38no1rf+2,>2AU&FqRqmCd7;->R;o0J`MtSl2?cmU>7#[^$V;!>%pEdt18inPI,I
%=m`n+OcVK&AntShbC#enGac2O^.LO=??T3:\[Pg+r;oj5A$]H%MLam`s63j!^$4>8c>D2-'Euh=i00^crAsV]X)>I#^rV^!#$jCs
%"Kg]LB1iDVbk,Ie2VYg*[N6Ydm26kfG.\Mu#q%$-h^?t6S7,gVHu%9**EPmc.n0PHD8F^H.7Tjl=70?p?`t7?qo1\=Q,]G7^`r<(
%L7\*%3#(1WbDEjK9Y2puU";u":=ur,BkCKtk3#o&!OLalR:))\*OeE3NZaU^^tN3D-9c,u:7CZS^T5J1e0[hN/lSb6$])OD$QkgO
%RJY?!%UE[uBZFW!YWl5mUp?DTL-1#ipR%_nFrX@MeJ4n$g2//`?>2FZpo/T.1:+Vo-?&>0-Vr0icWiWhki3qhD-cGf?'P8g:nE%-
%F%U`GdEbAFq'SD)Q"SEl<\2Q<?.JL0'<p*3jdf_<IsT#U0u'sMp$Mcb?N7bE@64l=*19g[cFmq!4l*o$`s7--V<omm5/"mA4agCO
%]Cuj^\WBI2UEI[V9)Kl!Opf+6^Ks3h:W\gb[-,r\*WrRMdj]#t+7]1ipJJBk+`F15%RFq_,\k492!q%<XN8Z_=HO#5Nf5jCN/Zdd
%ZqmWVIfU7&^;\D[kBqWqUrpnc7PM7nHgpI-!g-q1l_Q!uS41?JY<lALeT(M&`2>=k]/",+BYRT"0Z)94^:Qq,,PiH+fk8gW$;Om&
%jFkB(EcZb4[5+5PXr_JJ%gidWc!fs-"Wo,.X+r"$b92O?&/rh1M"VSG3Sa7&Miu_;Bq_Sl\=_6TMFgp#?jkE$bN.KM!Lic&Hp2Uq
%1.^/-\[mC<*k]\Em"JVQog9sd&XmkZY?()6eY?t3['Q$Y;Ie%>qXO0RrgZ;bZ/D)(r+%d5*^k!>W$p*EH9,:aGf9B.<3'NV2ELOi
%hHCpV<r6_Ioe+-\X<0?j0=`*BCt$D//2]eOoEiS7`-bI=8f\!WQL`kj<,1jBs#"lB10ujNfMP!G&tc+%_mKu`""r+]6Q-[18YN%p
%id/4l1=BN)dE9uF+60e+\>>-:YQ[)G+F"l)J"6>tBnD0LZAfGIE:=<4FJ5%2mpO5qj78e08XMQD8osAfTOU%qI(#6iOhK&V\]aLN
%[GrD'BU5X%<oA/>B3!K>L;UD2JW=S8n@Q&iY>%1GHAm-m#]i/C]Oc2q*a@JVZ<WG@D])QXa-:LEUhd*Zf&qg0E0f\3CI&2Z:s>Vf
%0j[fT=GAd@QR?R@W<j;6oGr,?T,J!XC<R3#"2q(M`'_-ZkgV3jV02m9%k:FQ&3C'4e;/b0)/^3'<53>Z.MXcZ)MYY&&9MY&K\kQU
%$-ZVjNM:^%/<UoNmg_e)1SqBCFV=PHK*%mOMSdt5&YcPoCI/l5P^*DrZ.)==eT*b@"lr&f5\=eMRsVGWU-YX\*$h*e>Crm,[fr&^
%R10UWB8`I]b8;^5pQZ]ps4]W%*a<OJ$I91V5P2n3gF0f$0oQS^+@#tL+S.i`/t;pPFs%_1o'aK(?ei8NXkV8eD+fCLP!5G>:$u"l
%Yup(]O&U*[iLt"KL%M$/2u0BDlE"+>)Gm.Kc%i=<'KK>OCOZPGA7@`7"@:$d3f,3)[E1-];6N^>YsC/BK@NnrSF+TQLdP>a;2hK>
%r!ZQ*3.b6V]OHI6dla(.ch02SOm9fQj>%h5di?VW=.mn'W(t6r7u-S6GN$[C6'7q"Q*b1s39)O`)NQ"3H1+,'%n]/I`JBC\Ksm?d
%7EX:ec%7pNV%L\6>05)U[>H2b,pFg.kb]3EU"D/\e9mqgH<b5q_-jIgl_oMLqXRA(0JVTobN9C"0\CSg:o(&JPK"K=*m/(Lb&[,E
%`u6%-JhD?U'tmL?`R2,MO.1k@5YFFQ$+*$k*bsfVodp>R.RB,0##2,\)RdUUGu$l:.Wg34;'[)-A\C!(e!6+A^!a<RUe24eHK`o<
%oFSJe*=69XOD4'TLcQ9Bs+iEFSqFl&`DNXfa>CNI=TF5a+JKNJ/+XXWenr@0"@T'lh39*u8j1K2c:<F!i1<oEemGX$c/e.s\L&UU
%bn5=Vad]pl#Xi],,\>'UG*J>5I3cDkBtL<3kU$s?d:oYg851Ngbs$4b`$$Rfketh?I0Q^Z)_ilI?7/%"Ba.;0Vg?Y-5RF`R<*Q4I
%X]"5l_EFdJVS]2iTO."safC<<[(uO>XLlV$Zp2s)!i[aW'&Iu/G0u5p9eW68(O\"XZn:QgB0dNcdZ@j/XlO,f>/_)l&eP9lF;'V3
%$2.VV4!+dLj/#Hb3tcZC8s/Zbp/G"^b-,3-;XZY)H1s"M*20a>Qr#&lRZdn@b)^t_5-G7J'I,)bQ#1XT)/""RMrBa57Kd49"[<+>
%)HmPBK@`cCA"#j8la\Wo1"$-@0@FXrPKsHXpi+@C$02MTF'Jse>%]kYd3(3OY'dUMUDPc(:j'])=D/?h=q%-)bXABtQ?:!*BX[?8
%M`[`2&=o2'J^4>(@O$J)5O(Z#V@uhWl,b9#5#T.ti+=)m@Ip(caE0RirD;ar-bLo>KS,rh\uAM"OWno!.[3cjEj%,@#1D=7hRAD@
%KPjs*'t"hRP\@EFC([C!*7;(MJjultB:rGE&]<&Tob-naB$p6sXrF$lKZ/7>RjWO4N@(rr,2kUW[\u6TV@No`)9B[l$A0Nmjks"E
%UHOq]hr7*:AA$l"=VQhA9e`<+?apAY%O0s"6te:pd_^fJ9Wd5cTNX^@@;0\,.=+[oBR2hnE\Ks4ANs-Ir`!\jA#K(@CVMZnn9K\`
%m.+16-rP`#2.qGrRT4VN0p(nlf^hNa68uH2MHjq"2FimKp,fW(%S:(s/r!Ep1Jk43Lgb"RH4daQ7F^sUR^8[uJuK^G+cA2FPpae/
%B!R1O7&jF('Q+3>F#KG80oG>EVURCu9[)Hgl3L:$B1`M/0tA^O:kYj6h[(.N6Tl/9J4"TuNuc_BI0Q_%)_ilM?78+#Bb!k9kLq<'
%83,dse_4Bp]JG2]p<H]S0UBp>!FZ7@dk][1%pCXs5'T9;;</A($5Na>cC"3[@V(tCMJ?^j*'u,hX>D=<cH_Cb_]^Ujkf)$YIKlf0
%*'l+d;(k6p]ni+`ch1uDOZ%Gg<7M?a2]^/N^IdcKXc_'_?I(cd@8MG!ZX?CfUV/N&&K4A'^u3jP7M)B.i`.Z^7d-]d;,M/_kWh8,
%83%VW=qHIr1nkgc/,:']<cJ8I7!QZR4f3K]`L^iK)'^a38Z.HrV65h&jXp)f"1L*nBa76iJV+b0%>l-BGq#b\:aGY*-_CT/b#]QF
%(_n9;;iE-d(Z'JFPXfFN`/2oO%&.;V]`_ND:CjjZ,Ch'`W^Z-K(/\#rWJ6U#d#)qF<j]/<),a0u+Vg#Y7m7p/q4'Fp9m#)jOf@TM
%mfr=PYL3t\/rqPn+(<Z4:D8TYA.&!)`VgE@ArB<o^-c'6ObftOq$^6'2I^@m]gb[:Zcnh(he6TcYM?A&?rp4h<IW:'_q0NQh/V@4
%c/]AaCY?!e3?(CVWcWL*O>snbNt<VRL98HcPb<pm6:IE1pj",!l"(Z*$fV_a7C6K8V*5"3lAZ@@">>e.a#&Q$c]\eoA#.t2g480b
%bN^JghUn5V*PB,8,FnCHA6"P%Tjsh^Y'LDnhCOVc7M$h-A)1)5MpP0OU7t`2]LY;$4k-U_JiKR&+iT[Laj3MSMBdp'+t?(GVAN0/
%m('j#5#TASWXL=17=H5:,3A]&GHO\VHQ`8-J#fRc6Y%U]p@/P*WPfdr#_@Y1]I$+]#i5+s.XLb_hu=GuB2;>3ifKHqoO=g(59o7c
%N=_BYYEkj%1l%sZF3QpZUl>!CU/p5ABM*?J(l?Bj["P3&4i4A$?"TOi,"##Rrm3(%EFH-G#_I_>@QV`?nrk2r[:U;WiT#-%&D:[I
%;%)<DQ:/)hC8F*=Q0O>GQ@u1PTpo4R9s*UTMu#sJDPnsbUMVstOmLZoq]aU/f0(6K=B2Jj(*$8]*(@7JMH"&InVDaDn$u_r?%d*1
%&J_jbF^#m*+uT'P[3,rnBcaotNiA<AN)Zf:JnQ4<>YH3F*1C!Uoe;AV&pBCo>2->)N[!BX^.VaXh/bh`!&%^=N$:RK`-)?BFb.5i
%Go8mTqBMHVGB+Ffde7\rS'jbQgJ/j^Pp5+%TP?b4daEqV9WdAgUf,/D`"E[T,'4KWW%%FFZW&"qdqE&&j'rd_dONVVb1\X4;TY^5
%Y.J6_ZR\J)f"u("%u@u,W-?c/aET>(@Cr2%?pmGfE`>hK&L^ei=qHIb0VT@N/,'p\<,fd[1jH\:4f2@%H9KH<2$W:u!^+V=r8GUl
%,eL0Y(7qr'h`0P/>?*&J853<C:dU9JI*WZBOQhX29[KbZ`u8Nhg1R*LTs+:oZ)WN6?nHmr>*9+DY@21B4sNMP7KBK<P_d[\,,-F3
%;iP.4+In-hMoq8c?9BU"QA[?+5&f3L)Gn;54@PNEMYr]]hc)%uFGL@&(bH$!]jfZ)P`!g^/#"6=P&kW-QAb-X71%t8Q:BA5C*c(h
%Pq%e:Q3].2TZ8mM.bJh@AUP\K:JOIblTp`0q#6kc/e;2G)UJqXn-PWX;MYbC;Ihb#'WGn*?)o]An/]jKW#).s?:9q3^%\12FV+@T
%jF':&32D6?\X7-BcNp@r(;c6m`=hg1k0V%mY(^_O<&/C+6RLDWht*,]HDF9e#%h&1mSN13F#(:n,"$d+;cPHD8L@#!&8ZeuE9($S
%5""NXQV`f[XiKQP/P&Le`>D"dnrU7V.D'&]!D<#S!)#XXMpP0MU-l%q>33c[3I!8WZ1bhJNq1U6q6%<<Z?h]/<7QaVZ_?>Z`^E6r
%V&1D5NOqKj4qaFH_BpEbQ#qmsa0s]"#NR0_23$o`U;_B@nsZ"PM9e_hAg;t/5OND5oU'7:A9sCTmsILV2f)!RDFXMhX_@<cBKptc
%g3aRfcej=4hgkEE^Y`CWhes3B5@j=(I<j\5UX\<_>t)-`XT[_REM\B7JuG_50UVPumr+:MEonKH\o?TaM(9YRh,Z]NeHa*o.ohC'
%VdF[[OT]Yp9;@Q,_FogHD6?j<3.b6Vif-^sG,#^6s+[u!kWn?9Ls5Ip85_.uG2AiqR+K34TuiAiXW<cP40JRZ5C2G[hJm+*.iRRR
%ZepW!?S'5Dh?UCABQCFbn&cF7<IZ+7DY6SRYgW=D?ugIEHZe+5PFLrg=,)(P8fmENEN;kR`''0BiG$mKS74rtn\.D[n_jrgi0CE$
%l19.V$i#E<]KQZo*mCUkIDCdT`V:Q8%H*B78W<M74%dCW/3L-R=:3riaMQgbJhB3C:f9faB65E8JiMiZTLfVXUtrf7\bIPZq[[K9
%5GcnWHV'>n5:@Lg)l#"AKe&Am9SYHqMWGBj?&)Y)V<Kss5Gt%h)M8eLX=p=s!lho0QjpFF@>m]Kb;$0eLqdechT&dBi@6`0=S50M
%$pCK@4,4QCY>D")1X9jR$g@",;Gi@#29D6?*6<>p7RPelBYgE-DO_[LQ(m(=^8uoQJrNC_A9/feBQJNq8NdOBOm>&fL9>SoXl9Uq
%M=>NnH;*r*&^C9fm`RGh:\+fRh(1-CoT/B&c[XbT4O,B\NiW3NO'hdrpKUo@`E*J8rS=]meg"13pN>G-N_hRf@kE!S[:Kjs[X4n'
%FtXQ`/_j3C%"*aYCTX;l$bE]nTm@sNqItj9eq`KKIZEAXB`C\7q]Ace3+>u.Hohr4QtGm5p7I4;]4O(sh'`Ig>L?GWV<#mrd/K<M
%p-36Lj^KG?m>f;f?J7W;>Pfd?8]Iq.XZ;8&Z,tokJp?A2^XCd6NG91u&5,E-s+G:WTBM%mmbd1TN<Lbb[d*J>\24>Ns5*Z$^[B?r
%_dmr&Gier"V=1O9nnW"TDa3e?mHR><nn;mH`d2RNpQcotK/h)iG:/SLkME?opZcF/Zc5%?deC0lHA"9%^\&t<:?S3;5K_$HKsgc$
%S1g#aE)/#*_GI[?oee-j$=/Xa933?;a5o'/'M8`oZG&7o&<D3oXYb4R7PQN6.sE=3#*]:`]&Hgdd&"bu.KXT)NK-D/&;NT=IEUZ+
%2#[0ZAH/*frkp0G[PBll8&bO'HlIae,4V\:PP`a"5lR'I)K.("3;f6sTe$JO*27RLT`ZK\)[$_;>AD&fhEbk<Gh%"Z$KBED'Ys?%
%$;`3P*'l+fYm2Ip)[-e$@h_aGCFuTI!r1sqUM+q2]OS.Y7pIs56I2Ygp8imUc"Z3m/*G)`AN*Z=`,:7TV.UMm=j@8%8JI&iF1JHS
%$f[<;=d@!ueYlMg"L1A5DM6AHR`>s'$JsnCNQ9[pi'X\qDf**bs5"D_ISDskBsh6j^OQ10dJWm$hpR[XmGe+.s6YtV)[,^!hpYqu
%"4)Za?eiEZ^P0#8B"q@Cml,\g9?/Dch!E)8g2C9P`;+a8mki$E3R1)g-aP-u?C/4-29qT.62>'.m63$Z-Eq>VmlnuTVT[aOhfR$1
%2D5hXbP\i#l"$:'E)Ued*'X@Vmc)lE].C<m$njcc\iV1u2T%`UEGp!5oB7)\Dt+p_n83c*p1)9A\2EmENeBUpKg4V=S1sLl9(u-M
%?YL+76JObacO'&mL8*-ZMWcm#Godh42rpV<'/,_[e/118Cl.1i-C9Ji6b7\"19Pabgc\lprUi>EpS1S;oGOXXcGe-M9JZATpZ#=;
%UAIZKE!@.>&FM[F8ctNYNI6E6Z*sIhqsB2Za$(OGn$qq4n%#ac2Va@`^K&k5fg7Bk?M4E]rla\J&3!G#f4@t"\h;Y\mTQpQImX$t
%pW]QLH@OE#K)55(C*;:P93GN1mksos)rWr'dtsWk(9Ed0"_-Ss?N=]Qh,c0#9SYQsrn;Lu*rr1QQ/)9p4JtDP/&k?Y*isd#b=UkV
%8?fAhVf8/sUira9ftPkM<PqlQ44UYs/e;8<QN!uFVX$4M'c](/V1IjJ#M-DF1)Zgep(:.DjJrk"EOomk@.M0/6$UCQhTYTE'$)4J
%'4#a"X2B5A>29e3Ott0jkj_,KcX40E[&[&!39ijnVgCK#=Ra/I8_Q#gaCbPmK"YpQ`QNPr!lNN)Prq&:?^cu0"Z-e$2:1<.mS4@9
%]2OC3<R]@ma'CX='@.'+@D"Nu!]d&fi]G,he`"/[XmQI*8TAs3U?eAEr$cj40?ncghU?jF5;Vb>^86mYpFtLQ^W_%kDs:Kg4j1%]
%H.l>5a#a!s2b$u[lmS)uA*3bI?#)\bU28lYUOtmj<-Z^A;+.LN:E8F<p]-Wf9]Oof+m<rV#jk\e#K?>Mc.Ji"Qf`lZUnsb(6`H@K
%$rj8eJlj5pN?RL?c(co_I'WKgN)Y$T*R6M/Is;Am#Ju<TF6i:5(u#J+i%2CFZX2egX@H!VJKc/-A>1f?E;2:\\]!)[W[5+!aQ%TB
%1a%t;C0OsDLU8>$'iQXU)5pSS`6]JlW<tk_meJZ4SngFT"(>gin"W5cqf?Xt'Y.7?k!#Z]7rF*.V/,5mCeuBjB<roiZ&=h/$8i$n
%h;CX>V':$1MPu?M-X.NY](<4E/r2km(_M\"Q2:th.l_!?)SB7**n)[/?I(L"NfhaR>1U9HVi9&"D)a<F=/q4s@g?1N!HCuM`9%qp
%A6oT+.!!GXBb4g&_m8k^fHtCsUL9Rm:Id05gAPqGN%igmG<m4sdZ@p1XlO,f>/_)l&ePj'FAn.^;!aUIdln=jcaTd'otfGB.#r9`
%>NSO>/KH"$mZl=#RqE]P/WNO-_WHAl.dH+'m:\Sa:G"mlWJHF2$$O4=Ai^Vg*@$:`=qjhkW>>==;!U#+=9?-3Jf`D=R8D5;S;r^I
%R70Ckqqu"-'^8Y*At4L4EW&/l^i+7W)+BF_fJPYr(D6XMUd6[LSm%A:a[Ie9,Sl[\l81OEd[cE`Y!7`.6_ko>76WlaWf?=K!hrSN
%bgK2UB1b>5EnX#tpl(Y@V5;T@fh+K:iQ>E0\[Hd:UEt4/<Cr^P$U0:r<E2rsB7(>e%GMeS^<*gp?">.$dtt"/[>?u=d#@d!*F;R$
%6*r2=PX$bml(M-r"L'.rV$&rY3AdS(C-(_aeZLHATu5PtGfU?hW=;5WN0=\P_P&Q>N*qXnr0[793==B6Krbt6#'/O53DtrrcqQ!a
%,#o<6:SC='97(\6*7D][=A5jTB:rGG&]F7ujV%3QB$o[cY2sba<+HdcEk-)Rl6nEjL<MeH)d:9I^#$rPG1hKl7nZdkeG0ttRL>ai
%b9;u:%<KEa01%V2Ll,O2Q$#nK4Rk-])T3dOMl=V=8ppoDeJfY_#uRfKHg)k;1proj3:.raZVF6FWlJ!W7DdTAR>,jb7giHpXK%S2
%4nkusW?/(+3^EFZ(([u6#SMTZT`qtlDJB30=F'Ejj8HFKiW;*8-%T5hXjh!V>.kNcP2Ok'oU+c;eU"OgFGuI-?<"&$Kd)>:2q=-1
%j5f$[?L'Jlj45V6[#&phURAil]N><<Y=LA<n59S(BI-Wr>*<bC-]3")?9BVZ*7:L:=O"SO;6eG4V0XA>jWJ;,kb](le*=K0dlp[t
%*E,V2<MG&T;5@D*R1g!qW^jbVjZ$3j0mQ5a-b`<8_N8c2BdSgjI$\to(V'h-j<@3:D:nlq4,S\=55e0-32EA_]pNQNcN(A),DN&2
%lQtaLc(aIq>g)@K.A\<M$nT+a`DL/N*LSY3Ph%.Z=$(9i7W/tiC9mWX;<5%1bHM1:`Z+</%tYD)#t@ks>ANdd06Csul@M!kV'3[>
%>05)U[>H2b,pFg.kb]1o;s\4qdln%LDY?fDOtT0(5Lj2bN560Q*#i)4r`6m1@8LL4Li\cTY^'Gd'8=At's#ti'9q5'^Ej5pnL&1L
%OOhAg7%X9#E-9cV8.-Us0ss??JSORA%*O3g8^Lt96'LQDQIA#1Apml^X]jI<8!.Y2AB)k[?XaEqFDP;bZ,Ge8k:!YQOFtX98ucTa
%6GBhmosmNT-5TP,/$IpXOn&Es]X]-p8RY"?L0!^u:p&Z3@;54W$$o:OBR2hnE]Q[i3>^5H^Shl;O`>MX5$lj3Ad&Y:H<3,lHVgLd
%/OQaNrHqGnC-gdBODn0r(JN1E0VK[mItdJN@uQc(S<AI`Uno6RPZl2T5dcIoLa=5p<lG>YP"/I;\X(_Dj),sY2I8N>M'aNM#<u4p
%Bg0W'bE2s8#l3NmK*BRI0lS$BH!L0=Q.RSp[RiJdU`soEMC;'(G.K"jOmBTXmjjI`NG(mO.Ag/01Jk4/Lg_1jT>q*uVYN$ESn^2)
%"6F$(SU-?G*8?"b[<a]?$A&C9e1843I`r4X"RY4)j=%`/,[/Tq0p(h3?e\Sm%gX&1<&D$@Lg2<N9p+`PU?)r[#[3?d&%-04qHEot
%;O7(">OG1[D`"!X=2qiN]W3T1.b.BA<dgE\IEWU5?lQn>jp+==<\\</'R@S0FTb!J2]T[OKctP:L8[YlEqo8*#f%s(E^:\ndZ?L^
%XlO,f>/_)l'&a!,oU+c<-$ll]FGuI8d?%CX\dJ@7LEZ8LM<!_1(@3-D%+WVa).Nm@C2t$/J+/J?M1L=%a)Z#fKPl)J'tnpDj<tYt
%8&NHfE(C?]H82gZT7L_d7hEj2e;M[J0;>>qF"O;<Uj`RB?;^BqPm?J=O`@d>`b$WFh(mLGh<VJK?t/_dUSIWcEtGleknR<1cj%mm
%`5e+8MdSk?YggO^BA/[%Z4#ZR'Lq_(B]VD[eI%<RQ3OOZTZ8mIVUol`VdlNO=(To4gDSm:O`>MTVPS1L,HN](CJhd`lFEf@j.LrZ
%:n30&a:MF*+QF:Y7D0&c]2>`J[r+72^!$FmmR>cQ.@p`_84u9a.CE'GJSOjI$qiodMpP0MU8HL_9rEE8I^e(\CU)oTB`L6mR*in%
%^sLG[DZ]Ln166&VnCf4a^Z#+GY_=L=N!Mst48/'9'VV!q6q+.ngDr\fCXlpe.#()m(t"5?QMV(elXq@d"^WPXO%Jb5UZZqtq`##h
%J>,qko#f'i6BPt>@da1S%?$2;lE9,"1+6&,_#!p:P`Cm&_1otf/^(,!FOFmiW09td,DgO%je,.e8u]?D%V]WF.&L&91Jk(0Lgb#e
%=p]LKZY4YJf4d98U1Kmi=-$6"7E3l6)$d1js"r6+h0[kUJr.#o#(<f%_,4HWUR,$k;WtdH)BW+6/qOBE_0R3cC$rsmA5/d$EC`_i
%Jgn*jT7L_l7hA<]</f0u0qq%?B6d5K+MF^%KS\.tATIEA*Ic3A+&7$@(:);O)(%.b/f4\&)%R5Ck?e0^l-gcrp3!c&PFGOW;B/8m
%"ZFSdkUL?[jn]I$5t%V#$QQ"iB:rEi$XkLR1'r8#1MAO,eSdJQb5L^5V(+LoN[!(i`f+>,%]J!$8buT.*1hFqO".!7cTRI2m1%V`
%]YXBQ8k%s@'i>QY.6R/;ML>/JDD$`4;A`8hTp>K`<%Bq;=;mo=KPkfB<On^e2XLU3f6+KUQ2!/#5bqVtR.7_<VPFYQKbnH\=Q8e.
%JbblI<D-Vi)]#=k0-^\Lh-\ji74ghb[>9uLol[IscSLI+o\aHkifKI\jAK_=56KFcNZabqY83>B/;L+QF3URlTX67*`opp.[NnAJ
%m7#6dHS_A;(^1;-0L'*hY3+"m3Min,YfuVT>n"EhlLg;)rOVJlcqULqQCcW.h=XPPM3`:>)T!XLMWc>O+19U2TMde0@+C;f&\?(P
%FQi?jRqWrm^UCFb.auC!1R'*8lGd)5AuBn'lWIssWg$UJj6\:lVGaD`F+[\/Go8p3#^&h,`Q_,1/m8PrXm2cR<Y.^2QbBsIK4nCU
%.tUggdmL7o#[g6n@L7?SF(f#Ga_Z:;'CB#tU!7eTIEN\=q$scMfmbp;IJ,7>cfR=8rbaapMm8e4D/%hsG\jI-4>'Lrqo''^a$9)(
%'Le?-?-I8maCa&GSme/Dg[%85C)Vd(TD%=A3Bci?r^`tO41;d^9&2]Rl`<AldaI@.K?n->2nDkgiWs"MLjd^_h5A#AT"bQSBqDu:
%^0n8:I&X@,XRdP&F\@.Q[-_dYcVCY@h)hcUC5'@aJ#/]idFihd@t!lFqV,k1[ncAUqop4OK\UHLC_Cd#^!)r$rOrUj_V]3oS+Uqt
%^YE`*/N*mlBIE1]dcr/^Hjn%W>3sf'gc(5e,uC[00=7tn`su1=*+.X(kGkL02Dq>,:VqEZs'&Y62f*D)?9N>:+#J(BK46CCnpA(R
%.1,m)g)dgV6'j2s-jc\L1cc7X5oaq>cm4Yod_YilDsOTL0^YY3Qhc?uh+KH5'ZoEd.p?(`K=dQlV9rF0FrgAm:IkY)h@)h,CYhBt
%UrU2f0-^Uj"]B0ao017*H.md,Y,`''\898>J4!KQ)qHTd'`&57l8Bhg!_,`i4f8$:LTd8Pdb`lqP@QW$/?P\S_kQD-?D;9k7U5Hg
%FiAP9#7W8tUf'NY3j[6\=$Xj/0PQinY'tP`ColPd-b[#W6hg\qn;^,S7KBL%f3$C0R_+Voj?Lo:>+1f5p8W@Rj*C@QhT"OB<8MT#
%SmV6(Y?t?M^fRV=j)(5dh2V`oR\Ti=qHJE4#B=3?<("Bj.u`lN-r)AS,K)GD)\\9dU:WdZQ7eD>+OG9kMUo?Q4a3!>3-8m#9J:6g
%TN6$MYVa;<:?^9]M8%BiEK9-]['?f/cTEM2X`(?+DR_<;5bYS9%B\G/G(LdJ'MW&@)euLK]aMEYGbL@3R%j$J\(FQHf6)4%*:g4<
%@;PU+[=TWXV83NlkV:?ALHO=@MNKcu\>G\d*#d#6h+rJo/\e3!mUl@IV=.-.nnW"RDa3,,Xm/PQnn;gFVE/G<pQcot"+R@H3g3.%
%F)P(K<cr7rdSqS'qVL^/Dr>Qa8S9gCE[Fq2_g6RLX;`h:iG`-*`!4bOk$JKJRXCfoRE&3gmq3?RIRYd.K;2P<V_D(1<aL#%5ofI/
%[DLR#)smYBhW^ahki3/c7K'nDkgEZC'm[<D7RnLNLdRlF^1Qn&gAOfeZ2SmSqh^6=Ddlg)TC)0`'\sEh'J3?d#L[c^55e\_I/Ge5
%55p7Jgda1gTJ?5sRH+/=-Zj_5'9sMOX1B!tBO2>&,47(>6fEbt)BSn_[=TWXV87@>Jf`Al^@D!=I/bZ(,mm[pA4LuWpo2?^XugPJ
%0GO@_V4g[BLu$RKf*"YRg.ei]oFd'SkgH@9PoQ-%3?1Il4PEh@&;PY*W\F.G7^[gmL8?'e+G:fb/:L,Kn.QeC2f3rj$<6nL0/34p
%hPGPSb;ORKId>E<#OC\oES`j;H=dZ<fAC&n-1sYb#OC+t1Uc>f*NUp//bsWc/Z#G!p$K4O-I"rk-Y_/_hd^(XR9mHu>`MCRfppT/
%B'V>Y(+.'!4Sa)*/^D*+Kpt]o]VWCu.olkEc440X^\0W9jsTSoF(uV'be2bQq"SE&=Hd<djHgO#S$AUa\2V%nHAob:hK@r7N;`+`
%QCo>iYkFhQ\?k61#Mhl2QL+QEE>/dQ\$F3JT$$XbM@0&7m_%u4s3SG$)Pda]K<c?hkdcE!6RJ//6\][b@G@'MV-5h7VGc`B>QBQW
%]:hPAoBE5ScA.Jq9JZAT2rn%&XC:sS@!j]QUX@pU]:=o9@po"?XH%RC]bf27i-VVSlRQU4[bQW7;=Z*3e,=agYC2n8EX.mCIS3o!
%`,g6Y?,c4DFYC&/]1a3FBtINC`U$O%IikWo6MIidlFF;^PM1E&h=*9Hl\7R0X#H1?7)%*`qUb!2fl))iq-,a%lh=ZY3nlmtXX<5o
%3E`!Lo_8sseGek0J,K'4qu?Qk_l$9Nr9dq+s24#LrSdYRr3+F2r:W(!q"+7[oD.MF5Q:1KJ,0'sTDuP'YEqKOnG1C[q9okH?iKsF
%J,3L`r/promsb$.J,[LGroX4]fYL1X~>
%AI9_PrivateDataEnd
